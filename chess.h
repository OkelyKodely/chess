/* 
 * File:   chess.h
 * Author: dhcho
 */
#define ID_FILE_EXIT 9001
#define ID_FILE_PLAY 9002
#define ID_TIMER_5MIN 9003
#define ID_TIMER_10MIN 9004
#define ID_TIMER_15MIN 9005
#define ID_TIMER_20MIN 9006
#define ID_TIMER_25MIN 9007
#define ID_TIMER_30MIN 9008
#define ID_TIMER_35MIN 9009
#define ID_TIMER_40MIN 9010
#define ID_TIMER_45MIN 9011
#define ID_TIMER_50MIN 9012
#define ID_TIMER_55MIN 9013
#define ID_TIMER_60MIN 9014
    
boolean firstTime = TRUE;
char clickedOne = 'g';
char turn;
const char g_szClassName[] = "Chess";

WNDCLASSEX wc;
HWND hwnd;
MSG Msg;
HDC hdc;

struct GreyPawnBase {
    int x1, y1, x2, y2;
    int posX, posY;
    boolean clicked;
    boolean firstTimeMove;

} greyPawnsBase[8];

struct RedPawnBase {
    int x1, y1, x2, y2;
    int posX, posY;
    boolean clicked;
    boolean firstTimeMove;

} redPawnsBase[8];

struct Box {
    int posX, posY;
    boolean clear;
    boolean clicked;

} boxes[8][8];

struct RedRook2Ellipse {
    int x1, y1, x2, y2;

} redRook2Ellipse;

struct RedRook2Rectangle1 {
    int posX, posY;
    boolean clicked;
    boolean failedpath;
    int x1, y1, x2, y2;

} redRook2Rectangle1;

struct RedRook2Rectangle2 {
    int x1, y1, x2, y2;

} redRook2Rectangle2;

struct RedRook2Base {
    int x1, y1, x2, y2;

} redRook2Base;

struct RedRook1Ellipse {
    int x1, y1, x2, y2;

} redRook1Ellipse;

struct RedRook1Rectangle1 {
    int posX, posY;
    boolean clicked;
    boolean failedpath;
    int x1, y1, x2, y2;

} redRook1Rectangle1;

struct RedRook1Rectangle2 {
    int x1, y1, x2, y2;

} redRook1Rectangle2;

struct RedRook1Base {
    int x1, y1, x2, y2;

} redRook1Base;

struct GreyRook2Ellipse {
    int x1, y1, x2, y2;

} greyRook2Ellipse;

struct GreyRook2Rectangle1 {
    int posX, posY;
    boolean clicked;
    boolean failedpath;
    int x1, y1, x2, y2;

} greyRook2Rectangle1;

struct GreyRook2Rectangle2 {
    int x1, y1, x2, y2;

} greyRook2Rectangle2;

struct GreyRook2Base {
    int x1, y1, x2, y2;

} greyRook2Base;

struct GreyRook1Ellipse {
    int x1, y1, x2, y2;

} greyRook1Ellipse;

struct GreyRook1Rectangle1 {
    int posX, posY;
    boolean clicked;
    boolean failedpath;
    int x1, y1, x2, y2;

} greyRook1Rectangle1;

struct GreyRook1Rectangle2 {
    int x1, y1, x2, y2;

} greyRook1Rectangle2;

struct GreyRook1Base {
    int x1, y1, x2, y2;

} greyRook1Base;

struct GreyKnight1Base {
    int x1, y1, x2, y2;

} greyKnight1Base;

struct GreyKnight1Ellipse {
    int x1, y1, x2, y2;

} greyKnight1Ellipse;

struct GreyKnight1Rectangle1 {
    int posX, posY;
    boolean clicked;
    int x1, y1, x2, y2;

} greyKnight1Rectangle1;

struct GreyKnight1Rectangle2 {
    int x1, y1, x2, y2;

} greyKnight1Rectangle2;

struct GreyKnight2Base {
    int x1, y1, x2, y2;

} greyKnight2Base;

struct GreyKnight2Ellipse {
    int x1, y1, x2, y2;

} greyKnight2Ellipse;

struct GreyKnight2Rectangle1 {
    int posX, posY;
    boolean clicked;
    int x1, y1, x2, y2;

} greyKnight2Rectangle1;

struct GreyKnight2Rectangle2 {
    int x1, y1, x2, y2;

} greyKnight2Rectangle2;

struct RedKnight2Base {
    int x1, y1, x2, y2;

} redKnight2Base;

struct RedKnight2Ellipse {
    int x1, y1, x2, y2;

} redKnight2Ellipse;

struct RedKnight2Rectangle1 {
    int posX, posY;
    boolean clicked;
    int x1, y1, x2, y2;

} redKnight2Rectangle1;

struct RedKnight2Rectangle2 {
    int x1, y1, x2, y2;

} redKnight2Rectangle2;

struct RedKnight1Base {
    int x1, y1, x2, y2;

} redKnight1Base;

struct RedKnight1Ellipse {
    int x1, y1, x2, y2;

} redKnight1Ellipse;

struct RedKnight1Rectangle1 {
    int posX, posY;
    boolean clicked;
    int x1, y1, x2, y2;

} redKnight1Rectangle1;

struct RedKnight1Rectangle2 {
    int x1, y1, x2, y2;

} redKnight1Rectangle2;

struct GreyKingRectangle {
    int x1, y1, x2, y2;

} greyKingRectangle;

struct GreyKingSquare {
    int posX, posY;
    int x1, y1, x2, y2;
    boolean clicked;

} greyKingSquare;

struct GreyKingEllipse {
    int x1, y1, x2, y2;

} greyKingEllipse;

struct GreyKingBase {
    int x1, y1, x2, y2;

} greyKingBase;

struct RedKingRectangle {
    int x1, y1, x2, y2;

} redKingRectangle;

struct RedKingSquare {
    int posX, posY;
    int x1, y1, x2, y2;
    boolean clicked;

} redKingSquare;

struct RedKingEllipse {
    int x1, y1, x2, y2;

} redKingEllipse;

struct RedKingBase {
    int x1, y1, x2, y2;

} redKingBase;

struct GreyQueenRectangle {
    int x1, y1, x2, y2;

} greyQueenRectangle1, greyQueenRectangle2, greyQueenRectangle3;

struct GreyQueenSquare {
    int posX, posY;
    int x1, y1, x2, y2;
    boolean clicked;
    boolean failedpath;

} greyQueenSquare;

struct GreyQueenEllipse {
    int x1, y1, x2, y2;
} greyQueenEllipse;

struct GreyQueenBase {
    int x1, y1, x2, y2;

} greyQueenBase;

struct GreyQueenRectangleK {
    int x1, y1, x2, y2;

} greyQueenRectangle1K[8], greyQueenRectangle2K[8], greyQueenRectangle3K[8];

struct GreyQueenSquareK {
    int posX, posY;
    int x1, y1, x2, y2;
    boolean clicked;
    boolean failedpath;

} greyQueenSquareK[8];

struct GreyQueenEllipseK {
    int x1, y1, x2, y2;
} greyQueenEllipseK[8];

struct GreyQueenBaseK {
    int x1, y1, x2, y2;

} greyQueenBaseK[8];

struct RedQueenRectangle {
    int x1, y1, x2, y2;

} redQueenRectangle1, redQueenRectangle2, redQueenRectangle3;

struct RedQueenSquare {
    int posX, posY;
    int x1, y1, x2, y2;
    boolean clicked;
    boolean failedpath;

} redQueenSquare;

struct RedQueenEllipse {
    int x1, y1, x2, y2;

} redQueenEllipse;

struct RedQueenBase {
    int x1, y1, x2, y2;

} redQueenBase;

struct RedQueenRectangleK {
    int x1, y1, x2, y2;

} redQueenRectangle1K[8], redQueenRectangle2K[8], redQueenRectangle3K[8];

struct RedQueenSquareK {
    int posX, posY;
    int x1, y1, x2, y2;
    boolean clicked;
    boolean failedpath;

} redQueenSquareK[8];

struct RedQueenEllipseK {
    int x1, y1, x2, y2;

} redQueenEllipseK[8];

struct RedQueenBaseK {
    int x1, y1, x2, y2;

} redQueenBaseK[8];

struct RedBishop1Rectangle {
    int x1, y1, x2, y2;

} redBishop1Rectangle;

struct RedBishop1Square {
    int posX, posY;
    int x1, y1, x2, y2;
    boolean clicked;
    boolean failedpath;

} redBishop1Square;

struct RedBishop1Ellipse {
    int x1, y1, x2, y2;

} redBishop1Ellipse;

struct RedBishop1Base {
    int x1, y1, x2, y2;

} redBishop1Base;

struct RedBishop2Rectangle {
    int x1, y1, x2, y2;

} redBishop2Rectangle;

struct RedBishop2Square {
    int posX, posY;
    int x1, y1, x2, y2;
    boolean clicked;
    boolean failedpath;

} redBishop2Square;

struct RedBishop2Ellipse {
    int x1, y1, x2, y2;

} redBishop2Ellipse;

struct RedBishop2Base {
    int x1, y1, x2, y2;

} redBishop2Base;

struct GreyBishop1Rectangle {
    int x1, y1, x2, y2;

} greyBishop1Rectangle;

struct GreyBishop1Square {
    int posX, posY;
    int x1, y1, x2, y2;
    boolean clicked;
    boolean failedpath;

} greyBishop1Square;

struct GreyBishop1Ellipse {
    int x1, y1, x2, y2;

} greyBishop1Ellipse;

struct GreyBishop1Base {
    int x1, y1, x2, y2;

} greyBishop1Base;

struct GreyBishop2Rectangle {
    int x1, y1, x2, y2;

} greyBishop2Rectangle;

struct GreyBishop2Square {
    int posX, posY;
    int x1, y1, x2, y2;
    boolean clicked;
    boolean failedpath;

} greyBishop2Square;

struct GreyBishop2Ellipse {
    int x1, y1, x2, y2;

} greyBishop2Ellipse;

struct GreyBishop2Base {
    int x1, y1, x2, y2;

} greyBishop2Base;

struct GreyPawnEllipse {
    int x1, y1, x2, y2;

} greyPawnsEllipse[8];

struct RedPawnEllipse {
    int x1, y1, x2, y2;

} redPawnsEllipse[8];

HBITMAP hBitmap;
HINSTANCE hInst;

void DrawChessBoard() {
    BITMAP          bitmap;
    HDC             hdcMem;
    HGDIOBJ         oldBitmap;

    hBitmap = (HBITMAP)LoadImage(hInst, "bitmap3.bmp", IMAGE_BITMAP, 0, 0, LR_LOADFROMFILE);

    hdcMem = CreateCompatibleDC(hdc);
    oldBitmap = SelectObject(hdcMem, hBitmap);

    GetObject(hBitmap, sizeof(bitmap), &bitmap);
    BitBlt(hdc, 20, 0, bitmap.bmWidth, bitmap.bmHeight, hdcMem, 0, 0, SRCCOPY);

    firstTime = FALSE;
    MoveToEx(hdc, 0, 0, NULL);
    HBRUSH brush;
    brush = CreateSolidBrush(RGB(0,0,0));
    RECT rect = {0, 0, 820, 820};
    FillRect(hdc, &rect, brush);
    int x;
    for(int j=0; j<8; j++) {
        for(int i=0; i<8; ++i) {
            if(i == 1 || i == 3 || i == 5 || i == 7) {
                if(j == 1 || j == 3 || j == 5 || j == 7) {
                    x = 255;
                } else
                    x = 0;
            } else {
                if(j == 1 || j == 3 || j == 5 || j == 7) {
                    x = 0;
                } else
                    x = 255;
            }
            brush = CreateSolidBrush(RGB(55,55,55));
            if(x == 255) {
                brush = CreateSolidBrush(RGB(255,255,255));
            }
            RECT rect = {i*100+10, j*100+10, i*100+100+10, j*100+100+10};
            FillRect(hdc, &rect, brush);
        }
    }
    DeleteObject(brush);
}

int GetTextSize (LPSTR a0)
{
    for (int iLoopCounter = 0; ;iLoopCounter++)
    {
        if (a0 [iLoopCounter] == '\0')
            return iLoopCounter;
    }
}

boolean fff = TRUE;

void DisableMaximizeButton(HWND hwnd) {
    SetWindowLong(hwnd, GWL_STYLE, GetWindowLong(hwnd, GWL_STYLE) & ~WS_MAXIMIZEBOX);
}

boolean moveGreyQueen(UINT msg, int j, int i, int pos, int o) {

    if(redKnight1Rectangle1.posX == greyQueenSquare.posX &&
       redKnight1Rectangle1.posY == greyQueenSquare.posY) {
        greyQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(redKnight2Rectangle1.posX == greyQueenSquare.posX &&
       redKnight2Rectangle1.posY == greyQueenSquare.posY) {
        greyQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(redBishop1Square.posX == greyQueenSquare.posX &&
       redBishop1Square.posY == greyQueenSquare.posY) {
        greyQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(redBishop2Square.posX == greyQueenSquare.posX &&
       redBishop2Square.posY == greyQueenSquare.posY) {
        greyQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(redRook1Rectangle1.posX == greyQueenSquare.posX &&
       redRook1Rectangle1.posY == greyQueenSquare.posY) {
        greyQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(redRook2Rectangle1.posX == greyQueenSquare.posX &&
       redRook2Rectangle1.posY == greyQueenSquare.posY) {
        greyQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(redQueenSquare.posX == greyQueenSquare.posX &&
       redQueenSquare.posY == greyQueenSquare.posY) {
        greyQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    for(int g=0; g<8; g++) {
        if(redPawnsBase[g].posX == greyQueenSquare.posX &&
           redPawnsBase[g].posY == greyQueenSquare.posY) {
            greyQueenSquare.failedpath = TRUE;
            return TRUE;
        }
    }
    if(redKingSquare.posX == greyQueenSquare.posX &&
       redKingSquare.posY == greyQueenSquare.posY) {
        greyQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(pos < 0) {
        boolean f = FALSE;
        if(pos < -100) {
            f = moveGreyQueen(msg, j, i, pos + 100, o);
        }
        if(!f) {
            if(pos == o) {

                greyQueenSquare.posY = greyQueenSquare.posY - 100;
                greyQueenSquare.y1 = greyQueenSquare.y1 - 100;
                greyQueenSquare.y2 = greyQueenSquare.y2 - 100;
                greyQueenRectangle1.y1 = greyQueenRectangle1.y1 - 100;
                greyQueenRectangle1.y2 = greyQueenRectangle1.y2 - 100;
                greyQueenRectangle2.y1 = greyQueenRectangle2.y1 - 100;
                greyQueenRectangle2.y2 = greyQueenRectangle2.y2 - 100;
                greyQueenRectangle3.y1 = greyQueenRectangle3.y1 - 100;
                greyQueenRectangle3.y2 = greyQueenRectangle3.y2 - 100;
                greyQueenEllipse.y1 = greyQueenEllipse.y1 - 100;
                greyQueenEllipse.y2 = greyQueenEllipse.y2 - 100;
                greyQueenBase.y1 = greyQueenBase.y1 - 100;
                greyQueenBase.y2 = greyQueenBase.y2 - 100;

                if(j*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        if(greyPawnsBase[s].posY == greyQueenSquare.posY &&
                           greyPawnsBase[s].posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop1Square.posY == greyQueenSquare.posY &&
                           greyBishop1Square.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop2Square.posY == greyQueenSquare.posY &&
                           greyBishop2Square.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight1Rectangle1.posY == greyQueenSquare.posY &&
                           greyKnight1Rectangle1.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight2Rectangle1.posY == greyQueenSquare.posY &&
                           greyKnight2Rectangle1.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook1Rectangle1.posY == greyQueenSquare.posY &&
                           greyRook1Rectangle1.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook2Rectangle1.posY == greyQueenSquare.posY &&
                           greyRook2Rectangle1.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKingSquare.posY == greyQueenSquare.posY &&
                           greyKingSquare.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redPawnsBase[s].posY == greyQueenSquare.posY &&
                           redPawnsBase[s].posX == greyQueenSquare.posX) {
                            redPawnsBase[s].posX = -1000;
                            redPawnsBase[s].x1 = -1000;
                            redPawnsBase[s].x2 = -1000;
                            redPawnsEllipse[s].x1 = -1000;
                            redPawnsEllipse[s].x2 = -1000;
                        }
                        if(redQueenSquare.posY == greyQueenSquare.posY &&
                           redQueenSquare.posX == greyQueenSquare.posX) {
                            redQueenSquare.posX = -1000;
                            redQueenSquare.x1 = -1000;
                            redQueenSquare.x2 = -1000;
                            redQueenBase.x1 = -1000;
                            redQueenBase.x2 = -1000;
                            redQueenEllipse.x1 = -1000;
                            redQueenEllipse.x2 = -1000;
                            redQueenRectangle1.x1 = -1000;
                            redQueenRectangle1.x2 = -1000;
                            redQueenRectangle2.x1 = -1000;
                            redQueenRectangle2.x2 = -1000;
                            redQueenRectangle3.x1 = -1000;
                            redQueenRectangle3.x2 = -1000;
                        }
                        if(redRook1Rectangle1.posY == greyQueenSquare.posY &&
                           redRook1Rectangle1.posX == greyQueenSquare.posX) {
                            redRook1Rectangle1.posX = -1000;
                            redRook1Rectangle1.x1 = -1000;
                            redRook1Rectangle1.x2 = -1000;
                            redRook1Rectangle2.x1 = -1000;
                            redRook1Rectangle2.x2 = -1000;
                            redRook1Base.x1 = -1000;
                            redRook1Base.x2 = -1000;
                            redRook1Ellipse.x1 = -1000;
                            redRook1Ellipse.x2 = -1000;
                        }
                        if(redRook2Rectangle1.posY == greyQueenSquare.posY &&
                           redRook2Rectangle1.posX == greyQueenSquare.posX) {
                            redRook2Rectangle1.posX = -1000;
                            redRook2Rectangle1.x1 = -1000;
                            redRook2Rectangle1.x2 = -1000;
                            redRook2Rectangle2.x1 = -1000;
                            redRook2Rectangle2.x2 = -1000;
                            redRook2Base.x1 = -1000;
                            redRook2Base.x2 = -1000;
                            redRook2Ellipse.x1 = -1000;
                            redRook2Ellipse.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    if(greyPawnsBase[s].posY == greyQueenSquare.posY - 100 &&
                       greyPawnsBase[s].posX == greyQueenSquare.posX) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redPawnsBase[s].posY == greyQueenSquare.posY - 100 &&
                       redPawnsBase[s].posX == greyQueenSquare.posX) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redQueenSquare.posY == greyQueenSquare.posY - 100 &&
                   redQueenSquare.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == greyQueenSquare.posY - 100 &&
                   redBishop1Square.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == greyQueenSquare.posY - 100 &&
                   redBishop2Square.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook1Rectangle1.posY == greyQueenSquare.posY - 100 &&
                   greyRook1Rectangle1.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == greyQueenSquare.posY - 100 &&
                   greyRook2Rectangle1.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == greyQueenSquare.posY - 100 &&
                   greyKnight1Rectangle1.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == greyQueenSquare.posY - 100 &&
                   greyKnight2Rectangle1.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == greyQueenSquare.posY - 100 &&
                   redBishop1Square.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == greyQueenSquare.posY - 100 &&
                   redBishop2Square.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == greyQueenSquare.posY - 100 &&
                   redRook1Rectangle1.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == greyQueenSquare.posY - 100 &&
                   redRook2Rectangle1.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == greyQueenSquare.posY - 100 &&
                   redKnight1Rectangle1.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == greyQueenSquare.posY - 100 &&
                   redKnight2Rectangle1.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }

                
                if(!flag) {
                    greyQueenSquare.posY = greyQueenSquare.posY - 100;
                    greyQueenSquare.y1 = greyQueenSquare.y1 - 100;
                    greyQueenSquare.y2 = greyQueenSquare.y2 - 100;
                    greyQueenRectangle1.y1 = greyQueenRectangle1.y1 - 100;
                    greyQueenRectangle1.y2 = greyQueenRectangle1.y2 - 100;
                    greyQueenRectangle2.y1 = greyQueenRectangle2.y1 - 100;
                    greyQueenRectangle2.y2 = greyQueenRectangle2.y2 - 100;
                    greyQueenRectangle3.y1 = greyQueenRectangle3.y1 - 100;
                    greyQueenRectangle3.y2 = greyQueenRectangle3.y2 - 100;
                    greyQueenEllipse.y1 = greyQueenEllipse.y1 - 100;
                    greyQueenEllipse.y2 = greyQueenEllipse.y2 - 100;
                    greyQueenBase.y1 = greyQueenBase.y1 - 100;
                    greyQueenBase.y2 = greyQueenBase.y2 - 100;
                }

                return flag;
            }
        }

        else {

            greyQueenSquare.failedpath = TRUE;
            return TRUE;
        }
    } else if(pos > 0) {
        boolean f = FALSE;
        if(pos > 100) {
            f = moveGreyQueen(msg, j, i, pos - 100, o);
        }
        if(!f) {
            if(pos == o) {

                greyQueenSquare.posY = greyQueenSquare.posY + 100;
                greyQueenSquare.y1 = greyQueenSquare.y1 + 100;
                greyQueenSquare.y2 = greyQueenSquare.y2 + 100;
                greyQueenRectangle1.y1 = greyQueenRectangle1.y1 + 100;
                greyQueenRectangle1.y2 = greyQueenRectangle1.y2 + 100;
                greyQueenRectangle2.y1 = greyQueenRectangle2.y1 + 100;
                greyQueenRectangle2.y2 = greyQueenRectangle2.y2 + 100;
                greyQueenRectangle3.y1 = greyQueenRectangle3.y1 + 100;
                greyQueenRectangle3.y2 = greyQueenRectangle3.y2 + 100;
                greyQueenEllipse.y1 = greyQueenEllipse.y1 + 100;
                greyQueenEllipse.y2 = greyQueenEllipse.y2 + 100;
                greyQueenBase.y1 = greyQueenBase.y1 + 100;
                greyQueenBase.y2 = greyQueenBase.y2 + 100;

                if(j*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        if(greyPawnsBase[s].posY == greyQueenSquare.posY &&
                           greyPawnsBase[s].posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop1Square.posY == greyQueenSquare.posY &&
                           greyBishop1Square.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop2Square.posY == greyQueenSquare.posY &&
                           greyBishop2Square.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight1Rectangle1.posY == greyQueenSquare.posY &&
                           greyKnight1Rectangle1.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight2Rectangle1.posY == greyQueenSquare.posY &&
                           greyKnight2Rectangle1.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook1Rectangle1.posY == greyQueenSquare.posY &&
                           greyRook1Rectangle1.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook2Rectangle1.posY == greyQueenSquare.posY &&
                           greyRook2Rectangle1.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKingSquare.posY == greyQueenSquare.posY &&
                           greyKingSquare.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redPawnsBase[s].posY == greyQueenSquare.posY &&
                           redPawnsBase[s].posX == greyQueenSquare.posX) {
                            redPawnsBase[s].posX = -1000;
                            redPawnsBase[s].x1 = -1000;
                            redPawnsBase[s].x2 = -1000;
                            redPawnsEllipse[s].x1 = -1000;
                            redPawnsEllipse[s].x2 = -1000;
                        }
                        if(redQueenSquare.posY == greyQueenSquare.posY &&
                           redQueenSquare.posX == greyQueenSquare.posX) {
                            redQueenSquare.posX = -1000;
                            redQueenSquare.x1 = -1000;
                            redQueenSquare.x2 = -1000;
                            redQueenBase.x1 = -1000;
                            redQueenBase.x2 = -1000;
                            redQueenEllipse.x1 = -1000;
                            redQueenEllipse.x2 = -1000;
                            redQueenRectangle1.x1 = -1000;
                            redQueenRectangle1.x2 = -1000;
                            redQueenRectangle2.x1 = -1000;
                            redQueenRectangle2.x2 = -1000;
                            redQueenRectangle3.x1 = -1000;
                            redQueenRectangle3.x2 = -1000;
                        }
                        if(redRook1Rectangle1.posY == greyQueenSquare.posY &&
                           redRook1Rectangle1.posX == greyQueenSquare.posX) {
                            redRook1Rectangle1.posX = -1000;
                            redRook1Rectangle1.x1 = -1000;
                            redRook1Rectangle1.x2 = -1000;
                            redRook1Rectangle2.x1 = -1000;
                            redRook1Rectangle2.x2 = -1000;
                            redRook1Base.x1 = -1000;
                            redRook1Base.x2 = -1000;
                            redRook1Ellipse.x1 = -1000;
                            redRook1Ellipse.x2 = -1000;
                        }
                        if(redRook2Rectangle1.posY == greyQueenSquare.posY &&
                           redRook2Rectangle1.posX == greyQueenSquare.posX) {
                            redRook2Rectangle1.posX = -1000;
                            redRook2Rectangle1.x1 = -1000;
                            redRook2Rectangle1.x2 = -1000;
                            redRook2Rectangle2.x1 = -1000;
                            redRook2Rectangle2.x2 = -1000;
                            redRook2Base.x1 = -1000;
                            redRook2Base.x2 = -1000;
                            redRook2Ellipse.x1 = -1000;
                            redRook2Ellipse.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    if(greyPawnsBase[s].posY == greyQueenSquare.posY + 100 &&
                       greyPawnsBase[s].posX == greyQueenSquare.posX) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redPawnsBase[s].posY == greyQueenSquare.posY + 100 &&
                       redPawnsBase[s].posX == greyQueenSquare.posX) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redQueenSquare.posY == greyQueenSquare.posY + 100 &&
                   redQueenSquare.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == greyQueenSquare.posY + 100 &&
                   redBishop1Square.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == greyQueenSquare.posY + 100 &&
                   redBishop2Square.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook1Rectangle1.posY == greyQueenSquare.posY + 100 &&
                   greyRook1Rectangle1.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == greyQueenSquare.posY + 100 &&
                   greyRook2Rectangle1.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == greyQueenSquare.posY + 100 &&
                   greyKnight1Rectangle1.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == greyQueenSquare.posY + 100 &&
                   greyKnight2Rectangle1.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == greyQueenSquare.posY + 100 &&
                   redBishop1Square.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == greyQueenSquare.posY + 100 &&
                   redBishop2Square.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == greyQueenSquare.posY + 100 &&
                   redRook1Rectangle1.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == greyQueenSquare.posY + 100 &&
                   redRook2Rectangle1.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == greyQueenSquare.posY + 100 &&
                   redKnight1Rectangle1.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == greyQueenSquare.posY + 100 &&
                   redKnight2Rectangle1.posX == greyQueenSquare.posX) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    greyQueenSquare.posY = greyQueenSquare.posY + 100;
                    greyQueenSquare.y1 = greyQueenSquare.y1 + 100;
                    greyQueenSquare.y2 = greyQueenSquare.y2 + 100;
                    greyQueenRectangle1.y1 = greyQueenRectangle1.y1 + 100;
                    greyQueenRectangle1.y2 = greyQueenRectangle1.y2 + 100;
                    greyQueenRectangle2.y1 = greyQueenRectangle2.y1 + 100;
                    greyQueenRectangle2.y2 = greyQueenRectangle2.y2 + 100;
                    greyQueenRectangle3.y1 = greyQueenRectangle3.y1 + 100;
                    greyQueenRectangle3.y2 = greyQueenRectangle3.y2 + 100;
                    greyQueenEllipse.y1 = greyQueenEllipse.y1 + 100;
                    greyQueenEllipse.y2 = greyQueenEllipse.y2 + 100;
                    greyQueenBase.y1 = greyQueenBase.y1 + 100;
                    greyQueenBase.y2 = greyQueenBase.y2 + 100;
                }

                return flag;
            }
        }

        else {

            greyQueenSquare.failedpath = TRUE;
            return TRUE;
        }
    }
}

boolean moveGreyQueenSide(UINT msg, int j, int i, int pos, int o) {

    if(redKnight1Rectangle1.posX == greyQueenSquare.posX &&
       redKnight1Rectangle1.posY == greyQueenSquare.posY) {
        greyQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(redKnight2Rectangle1.posX == greyQueenSquare.posX &&
       redKnight2Rectangle1.posY == greyQueenSquare.posY) {
        greyQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(redBishop1Square.posX == greyQueenSquare.posX &&
       redBishop1Square.posY == greyQueenSquare.posY) {
        greyQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(redBishop2Square.posX == greyQueenSquare.posX &&
       redBishop2Square.posY == greyQueenSquare.posY) {
        greyQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(redRook1Rectangle1.posX == greyQueenSquare.posX &&
       redRook1Rectangle1.posY == greyQueenSquare.posY) {
        greyQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(redRook2Rectangle1.posX == greyQueenSquare.posX &&
       redRook2Rectangle1.posY == greyQueenSquare.posY) {
        greyQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(redQueenSquare.posX == greyQueenSquare.posX &&
       redQueenSquare.posY == greyQueenSquare.posY) {
        greyQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    for(int g=0; g<8; g++) {
        if(redPawnsBase[g].posX == greyQueenSquare.posX &&
           redPawnsBase[g].posY == greyQueenSquare.posY) {
            greyQueenSquare.failedpath = TRUE;
            return TRUE;
        }
    }
    if(pos < 0) {
        boolean f = FALSE;
        if(pos < -100) {
            f = moveGreyQueenSide(msg, j, i, pos + 100, o);
        }
        if(!f) {
            if(pos == o) {

                greyQueenSquare.posX = greyQueenSquare.posX - 100;
                greyQueenSquare.x1 = greyQueenSquare.x1 - 100;
                greyQueenSquare.x2 = greyQueenSquare.x2 - 100;
                greyQueenRectangle1.x1 = greyQueenRectangle1.x1 - 100;
                greyQueenRectangle1.x2 = greyQueenRectangle1.x2 - 100;
                greyQueenRectangle2.x1 = greyQueenRectangle2.x1 - 100;
                greyQueenRectangle2.x2 = greyQueenRectangle2.x2 - 100;
                greyQueenRectangle3.x1 = greyQueenRectangle3.x1 - 100;
                greyQueenRectangle3.x2 = greyQueenRectangle3.x2 - 100;
                greyQueenEllipse.x1 = greyQueenEllipse.x1 - 100;
                greyQueenEllipse.x2 = greyQueenEllipse.x2 - 100;
                greyQueenBase.x1 = greyQueenBase.x1 - 100;
                greyQueenBase.x2 = greyQueenBase.x2 - 100;

                if(i*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        if(greyPawnsBase[s].posY == greyQueenSquare.posY &&
                           greyPawnsBase[s].posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop1Square.posY == greyQueenSquare.posY &&
                           greyBishop1Square.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop2Square.posY == greyQueenSquare.posY &&
                           greyBishop2Square.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight1Rectangle1.posY == greyQueenSquare.posY &&
                           greyKnight1Rectangle1.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight2Rectangle1.posY == greyQueenSquare.posY &&
                           greyKnight2Rectangle1.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook1Rectangle1.posY == greyQueenSquare.posY &&
                           greyRook1Rectangle1.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook2Rectangle1.posY == greyQueenSquare.posY &&
                           greyRook2Rectangle1.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKingSquare.posY == greyQueenSquare.posY &&
                           greyKingSquare.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redPawnsBase[s].posY == greyQueenSquare.posY &&
                           redPawnsBase[s].posX == greyQueenSquare.posX) {
                            redPawnsBase[s].posX = -1000;
                            redPawnsBase[s].x1 = -1000;
                            redPawnsBase[s].x2 = -1000;
                            redPawnsEllipse[s].x1 = -1000;
                            redPawnsEllipse[s].x2 = -1000;
                        }
                        if(redQueenSquare.posY == greyQueenSquare.posY &&
                           redQueenSquare.posX == greyQueenSquare.posX) {
                            redQueenSquare.posX = -1000;
                            redQueenSquare.x1 = -1000;
                            redQueenSquare.x2 = -1000;
                            redQueenBase.x1 = -1000;
                            redQueenBase.x2 = -1000;
                            redQueenEllipse.x1 = -1000;
                            redQueenEllipse.x2 = -1000;
                            redQueenRectangle1.x1 = -1000;
                            redQueenRectangle1.x2 = -1000;
                            redQueenRectangle2.x1 = -1000;
                            redQueenRectangle2.x2 = -1000;
                            redQueenRectangle3.x1 = -1000;
                            redQueenRectangle3.x2 = -1000;
                        }
                        if(redRook1Rectangle1.posY == greyQueenSquare.posY &&
                           redRook1Rectangle1.posX == greyQueenSquare.posX) {
                            redRook1Rectangle1.posX = -1000;
                            redRook1Rectangle1.x1 = -1000;
                            redRook1Rectangle1.x2 = -1000;
                            redRook1Rectangle2.x1 = -1000;
                            redRook1Rectangle2.x2 = -1000;
                            redRook1Base.x1 = -1000;
                            redRook1Base.x2 = -1000;
                            redRook1Ellipse.x1 = -1000;
                            redRook1Ellipse.x2 = -1000;
                        }
                        if(redRook2Rectangle1.posY == greyQueenSquare.posY &&
                           redRook2Rectangle1.posX == greyQueenSquare.posX) {
                            redRook2Rectangle1.posX = -1000;
                            redRook2Rectangle1.x1 = -1000;
                            redRook2Rectangle1.x2 = -1000;
                            redRook2Rectangle2.x1 = -1000;
                            redRook2Rectangle2.x2 = -1000;
                            redRook2Base.x1 = -1000;
                            redRook2Base.x2 = -1000;
                            redRook2Ellipse.x1 = -1000;
                            redRook2Ellipse.x2 = -1000;
                        }
                        if(redKnight1Rectangle1.posY == greyQueenSquare.posY &&
                           redKnight1Rectangle1.posX == greyQueenSquare.posX) {
                            redKnight1Rectangle1.posX = -1000;
                            redKnight1Rectangle1.x1 = -1000;
                            redKnight1Rectangle1.x2 = -1000;
                            redKnight1Rectangle2.x1 = -1000;
                            redKnight1Rectangle2.x2 = -1000;
                            redKnight1Base.x1 = -1000;
                            redKnight1Base.x2 = -1000;
                            redKnight1Ellipse.x1 = -1000;
                            redKnight1Ellipse.x2 = -1000;
                        }
                        if(redKnight2Rectangle1.posY == greyQueenSquare.posY &&
                           redKnight2Rectangle1.posX == greyQueenSquare.posX) {
                            redKnight2Rectangle1.posX = -1000;
                            redKnight2Rectangle1.x1 = -1000;
                            redKnight2Rectangle1.x2 = -1000;
                            redKnight2Rectangle2.x1 = -1000;
                            redKnight2Rectangle2.x2 = -1000;
                            redKnight2Base.x1 = -1000;
                            redKnight2Base.x2 = -1000;
                            redKnight2Ellipse.x1 = -1000;
                            redKnight2Ellipse.x2 = -1000;
                        }
                        if(redBishop1Square.posY == greyQueenSquare.posY &&
                           redBishop1Square.posX == greyQueenSquare.posX) {
                            redBishop1Square.posX = -1000;
                            redBishop1Square.x1 = -1000;
                            redBishop1Square.x2 = -1000;
                            redBishop1Rectangle.x1 = -1000;
                            redBishop1Rectangle.x2 = -1000;
                            redBishop1Base.x1 = -1000;
                            redBishop1Base.x2 = -1000;
                            redBishop1Ellipse.x1 = -1000;
                            redBishop1Ellipse.x2 = -1000;
                        }
                        if(redBishop2Square.posY == greyQueenSquare.posY &&
                           redBishop2Square.posX == greyQueenSquare.posX) {
                            redBishop2Square.posX = -1000;
                            redBishop2Square.x1 = -1000;
                            redBishop2Square.x2 = -1000;
                            redBishop2Rectangle.x1 = -1000;
                            redBishop2Rectangle.x2 = -1000;
                            redBishop2Base.x1 = -1000;
                            redBishop2Base.x2 = -1000;
                            redBishop2Ellipse.x1 = -1000;
                            redBishop2Ellipse.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    if(greyPawnsBase[s].posY == greyQueenSquare.posY &&
                       greyPawnsBase[s].posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redPawnsBase[s].posY == greyQueenSquare.posY &&
                       redPawnsBase[s].posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redQueenSquare.posY == greyQueenSquare.posY &&
                   redQueenSquare.posX == greyQueenSquare.posX - 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == greyQueenSquare.posY &&
                   redBishop1Square.posX == greyQueenSquare.posX - 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == greyQueenSquare.posY &&
                   redBishop2Square.posX == greyQueenSquare.posX - 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook1Rectangle1.posY == greyQueenSquare.posY &&
                   greyRook1Rectangle1.posX == greyQueenSquare.posX - 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == greyQueenSquare.posY &&
                   greyRook2Rectangle1.posX == greyQueenSquare.posX - 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == greyQueenSquare.posY &&
                   greyKnight1Rectangle1.posX == greyQueenSquare.posX - 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == greyQueenSquare.posY &&
                   greyKnight2Rectangle1.posX == greyQueenSquare.posX - 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == greyQueenSquare.posY &&
                   redBishop1Square.posX == greyQueenSquare.posX - 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == greyQueenSquare.posY &&
                   redBishop2Square.posX == greyQueenSquare.posX - 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == greyQueenSquare.posY &&
                   redRook1Rectangle1.posX == greyQueenSquare.posX - 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == greyQueenSquare.posY &&
                   redRook2Rectangle1.posX == greyQueenSquare.posX - 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == greyQueenSquare.posY &&
                   redKnight1Rectangle1.posX == greyQueenSquare.posX - 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == greyQueenSquare.posY &&
                   redKnight2Rectangle1.posX == greyQueenSquare.posX - 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    greyQueenSquare.posX = greyQueenSquare.posX - 100;
                    greyQueenSquare.x1 = greyQueenSquare.x1 - 100;
                    greyQueenSquare.x2 = greyQueenSquare.x2 - 100;
                    greyQueenRectangle1.x1 = greyQueenRectangle1.x1 - 100;
                    greyQueenRectangle1.x2 = greyQueenRectangle1.x2 - 100;
                    greyQueenRectangle2.x1 = greyQueenRectangle2.x1 - 100;
                    greyQueenRectangle2.x2 = greyQueenRectangle2.x2 - 100;
                    greyQueenRectangle3.x1 = greyQueenRectangle3.x1 - 100;
                    greyQueenRectangle3.x2 = greyQueenRectangle3.x2 - 100;
                    greyQueenEllipse.x1 = greyQueenEllipse.x1 - 100;
                    greyQueenEllipse.x2 = greyQueenEllipse.x2 - 100;
                    greyQueenBase.x1 = greyQueenBase.x1 - 100;
                    greyQueenBase.x2 = greyQueenBase.x2 - 100;
                }

                return flag;
            }
        }

        else {

            greyQueenSquare.failedpath = TRUE;
            return TRUE;
        }
    } else if(pos > 0) {
        boolean f = FALSE;
        if(pos > 100) {
            f = moveGreyQueenSide(msg, j, i, pos - 100, o);
        }
        if(!f) {
            if(pos == o) {

                greyQueenSquare.posX = greyQueenSquare.posX + 100;
                greyQueenSquare.x1 = greyQueenSquare.x1 + 100;
                greyQueenSquare.x2 = greyQueenSquare.x2 + 100;
                greyQueenRectangle1.x1 = greyQueenRectangle1.x1 + 100;
                greyQueenRectangle1.x2 = greyQueenRectangle1.x2 + 100;
                greyQueenRectangle2.x1 = greyQueenRectangle2.x1 + 100;
                greyQueenRectangle2.x2 = greyQueenRectangle2.x2 + 100;
                greyQueenRectangle3.x1 = greyQueenRectangle3.x1 + 100;
                greyQueenRectangle3.x2 = greyQueenRectangle3.x2 + 100;
                greyQueenEllipse.x1 = greyQueenEllipse.x1 + 100;
                greyQueenEllipse.x2 = greyQueenEllipse.x2 + 100;
                greyQueenBase.x1 = greyQueenBase.x1 + 100;
                greyQueenBase.x2 = greyQueenBase.x2 + 100;

                if(i*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        if(greyPawnsBase[i].posY == greyQueenSquare.posY &&
                           greyPawnsBase[i].posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop1Square.posY == greyQueenSquare.posY &&
                           greyBishop1Square.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop2Square.posY == greyQueenSquare.posY &&
                           greyBishop2Square.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight1Rectangle1.posY == greyQueenSquare.posY &&
                           greyKnight1Rectangle1.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight2Rectangle1.posY == greyQueenSquare.posY &&
                           greyKnight2Rectangle1.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook1Rectangle1.posY == greyQueenSquare.posY &&
                           greyRook1Rectangle1.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook2Rectangle1.posY == greyQueenSquare.posY &&
                           greyRook2Rectangle1.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKingSquare.posY == greyQueenSquare.posY &&
                           greyKingSquare.posX == greyQueenSquare.posX) {
                            greyQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redPawnsBase[s].posY == greyQueenSquare.posY &&
                           redPawnsBase[s].posX == greyQueenSquare.posX) {
                            redPawnsBase[s].posX = -1000;
                            redPawnsBase[s].x1 = -1000;
                            redPawnsBase[s].x2 = -1000;
                            redPawnsEllipse[s].x1 = -1000;
                            redPawnsEllipse[s].x2 = -1000;
                        }
                        if(redQueenSquare.posY == greyQueenSquare.posY &&
                           redQueenSquare.posX == greyQueenSquare.posX) {
                            redQueenSquare.posX = -1000;
                            redQueenSquare.x1 = -1000;
                            redQueenSquare.x2 = -1000;
                            redQueenBase.x1 = -1000;
                            redQueenBase.x2 = -1000;
                            redQueenEllipse.x1 = -1000;
                            redQueenEllipse.x2 = -1000;
                            redQueenRectangle1.x1 = -1000;
                            redQueenRectangle1.x2 = -1000;
                            redQueenRectangle2.x1 = -1000;
                            redQueenRectangle2.x2 = -1000;
                            redQueenRectangle3.x1 = -1000;
                            redQueenRectangle3.x2 = -1000;
                        }
                        if(redKnight1Rectangle1.posY == greyQueenSquare.posY &&
                           redKnight1Rectangle1.posX == greyQueenSquare.posX) {
                            redKnight1Rectangle1.posX = -1000;
                            redKnight1Rectangle1.x1 = -1000;
                            redKnight1Rectangle1.x2 = -1000;
                            redKnight1Rectangle2.x1 = -1000;
                            redKnight1Rectangle2.x2 = -1000;
                            redKnight1Base.x1 = -1000;
                            redKnight1Base.x2 = -1000;
                            redKnight1Ellipse.x1 = -1000;
                            redKnight1Ellipse.x2 = -1000;
                        }
                        if(redKnight2Rectangle1.posY == greyQueenSquare.posY &&
                           redKnight2Rectangle1.posX == greyQueenSquare.posX) {
                            redKnight2Rectangle1.posX = -1000;
                            redKnight2Rectangle1.x1 = -1000;
                            redKnight2Rectangle1.x2 = -1000;
                            redKnight2Rectangle2.x1 = -1000;
                            redKnight2Rectangle2.x2 = -1000;
                            redKnight2Base.x1 = -1000;
                            redKnight2Base.x2 = -1000;
                            redKnight2Ellipse.x1 = -1000;
                            redKnight2Ellipse.x2 = -1000;
                        }
                        if(redQueenSquare.posY == greyQueenSquare.posY &&
                           redQueenSquare.posX == greyQueenSquare.posX) {
                            redQueenSquare.posX = -1000;
                            redQueenSquare.x1 = -1000;
                            redQueenSquare.x2 = -1000;
                            redQueenRectangle1.x1 = -1000;
                            redQueenRectangle1.x2 = -1000;
                            redQueenRectangle2.x1 = -1000;
                            redQueenRectangle2.x2 = -1000;
                            redQueenRectangle3.x1 = -1000;
                            redQueenRectangle3.x2 = -1000;
                            redQueenBase.x1 = -1000;
                            redQueenBase.x2 = -1000;
                            redQueenEllipse.x1 = -1000;
                            redQueenEllipse.x2 = -1000;
                        }
                        if(redBishop1Square.posY == greyQueenSquare.posY &&
                           redBishop1Square.posX == greyQueenSquare.posX) {
                            redBishop1Square.posX = -1000;
                            redBishop1Square.x1 = -1000;
                            redBishop1Square.x2 = -1000;
                            redBishop1Rectangle.x1 = -1000;
                            redBishop1Rectangle.x2 = -1000;
                            redBishop1Base.x1 = -1000;
                            redBishop1Base.x2 = -1000;
                            redBishop1Ellipse.x1 = -1000;
                            redBishop1Ellipse.x2 = -1000;
                        }
                        if(redBishop2Square.posY == greyQueenSquare.posY &&
                           redBishop2Square.posX == greyQueenSquare.posX) {
                            redBishop2Square.posX = -1000;
                            redBishop2Square.x1 = -1000;
                            redBishop2Square.x2 = -1000;
                            redBishop2Rectangle.x1 = -1000;
                            redBishop2Rectangle.x2 = -1000;
                            redBishop2Base.x1 = -1000;
                            redBishop2Base.x2 = -1000;
                            redBishop2Ellipse.x1 = -1000;
                            redBishop2Ellipse.x2 = -1000;
                        }
                        if(redRook1Rectangle1.posY == greyQueenSquare.posY &&
                           redRook1Rectangle1.posX == greyQueenSquare.posX) {
                            redRook1Rectangle1.posX = -1000;
                            redRook1Rectangle1.x1 = -1000;
                            redRook1Rectangle1.x2 = -1000;
                            redRook1Rectangle2.x1 = -1000;
                            redRook1Rectangle2.x2 = -1000;
                            redRook1Base.x1 = -1000;
                            redRook1Base.x2 = -1000;
                            redRook1Ellipse.x1 = -1000;
                            redRook1Ellipse.x2 = -1000;
                        }
                        if(redRook2Rectangle1.posY == greyQueenSquare.posY &&
                           redRook2Rectangle1.posX == greyQueenSquare.posX) {
                            redRook2Rectangle1.posX = -1000;
                            redRook2Rectangle1.x1 = -1000;
                            redRook2Rectangle1.x2 = -1000;
                            redRook2Rectangle2.x1 = -1000;
                            redRook2Rectangle2.x2 = -1000;
                            redRook2Base.x1 = -1000;
                            redRook2Base.x2 = -1000;
                            redRook2Ellipse.x1 = -1000;
                            redRook2Ellipse.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    if(greyPawnsBase[s].posY == greyQueenSquare.posY &&
                       greyPawnsBase[s].posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redPawnsBase[s].posY == greyQueenSquare.posY &&
                       redPawnsBase[s].posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redQueenSquare.posY == greyQueenSquare.posY &&
                   redQueenSquare.posX == greyQueenSquare.posX + 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == greyQueenSquare.posY &&
                   redBishop1Square.posX == greyQueenSquare.posX + 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == greyQueenSquare.posY &&
                   redBishop2Square.posX == greyQueenSquare.posX + 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook1Rectangle1.posY == greyQueenSquare.posY &&
                   greyRook1Rectangle1.posX == greyQueenSquare.posX + 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == greyQueenSquare.posY &&
                   greyRook2Rectangle1.posX == greyQueenSquare.posX + 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == greyQueenSquare.posY &&
                   greyKnight1Rectangle1.posX == greyQueenSquare.posX + 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == greyQueenSquare.posY &&
                   greyKnight2Rectangle1.posX == greyQueenSquare.posX + 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == greyQueenSquare.posY &&
                   redBishop1Square.posX == greyQueenSquare.posX + 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == greyQueenSquare.posY &&
                   redBishop2Square.posX == greyQueenSquare.posX + 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == greyQueenSquare.posY &&
                   redRook1Rectangle1.posX == greyQueenSquare.posX + 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == greyQueenSquare.posY &&
                   redRook2Rectangle1.posX == greyQueenSquare.posX + 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == greyQueenSquare.posY &&
                   redKnight1Rectangle1.posX == greyQueenSquare.posX + 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == greyQueenSquare.posY &&
                   redKnight2Rectangle1.posX == greyQueenSquare.posX + 100) {
                    greyQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    greyQueenSquare.posX = greyQueenSquare.posX + 100;
                    greyQueenSquare.x1 = greyQueenSquare.x1 + 100;
                    greyQueenSquare.x2 = greyQueenSquare.x2 + 100;
                    greyQueenRectangle1.x1 = greyQueenRectangle1.x1 + 100;
                    greyQueenRectangle1.x2 = greyQueenRectangle1.x2 + 100;
                    greyQueenRectangle2.x1 = greyQueenRectangle2.x1 + 100;
                    greyQueenRectangle2.x2 = greyQueenRectangle2.x2 + 100;
                    greyQueenRectangle3.x1 = greyQueenRectangle3.x1 + 100;
                    greyQueenRectangle3.x2 = greyQueenRectangle3.x2 + 100;
                    greyQueenEllipse.x1 = greyQueenEllipse.x1 + 100;
                    greyQueenEllipse.x2 = greyQueenEllipse.x2 + 100;
                    greyQueenBase.x1 = greyQueenBase.x1 + 100;
                    greyQueenBase.x2 = greyQueenBase.x2 + 100;
                }

                return flag;
            }
        }

        else {

            greyQueenSquare.failedpath = TRUE;
            return TRUE;
        }
    }
}

boolean moveRedQueen(UINT msg, int j, int i, int pos, int o) {

    if(greyKnight1Rectangle1.posX == redQueenSquare.posX &&
       greyKnight1Rectangle1.posY == redQueenSquare.posY) {
        redQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(greyKnight2Rectangle1.posX == redQueenSquare.posX &&
       greyKnight2Rectangle1.posY == redQueenSquare.posY) {
        redQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(greyBishop1Square.posX == redQueenSquare.posX &&
       greyBishop1Square.posY == redQueenSquare.posY) {
        redQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(greyBishop2Square.posX == redQueenSquare.posX &&
       greyBishop2Square.posY == redQueenSquare.posY) {
        redQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(greyRook1Rectangle1.posX == redQueenSquare.posX &&
       greyRook1Rectangle1.posY == redQueenSquare.posY) {
        redQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(greyRook2Rectangle1.posX == redQueenSquare.posX &&
       greyRook2Rectangle1.posY == redQueenSquare.posY) {
        redQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(greyQueenSquare.posX == redQueenSquare.posX &&
       greyQueenSquare.posY == redQueenSquare.posY) {
        redQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    for(int g=0; g<8; g++) {
        if(greyPawnsBase[g].posX == redQueenSquare.posX &&
           greyPawnsBase[g].posY == redQueenSquare.posY) {
            redQueenSquare.failedpath = TRUE;
            return TRUE;
        }
    }
    if(greyKingSquare.posX == redQueenSquare.posX &&
       greyKingSquare.posY == redQueenSquare.posY) {
        greyQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(pos < 0) {
        boolean f = FALSE;
        if(pos < -100) {
            f = moveRedQueen(msg, j, i, pos + 100, o);
        }
        if(!f) {
            if(pos == o) {

                redQueenSquare.posY = redQueenSquare.posY - 100;
                redQueenSquare.y1 = redQueenSquare.y1 - 100;
                redQueenSquare.y2 = redQueenSquare.y2 - 100;
                redQueenRectangle1.y1 = redQueenRectangle1.y1 - 100;
                redQueenRectangle1.y2 = redQueenRectangle1.y2 - 100;
                redQueenRectangle2.y1 = redQueenRectangle2.y1 - 100;
                redQueenRectangle2.y2 = redQueenRectangle2.y2 - 100;
                redQueenRectangle3.y1 = redQueenRectangle3.y1 - 100;
                redQueenRectangle3.y2 = redQueenRectangle3.y2 - 100;
                redQueenEllipse.y1 = redQueenEllipse.y1 - 100;
                redQueenEllipse.y2 = redQueenEllipse.y2 - 100;
                redQueenBase.y1 = redQueenBase.y1 - 100;
                redQueenBase.y2 = redQueenBase.y2 - 100;

                if(j*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redQueenSquare.posY &&
                           redPawnsBase[s].posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop1Square.posY == redQueenSquare.posY &&
                           redBishop1Square.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == redQueenSquare.posY &&
                           redBishop2Square.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == redQueenSquare.posY &&
                           redKnight1Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redQueenSquare.posY &&
                           redKnight2Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook1Rectangle1.posY == redQueenSquare.posY &&
                           redRook1Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook2Rectangle1.posY == redQueenSquare.posY &&
                           redRook2Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redQueenSquare.posY &&
                           redKingSquare.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop1Square.posY == redQueenSquare.posY &&
                           redBishop1Square.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == redQueenSquare.posY &&
                           redBishop2Square.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == redQueenSquare.posY &&
                           redKnight1Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redQueenSquare.posY &&
                           redKnight2Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook1Rectangle1.posY == redQueenSquare.posY &&
                           redRook1Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook2Rectangle1.posY == redQueenSquare.posY &&
                           redRook2Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redQueenSquare.posY &&
                           redKingSquare.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyPawnsBase[s].posY == redQueenSquare.posY &&
                           greyPawnsBase[s].posX == redQueenSquare.posX) {
                            greyPawnsBase[s].posX = -1000;
                            greyPawnsBase[s].x1 = -1000;
                            greyPawnsBase[s].x2 = -1000;
                            greyPawnsEllipse[s].x1 = -1000;
                            greyPawnsEllipse[s].x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyQueenSquare.posY == redQueenSquare.posY &&
                           greyQueenSquare.posX == redQueenSquare.posX) {
                            greyQueenSquare.posX = -1000;
                            greyQueenSquare.x1 = -1000;
                            greyQueenSquare.x2 = -1000;
                            greyQueenBase.x1 = -1000;
                            greyQueenBase.x2 = -1000;
                            greyQueenEllipse.x1 = -1000;
                            greyQueenEllipse.x2 = -1000;
                            greyQueenRectangle1.x1 = -1000;
                            greyQueenRectangle1.x2 = -1000;
                            greyQueenRectangle2.x1 = -1000;
                            greyQueenRectangle2.x2 = -1000;
                            greyQueenRectangle3.x1 = -1000;
                            greyQueenRectangle3.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook1Rectangle1.posY == redQueenSquare.posY &&
                           greyRook1Rectangle1.posX == redQueenSquare.posX) {
                            greyRook1Rectangle1.posX = -1000;
                            greyRook1Rectangle1.x1 = -1000;
                            greyRook1Rectangle1.x2 = -1000;
                            greyRook1Rectangle2.x1 = -1000;
                            greyRook1Rectangle2.x2 = -1000;
                            greyRook1Base.x1 = -1000;
                            greyRook1Base.x2 = -1000;
                            greyRook1Ellipse.x1 = -1000;
                            greyRook1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook2Rectangle1.posY == redQueenSquare.posY &&
                           greyRook2Rectangle1.posX == redQueenSquare.posX) {
                            greyRook2Rectangle1.posX = -1000;
                            greyRook2Rectangle1.x1 = -1000;
                            greyRook2Rectangle1.x2 = -1000;
                            greyRook2Rectangle2.x1 = -1000;
                            greyRook2Rectangle2.x2 = -1000;
                            greyRook2Base.x1 = -1000;
                            greyRook2Base.x2 = -1000;
                            greyRook2Ellipse.x1 = -1000;
                            greyRook2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyBishop1Square.posY == redQueenSquare.posY &&
                           greyBishop1Square.posX == redQueenSquare.posX) {
                            greyBishop1Square.posX = -1000;
                            greyBishop1Square.x1 = -1000;
                            greyBishop1Square.x2 = -1000;
                            greyBishop1Rectangle.x1 = -1000;
                            greyBishop1Rectangle.x2 = -1000;
                            greyBishop1Base.x1 = -1000;
                            greyBishop1Base.x2 = -1000;
                            greyBishop1Ellipse.x1 = -1000;
                            greyBishop1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyBishop2Square.posY == redQueenSquare.posY &&
                           greyBishop2Square.posX == redQueenSquare.posX) {
                            greyBishop2Square.posX = -1000;
                            greyBishop2Square.x1 = -1000;
                            greyBishop2Square.x2 = -1000;
                            greyBishop2Rectangle.x1 = -1000;
                            greyBishop2Rectangle.x2 = -1000;
                            greyBishop2Base.x1 = -1000;
                            greyBishop2Base.x2 = -1000;
                            greyBishop2Ellipse.x1 = -1000;
                            greyBishop2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyKnight1Rectangle1.posY == redQueenSquare.posY &&
                           greyKnight1Rectangle1.posX == redQueenSquare.posX) {
                            greyKnight1Rectangle1.posX = -1000;
                            greyKnight1Rectangle1.x1 = -1000;
                            greyKnight1Rectangle1.x2 = -1000;
                            greyKnight1Rectangle2.x1 = -1000;
                            greyKnight1Rectangle2.x2 = -1000;
                            greyKnight1Base.x1 = -1000;
                            greyKnight1Base.x2 = -1000;
                            greyKnight1Ellipse.x1 = -1000;
                            greyKnight1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyKnight2Rectangle1.posY == redQueenSquare.posY &&
                           greyKnight2Rectangle1.posX == redQueenSquare.posX) {
                            greyKnight2Rectangle1.posX = -1000;
                            greyKnight2Rectangle1.x1 = -1000;
                            greyKnight2Rectangle1.x2 = -1000;
                            greyKnight2Rectangle2.x1 = -1000;
                            greyKnight2Rectangle2.x2 = -1000;
                            greyKnight2Base.x1 = -1000;
                            greyKnight2Base.x2 = -1000;
                            greyKnight2Ellipse.x1 = -1000;
                            greyKnight2Ellipse.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    if(redPawnsBase[s].posY == redQueenSquare.posY - 100 &&
                       redPawnsBase[s].posX == redQueenSquare.posX) {
                        redQueenSquare.failedpath = TRUE;                        
                        flag = TRUE;
                    }
                    if(greyPawnsBase[s].posY == redQueenSquare.posY - 100 &&
                       greyPawnsBase[s].posX == redQueenSquare.posX) {
                        redQueenSquare.failedpath = TRUE;                        
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == redQueenSquare.posY - 100 &&
                   redBishop1Square.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == redQueenSquare.posY - 100 &&
                   redBishop2Square.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == redQueenSquare.posY - 100 &&
                   redRook1Rectangle1.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == redQueenSquare.posY - 100 &&
                   redRook2Rectangle1.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == redQueenSquare.posY - 100 &&
                   redKnight1Rectangle1.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == redQueenSquare.posY - 100 &&
                   redKnight2Rectangle1.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == redQueenSquare.posY - 100 &&
                   redBishop1Square.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == redQueenSquare.posY - 100 &&
                   redBishop2Square.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyQueenSquare.posY == redQueenSquare.posY - 100 &&
                   greyQueenSquare.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop1Square.posY == redQueenSquare.posY - 100 &&
                   greyBishop1Square.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop2Square.posY == redQueenSquare.posY - 100 &&
                   greyBishop2Square.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook1Rectangle1.posY == redQueenSquare.posY - 100 &&
                   greyRook1Rectangle1.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == redQueenSquare.posY - 100 &&
                   greyRook2Rectangle1.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == redQueenSquare.posY - 100 &&
                   greyKnight1Rectangle1.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == redQueenSquare.posY - 100 &&
                   greyKnight2Rectangle1.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    redQueenSquare.posY = redQueenSquare.posY - 100;
                    redQueenSquare.y1 = redQueenSquare.y1 - 100;
                    redQueenSquare.y2 = redQueenSquare.y2 - 100;
                    redQueenRectangle1.y1 = redQueenRectangle1.y1 - 100;
                    redQueenRectangle1.y2 = redQueenRectangle1.y2 - 100;
                    redQueenRectangle2.y1 = redQueenRectangle2.y1 - 100;
                    redQueenRectangle2.y2 = redQueenRectangle2.y2 - 100;
                    redQueenRectangle3.y1 = redQueenRectangle3.y1 - 100;
                    redQueenRectangle3.y2 = redQueenRectangle3.y2 - 100;
                    redQueenEllipse.y1 = redQueenEllipse.y1 - 100;
                    redQueenEllipse.y2 = redQueenEllipse.y2 - 100;
                    redQueenBase.y1 = redQueenBase.y1 - 100;
                    redQueenBase.y2 = redQueenBase.y2 - 100;
                }

                return flag;
            }
        }

        else {

            redQueenSquare.failedpath = TRUE;                        
            return TRUE;
        }
    } else if(pos > 0) {
        boolean f = FALSE;
        if(pos > 100) {
            f = moveRedQueen(msg, j, i, pos - 100, o);
        }
        if(!f) {
            if(pos == o) {

                redQueenSquare.posY = redQueenSquare.posY + 100;
                redQueenSquare.y1 = redQueenSquare.y1 + 100;
                redQueenSquare.y2 = redQueenSquare.y2 + 100;
                redQueenRectangle1.y1 = redQueenRectangle1.y1 + 100;
                redQueenRectangle1.y2 = redQueenRectangle1.y2 + 100;
                redQueenRectangle2.y1 = redQueenRectangle2.y1 + 100;
                redQueenRectangle2.y2 = redQueenRectangle2.y2 + 100;
                redQueenRectangle3.y1 = redQueenRectangle3.y1 + 100;
                redQueenRectangle3.y2 = redQueenRectangle3.y2 + 100;
                redQueenEllipse.y1 = redQueenEllipse.y1 + 100;
                redQueenEllipse.y2 = redQueenEllipse.y2 + 100;
                redQueenBase.y1 = redQueenBase.y1 + 100;
                redQueenBase.y2 = redQueenBase.y2 + 100;

                if(j*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redQueenSquare.posY &&
                           redPawnsBase[s].posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop1Square.posY == redQueenSquare.posY &&
                           redBishop1Square.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == redQueenSquare.posY &&
                           redBishop2Square.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == redQueenSquare.posY &&
                           redKnight1Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redQueenSquare.posY &&
                           redKnight2Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook1Rectangle1.posY == redQueenSquare.posY &&
                           redRook1Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook2Rectangle1.posY == redQueenSquare.posY &&
                           redRook2Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redQueenSquare.posY &&
                           redKingSquare.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop1Square.posY == redQueenSquare.posY &&
                           redBishop1Square.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == redQueenSquare.posY &&
                           redBishop2Square.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == redQueenSquare.posY &&
                           redKnight1Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redQueenSquare.posY &&
                           redKnight2Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook1Rectangle1.posY == redQueenSquare.posY &&
                           redRook1Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook2Rectangle1.posY == redQueenSquare.posY &&
                           redRook2Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redQueenSquare.posY &&
                           redKingSquare.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyPawnsBase[s].posY == redQueenSquare.posY &&
                           greyPawnsBase[s].posX == redQueenSquare.posX) {
                            greyPawnsBase[s].posX = -1000;
                            greyPawnsBase[s].x1 = -1000;
                            greyPawnsBase[s].x2 = -1000;
                            greyPawnsEllipse[s].x1 = -1000;
                            greyPawnsEllipse[s].x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyQueenSquare.posY == redQueenSquare.posY &&
                           greyQueenSquare.posX == redQueenSquare.posX) {
                            greyQueenSquare.posX = -1000;
                            greyQueenSquare.x1 = -1000;
                            greyQueenSquare.x2 = -1000;
                            greyQueenBase.x1 = -1000;
                            greyQueenBase.x2 = -1000;
                            greyQueenEllipse.x1 = -1000;
                            greyQueenEllipse.x2 = -1000;
                            greyQueenRectangle1.x1 = -1000;
                            greyQueenRectangle1.x2 = -1000;
                            greyQueenRectangle2.x1 = -1000;
                            greyQueenRectangle2.x2 = -1000;
                            greyQueenRectangle3.x1 = -1000;
                            greyQueenRectangle3.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook1Rectangle1.posY == redQueenSquare.posY &&
                           greyRook1Rectangle1.posX == redQueenSquare.posX) {
                            greyRook1Rectangle1.posX = -1000;
                            greyRook1Rectangle1.x1 = -1000;
                            greyRook1Rectangle1.x2 = -1000;
                            greyRook1Rectangle2.x1 = -1000;
                            greyRook1Rectangle2.x2 = -1000;
                            greyRook1Base.x1 = -1000;
                            greyRook1Base.x2 = -1000;
                            greyRook1Ellipse.x1 = -1000;
                            greyRook1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook2Rectangle1.posY == redQueenSquare.posY &&
                           greyRook2Rectangle1.posX == redQueenSquare.posX) {
                            greyRook2Rectangle1.posX = -1000;
                            greyRook2Rectangle1.x1 = -1000;
                            greyRook2Rectangle1.x2 = -1000;
                            greyRook2Rectangle2.x1 = -1000;
                            greyRook2Rectangle2.x2 = -1000;
                            greyRook2Base.x1 = -1000;
                            greyRook2Base.x2 = -1000;
                            greyRook2Ellipse.x1 = -1000;
                            greyRook2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyBishop1Square.posY == redQueenSquare.posY &&
                           greyBishop1Square.posX == redQueenSquare.posX) {
                            greyBishop1Square.posX = -1000;
                            greyBishop1Square.x1 = -1000;
                            greyBishop1Square.x2 = -1000;
                            greyBishop1Rectangle.x1 = -1000;
                            greyBishop1Rectangle.x2 = -1000;
                            greyBishop1Base.x1 = -1000;
                            greyBishop1Base.x2 = -1000;
                            greyBishop1Ellipse.x1 = -1000;
                            greyBishop1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyBishop2Square.posY == redQueenSquare.posY &&
                           greyBishop2Square.posX == redQueenSquare.posX) {
                            greyBishop2Square.posX = -1000;
                            greyBishop2Square.x1 = -1000;
                            greyBishop2Square.x2 = -1000;
                            greyBishop2Rectangle.x1 = -1000;
                            greyBishop2Rectangle.x2 = -1000;
                            greyBishop2Base.x1 = -1000;
                            greyBishop2Base.x2 = -1000;
                            greyBishop2Ellipse.x1 = -1000;
                            greyBishop2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyKnight1Rectangle1.posY == redQueenSquare.posY &&
                           greyKnight1Rectangle1.posX == redQueenSquare.posX) {
                            greyKnight1Rectangle1.posX = -1000;
                            greyKnight1Rectangle1.x1 = -1000;
                            greyKnight1Rectangle1.x2 = -1000;
                            greyKnight1Rectangle2.x1 = -1000;
                            greyKnight1Rectangle2.x2 = -1000;
                            greyKnight1Base.x1 = -1000;
                            greyKnight1Base.x2 = -1000;
                            greyKnight1Ellipse.x1 = -1000;
                            greyKnight1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyKnight2Rectangle1.posY == redQueenSquare.posY &&
                           greyKnight2Rectangle1.posX == redQueenSquare.posX) {
                            greyKnight2Rectangle1.posX = -1000;
                            greyKnight2Rectangle1.x1 = -1000;
                            greyKnight2Rectangle1.x2 = -1000;
                            greyKnight2Rectangle2.x1 = -1000;
                            greyKnight2Rectangle2.x2 = -1000;
                            greyKnight2Base.x1 = -1000;
                            greyKnight2Base.x2 = -1000;
                            greyKnight2Ellipse.x1 = -1000;
                            greyKnight2Ellipse.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    if(redPawnsBase[s].posY == redQueenSquare.posY + 100 &&
                       redPawnsBase[s].posX == redQueenSquare.posX) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyPawnsBase[s].posY == redQueenSquare.posY + 100 &&
                       greyPawnsBase[s].posX == redQueenSquare.posX) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == redQueenSquare.posY + 100 &&
                   redBishop1Square.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == redQueenSquare.posY + 100 &&
                   redBishop2Square.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == redQueenSquare.posY + 100 &&
                   redRook1Rectangle1.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == redQueenSquare.posY + 100 &&
                   redRook2Rectangle1.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == redQueenSquare.posY + 100 &&
                   redKnight1Rectangle1.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == redQueenSquare.posY + 100 &&
                   redKnight2Rectangle1.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == redQueenSquare.posY + 100 &&
                   redBishop1Square.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == redQueenSquare.posY + 100 &&
                   redBishop2Square.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyQueenSquare.posY == redQueenSquare.posY + 100 &&
                   greyQueenSquare.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop1Square.posY == redQueenSquare.posY + 100 &&
                   greyBishop1Square.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop2Square.posY == redQueenSquare.posY + 100 &&
                   greyBishop2Square.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook1Rectangle1.posY == redQueenSquare.posY + 100 &&
                   greyRook1Rectangle1.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == redQueenSquare.posY + 100 &&
                   greyRook2Rectangle1.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == redQueenSquare.posY + 100 &&
                   greyKnight1Rectangle1.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == redQueenSquare.posY + 100 &&
                   greyKnight2Rectangle1.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop1Square.posY == redQueenSquare.posY + 100 &&
                   greyBishop1Square.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop2Square.posY == redQueenSquare.posY + 100 &&
                   greyBishop2Square.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyQueenSquare.posY == redQueenSquare.posY + 100 &&
                   greyQueenSquare.posX == redQueenSquare.posX) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    redQueenSquare.posY = redQueenSquare.posY + 100;
                    redQueenSquare.y1 = redQueenSquare.y1 + 100;
                    redQueenSquare.y2 = redQueenSquare.y2 + 100;
                    redQueenRectangle1.y1 = redQueenRectangle1.y1 + 100;
                    redQueenRectangle1.y2 = redQueenRectangle1.y2 + 100;
                    redQueenRectangle2.y1 = redQueenRectangle2.y1 + 100;
                    redQueenRectangle2.y2 = redQueenRectangle2.y2 + 100;
                    redQueenRectangle3.y1 = redQueenRectangle3.y1 + 100;
                    redQueenRectangle3.y2 = redQueenRectangle3.y2 + 100;
                    redQueenEllipse.y1 = redQueenEllipse.y1 + 100;
                    redQueenEllipse.y2 = redQueenEllipse.y2 + 100;
                    redQueenBase.y1 = redQueenBase.y1 + 100;
                    redQueenBase.y2 = redQueenBase.y2 + 100;
                }

                return flag;
            }
        }

        else {

            redQueenSquare.failedpath = TRUE;
            return TRUE;
        }
    }
}

boolean moveRedQueenSide(UINT msg, int j, int i, int pos, int o) {

    if(greyKnight1Rectangle1.posX == redQueenSquare.posX &&
       greyKnight1Rectangle1.posY == redQueenSquare.posY) {
        redQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(greyKnight2Rectangle1.posX == redQueenSquare.posX &&
       greyKnight2Rectangle1.posY == redQueenSquare.posY) {
        redQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(greyBishop1Square.posX == redQueenSquare.posX &&
       greyBishop1Square.posY == redQueenSquare.posY) {
        redQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(greyBishop2Square.posX == redQueenSquare.posX &&
       greyBishop2Square.posY == redQueenSquare.posY) {
        redQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(greyRook1Rectangle1.posX == redQueenSquare.posX &&
       greyRook1Rectangle1.posY == redQueenSquare.posY) {
        redQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(greyRook2Rectangle1.posX == redQueenSquare.posX &&
       greyRook2Rectangle1.posY == redQueenSquare.posY) {
        redQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(greyQueenSquare.posX == redQueenSquare.posX &&
       greyQueenSquare.posY == redQueenSquare.posY) {
        redQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    for(int g=0; g<8; g++) {
        if(greyPawnsBase[g].posX == redQueenSquare.posX &&
           greyPawnsBase[g].posY == redQueenSquare.posY) {
            redQueenSquare.failedpath = TRUE;
            return TRUE;
        }
    }
    if(pos < 0) {
        boolean f = FALSE;
        if(pos < -100) {
            f = moveRedQueenSide(msg, j, i, pos + 100, o);
        }
        if(!f) {
            if(pos == o) {

                redQueenSquare.posX = redQueenSquare.posX - 100;
                redQueenSquare.x1 = redQueenSquare.x1 - 100;
                redQueenSquare.x2 = redQueenSquare.x2 - 100;
                redQueenRectangle1.x1 = redQueenRectangle1.x1 - 100;
                redQueenRectangle1.x2 = redQueenRectangle1.x2 - 100;
                redQueenRectangle2.x1 = redQueenRectangle2.x1 - 100;
                redQueenRectangle2.x2 = redQueenRectangle2.x2 - 100;
                redQueenRectangle3.x1 = redQueenRectangle3.x1 - 100;
                redQueenRectangle3.x2 = redQueenRectangle3.x2 - 100;
                redQueenEllipse.x1 = redQueenEllipse.x1 - 100;
                redQueenEllipse.x2 = redQueenEllipse.x2 - 100;
                redQueenBase.x1 = redQueenBase.x1 - 100;
                redQueenBase.x2 = redQueenBase.x2 - 100;

                if(i*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redQueenSquare.posY &&
                           redPawnsBase[s].posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop1Square.posY == redQueenSquare.posY &&
                           redBishop1Square.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == redQueenSquare.posY &&
                           redBishop2Square.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == redQueenSquare.posY &&
                           redKnight1Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redQueenSquare.posY &&
                           redKnight2Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook1Rectangle1.posY == redQueenSquare.posY &&
                           redRook1Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook2Rectangle1.posY == redQueenSquare.posY &&
                           redRook2Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redQueenSquare.posY &&
                           redKingSquare.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop1Square.posY == redQueenSquare.posY &&
                           redBishop1Square.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == redQueenSquare.posY &&
                           redBishop2Square.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == redQueenSquare.posY &&
                           redKnight1Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redQueenSquare.posY &&
                           redKnight2Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook1Rectangle1.posY == redQueenSquare.posY &&
                           redRook1Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook2Rectangle1.posY == redQueenSquare.posY &&
                           redRook2Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redQueenSquare.posY &&
                           redKingSquare.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyPawnsBase[s].posY == redQueenSquare.posY &&
                           greyPawnsBase[s].posX == redQueenSquare.posX) {
                            greyPawnsBase[s].posX = -1000;
                            greyPawnsBase[s].x1 = -1000;
                            greyPawnsBase[s].x2 = -1000;
                            greyPawnsEllipse[s].x1 = -1000;
                            greyPawnsEllipse[s].x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyQueenSquare.posY == redQueenSquare.posY &&
                           greyQueenSquare.posX == redQueenSquare.posX) {
                            greyQueenSquare.posX = -1000;
                            greyQueenSquare.x1 = -1000;
                            greyQueenSquare.x2 = -1000;
                            greyQueenBase.x1 = -1000;
                            greyQueenBase.x2 = -1000;
                            greyQueenEllipse.x1 = -1000;
                            greyQueenEllipse.x2 = -1000;
                            greyQueenRectangle1.x1 = -1000;
                            greyQueenRectangle1.x2 = -1000;
                            greyQueenRectangle2.x1 = -1000;
                            greyQueenRectangle2.x2 = -1000;
                            greyQueenRectangle3.x1 = -1000;
                            greyQueenRectangle3.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook1Rectangle1.posY == redQueenSquare.posY &&
                           greyRook1Rectangle1.posX == redQueenSquare.posX) {
                            greyRook1Rectangle1.posX = -1000;
                            greyRook1Rectangle1.x1 = -1000;
                            greyRook1Rectangle1.x2 = -1000;
                            greyRook1Rectangle2.x1 = -1000;
                            greyRook1Rectangle2.x2 = -1000;
                            greyRook1Base.x1 = -1000;
                            greyRook1Base.x2 = -1000;
                            greyRook1Ellipse.x1 = -1000;
                            greyRook1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook2Rectangle1.posY == redQueenSquare.posY &&
                           greyRook2Rectangle1.posX == redQueenSquare.posX) {
                            greyRook2Rectangle1.posX = -1000;
                            greyRook2Rectangle1.x1 = -1000;
                            greyRook2Rectangle1.x2 = -1000;
                            greyRook2Rectangle2.x1 = -1000;
                            greyRook2Rectangle2.x2 = -1000;
                            greyRook2Base.x1 = -1000;
                            greyRook2Base.x2 = -1000;
                            greyRook2Ellipse.x1 = -1000;
                            greyRook2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyBishop1Square.posY == redQueenSquare.posY &&
                           greyBishop1Square.posX == redQueenSquare.posX) {
                            greyBishop1Square.posX = -1000;
                            greyBishop1Square.x1 = -1000;
                            greyBishop1Square.x2 = -1000;
                            greyBishop1Rectangle.x1 = -1000;
                            greyBishop1Rectangle.x2 = -1000;
                            greyBishop1Base.x1 = -1000;
                            greyBishop1Base.x2 = -1000;
                            greyBishop1Ellipse.x1 = -1000;
                            greyBishop1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyBishop2Square.posY == redQueenSquare.posY &&
                           greyBishop2Square.posX == redQueenSquare.posX) {
                            greyBishop2Square.posX = -1000;
                            greyBishop2Square.x1 = -1000;
                            greyBishop2Square.x2 = -1000;
                            greyBishop2Rectangle.x1 = -1000;
                            greyBishop2Rectangle.x2 = -1000;
                            greyBishop2Base.x1 = -1000;
                            greyBishop2Base.x2 = -1000;
                            greyBishop2Ellipse.x1 = -1000;
                            greyBishop2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyKnight1Rectangle1.posY == redQueenSquare.posY &&
                           greyKnight1Rectangle1.posX == redQueenSquare.posX) {
                            greyKnight1Rectangle1.posX = -1000;
                            greyKnight1Rectangle1.x1 = -1000;
                            greyKnight1Rectangle1.x2 = -1000;
                            greyKnight1Rectangle2.x1 = -1000;
                            greyKnight1Rectangle2.x2 = -1000;
                            greyKnight1Base.x1 = -1000;
                            greyKnight1Base.x2 = -1000;
                            greyKnight1Ellipse.x1 = -1000;
                            greyKnight1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyKnight2Rectangle1.posY == redQueenSquare.posY &&
                           greyKnight2Rectangle1.posX == redQueenSquare.posX) {
                            greyKnight2Rectangle1.posX = -1000;
                            greyKnight2Rectangle1.x1 = -1000;
                            greyKnight2Rectangle1.x2 = -1000;
                            greyKnight2Rectangle2.x1 = -1000;
                            greyKnight2Rectangle2.x2 = -1000;
                            greyKnight2Base.x1 = -1000;
                            greyKnight2Base.x2 = -1000;
                            greyKnight2Ellipse.x1 = -1000;
                            greyKnight2Ellipse.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    if(redPawnsBase[s].posY == redQueenSquare.posY &&
                       redPawnsBase[s].posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyPawnsBase[s].posY == redQueenSquare.posY &&
                       greyPawnsBase[s].posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == redQueenSquare.posY &&
                   redBishop1Square.posX == redQueenSquare.posX - 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == redQueenSquare.posY &&
                   redBishop2Square.posX == redQueenSquare.posX - 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == redQueenSquare.posY &&
                   redRook1Rectangle1.posX == redQueenSquare.posX - 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == redQueenSquare.posY &&
                   redRook2Rectangle1.posX == redQueenSquare.posX - 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == redQueenSquare.posY &&
                   redKnight1Rectangle1.posX == redQueenSquare.posX - 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == redQueenSquare.posY &&
                   redKnight2Rectangle1.posX == redQueenSquare.posX - 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == redQueenSquare.posY &&
                   redBishop1Square.posX == redQueenSquare.posX - 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == redQueenSquare.posY &&
                   redBishop2Square.posX == redQueenSquare.posX - 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyQueenSquare.posY == redQueenSquare.posY &&
                   greyQueenSquare.posX == redQueenSquare.posX - 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop1Square.posY == redQueenSquare.posY &&
                   greyBishop1Square.posX == redQueenSquare.posX - 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop2Square.posY == redQueenSquare.posY &&
                   greyBishop2Square.posX == redQueenSquare.posX - 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook1Rectangle1.posY == redQueenSquare.posY &&
                   greyRook1Rectangle1.posX == redQueenSquare.posX - 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == redQueenSquare.posY &&
                   greyRook2Rectangle1.posX == redQueenSquare.posX - 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == redQueenSquare.posY &&
                   greyKnight1Rectangle1.posX == redQueenSquare.posX - 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == redQueenSquare.posY &&
                   greyKnight2Rectangle1.posX == redQueenSquare.posX - 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop1Square.posY == redQueenSquare.posY &&
                   greyBishop1Square.posX == redQueenSquare.posX - 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop2Square.posY == redQueenSquare.posY &&
                   greyBishop2Square.posX == redQueenSquare.posX - 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyQueenSquare.posY == redQueenSquare.posY &&
                   greyQueenSquare.posX == redQueenSquare.posX - 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    redQueenSquare.posX = redQueenSquare.posX - 100;
                    redQueenSquare.x1 = redQueenSquare.x1 - 100;
                    redQueenSquare.x2 = redQueenSquare.x2 - 100;
                    redQueenRectangle1.x1 = redQueenRectangle1.x1 - 100;
                    redQueenRectangle1.x2 = redQueenRectangle1.x2 - 100;
                    redQueenRectangle2.x1 = redQueenRectangle2.x1 - 100;
                    redQueenRectangle2.x2 = redQueenRectangle2.x2 - 100;
                    redQueenRectangle3.x1 = redQueenRectangle3.x1 - 100;
                    redQueenRectangle3.x2 = redQueenRectangle3.x2 - 100;
                    redQueenEllipse.x1 = redQueenEllipse.x1 - 100;
                    redQueenEllipse.x2 = redQueenEllipse.x2 - 100;
                    redQueenBase.x1 = redQueenBase.x1 - 100;
                    redQueenBase.x2 = redQueenBase.x2 - 100;
                }

                return flag;
            }
        }

        else {

            redQueenSquare.failedpath = TRUE;
            return TRUE;
        }
    } else if(pos > 0) {
        boolean f = FALSE;
        if(pos > 100) {
            f = moveRedQueenSide(msg, j, i, pos - 100, o);
        }
        if(!f) {
            if(pos == o) {

                redQueenSquare.posX = redQueenSquare.posX + 100;
                redQueenSquare.x1 = redQueenSquare.x1 + 100;
                redQueenSquare.x2 = redQueenSquare.x2 + 100;
                redQueenRectangle1.x1 = redQueenRectangle1.x1 + 100;
                redQueenRectangle1.x2 = redQueenRectangle1.x2 + 100;
                redQueenRectangle2.x1 = redQueenRectangle2.x1 + 100;
                redQueenRectangle2.x2 = redQueenRectangle2.x2 + 100;
                redQueenRectangle3.x1 = redQueenRectangle3.x1 + 100;
                redQueenRectangle3.x2 = redQueenRectangle3.x2 + 100;
                redQueenEllipse.x1 = redQueenEllipse.x1 + 100;
                redQueenEllipse.x2 = redQueenEllipse.x2 + 100;
                redQueenBase.x1 = redQueenBase.x1 + 100;
                redQueenBase.x2 = redQueenBase.x2 + 100;

                if(i*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redQueenSquare.posY &&
                           redPawnsBase[s].posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop1Square.posY == redQueenSquare.posY &&
                           redBishop1Square.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == redQueenSquare.posY &&
                           redBishop2Square.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == redQueenSquare.posY &&
                           redKnight1Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redQueenSquare.posY &&
                           redKnight2Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook1Rectangle1.posY == redQueenSquare.posY &&
                           redRook1Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook2Rectangle1.posY == redQueenSquare.posY &&
                           redRook2Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redQueenSquare.posY &&
                           redKingSquare.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop1Square.posY == redQueenSquare.posY &&
                           redBishop1Square.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == redQueenSquare.posY &&
                           redBishop2Square.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == redQueenSquare.posY &&
                           redKnight1Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redQueenSquare.posY &&
                           redKnight2Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook1Rectangle1.posY == redQueenSquare.posY &&
                           redRook1Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook2Rectangle1.posY == redQueenSquare.posY &&
                           redRook2Rectangle1.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redQueenSquare.posY &&
                           redKingSquare.posX == redQueenSquare.posX) {
                            redQueenSquare.failedpath = TRUE;
                            return TRUE;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyPawnsBase[s].posY == redQueenSquare.posY &&
                           greyPawnsBase[s].posX == redQueenSquare.posX) {
                            greyPawnsBase[s].posX = -1000;
                            greyPawnsBase[s].x1 = -1000;
                            greyPawnsBase[s].x2 = -1000;
                            greyPawnsEllipse[s].x1 = -1000;
                            greyPawnsEllipse[s].x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyQueenSquare.posY == redQueenSquare.posY &&
                           greyQueenSquare.posX == redQueenSquare.posX) {
                            greyQueenSquare.posX = -1000;
                            greyQueenSquare.x1 = -1000;
                            greyQueenSquare.x2 = -1000;
                            greyQueenBase.x1 = -1000;
                            greyQueenBase.x2 = -1000;
                            greyQueenEllipse.x1 = -1000;
                            greyQueenEllipse.x2 = -1000;
                            greyQueenRectangle1.x1 = -1000;
                            greyQueenRectangle1.x2 = -1000;
                            greyQueenRectangle2.x1 = -1000;
                            greyQueenRectangle2.x2 = -1000;
                            greyQueenRectangle3.x1 = -1000;
                            greyQueenRectangle3.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook1Rectangle1.posY == redQueenSquare.posY &&
                           greyRook1Rectangle1.posX == redQueenSquare.posX) {
                            greyRook1Rectangle1.posX = -1000;
                            greyRook1Rectangle1.x1 = -1000;
                            greyRook1Rectangle1.x2 = -1000;
                            greyRook1Rectangle2.x1 = -1000;
                            greyRook1Rectangle2.x2 = -1000;
                            greyRook1Base.x1 = -1000;
                            greyRook1Base.x2 = -1000;
                            greyRook1Ellipse.x1 = -1000;
                            greyRook1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook2Rectangle1.posY == redQueenSquare.posY &&
                           greyRook2Rectangle1.posX == redQueenSquare.posX) {
                            greyRook2Rectangle1.posX = -1000;
                            greyRook2Rectangle1.x1 = -1000;
                            greyRook2Rectangle1.x2 = -1000;
                            greyRook2Rectangle2.x1 = -1000;
                            greyRook2Rectangle2.x2 = -1000;
                            greyRook2Base.x1 = -1000;
                            greyRook2Base.x2 = -1000;
                            greyRook2Ellipse.x1 = -1000;
                            greyRook2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyBishop1Square.posY == redQueenSquare.posY &&
                           greyBishop1Square.posX == redQueenSquare.posX) {
                            greyBishop1Square.posX = -1000;
                            greyBishop1Square.x1 = -1000;
                            greyBishop1Square.x2 = -1000;
                            greyBishop1Rectangle.x1 = -1000;
                            greyBishop1Rectangle.x2 = -1000;
                            greyBishop1Base.x1 = -1000;
                            greyBishop1Base.x2 = -1000;
                            greyBishop1Ellipse.x1 = -1000;
                            greyBishop1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyBishop2Square.posY == redQueenSquare.posY &&
                           greyBishop2Square.posX == redQueenSquare.posX) {
                            greyBishop2Square.posX = -1000;
                            greyBishop2Square.x1 = -1000;
                            greyBishop2Square.x2 = -1000;
                            greyBishop2Rectangle.x1 = -1000;
                            greyBishop2Rectangle.x2 = -1000;
                            greyBishop2Base.x1 = -1000;
                            greyBishop2Base.x2 = -1000;
                            greyBishop2Ellipse.x1 = -1000;
                            greyBishop2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyKnight1Rectangle1.posY == redQueenSquare.posY &&
                           greyKnight1Rectangle1.posX == redQueenSquare.posX) {
                            greyKnight1Rectangle1.posX = -1000;
                            greyKnight1Rectangle1.x1 = -1000;
                            greyKnight1Rectangle1.x2 = -1000;
                            greyKnight1Rectangle2.x1 = -1000;
                            greyKnight1Rectangle2.x2 = -1000;
                            greyKnight1Base.x1 = -1000;
                            greyKnight1Base.x2 = -1000;
                            greyKnight1Ellipse.x1 = -1000;
                            greyKnight1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyKnight2Rectangle1.posY == redQueenSquare.posY &&
                           greyKnight2Rectangle1.posX == redQueenSquare.posX) {
                            greyKnight2Rectangle1.posX = -1000;
                            greyKnight2Rectangle1.x1 = -1000;
                            greyKnight2Rectangle1.x2 = -1000;
                            greyKnight2Rectangle2.x1 = -1000;
                            greyKnight2Rectangle2.x2 = -1000;
                            greyKnight2Base.x1 = -1000;
                            greyKnight2Base.x2 = -1000;
                            greyKnight2Ellipse.x1 = -1000;
                            greyKnight2Ellipse.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int i=0; i<8; i++) {
                    if(redPawnsBase[i].posY == redQueenSquare.posY &&
                       redPawnsBase[i].posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyPawnsBase[i].posY == redQueenSquare.posY &&
                       greyPawnsBase[i].posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == redQueenSquare.posY &&
                   redBishop1Square.posX == redQueenSquare.posX + 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == redQueenSquare.posY &&
                   redBishop2Square.posX == redQueenSquare.posX + 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == redQueenSquare.posY &&
                   redRook1Rectangle1.posX == redQueenSquare.posX + 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == redQueenSquare.posY &&
                   redRook2Rectangle1.posX == redQueenSquare.posX + 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == redQueenSquare.posY &&
                   redKnight1Rectangle1.posX == redQueenSquare.posX + 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == redQueenSquare.posY &&
                   redKnight2Rectangle1.posX == redQueenSquare.posX + 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == redQueenSquare.posY &&
                   redBishop1Square.posX == redQueenSquare.posX + 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == redQueenSquare.posY &&
                   redBishop2Square.posX == redQueenSquare.posX + 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyQueenSquare.posY == redQueenSquare.posY &&
                   greyQueenSquare.posX == redQueenSquare.posX + 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop1Square.posY == redQueenSquare.posY &&
                   greyBishop1Square.posX == redQueenSquare.posX + 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop2Square.posY == redQueenSquare.posY &&
                   greyBishop2Square.posX == redQueenSquare.posX + 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook1Rectangle1.posY == redQueenSquare.posY &&
                   greyRook1Rectangle1.posX == redQueenSquare.posX + 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == redQueenSquare.posY &&
                   greyRook2Rectangle1.posX == redQueenSquare.posX + 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == redQueenSquare.posY &&
                   greyKnight1Rectangle1.posX == redQueenSquare.posX + 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == redQueenSquare.posY &&
                   greyKnight2Rectangle1.posX == redQueenSquare.posX + 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop1Square.posY == redQueenSquare.posY &&
                   greyBishop1Square.posX == redQueenSquare.posX + 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop2Square.posY == redQueenSquare.posY &&
                   greyBishop2Square.posX == redQueenSquare.posX + 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyQueenSquare.posY == redQueenSquare.posY &&
                   greyQueenSquare.posX == redQueenSquare.posX + 100) {
                    redQueenSquare.failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    redQueenSquare.posX = redQueenSquare.posX + 100;
                    redQueenSquare.x1 = redQueenSquare.x1 + 100;
                    redQueenSquare.x2 = redQueenSquare.x2 + 100;
                    redQueenRectangle1.x1 = redQueenRectangle1.x1 + 100;
                    redQueenRectangle1.x2 = redQueenRectangle1.x2 + 100;
                    redQueenRectangle2.x1 = redQueenRectangle2.x1 + 100;
                    redQueenRectangle2.x2 = redQueenRectangle2.x2 + 100;
                    redQueenRectangle3.x1 = redQueenRectangle3.x1 + 100;
                    redQueenRectangle3.x2 = redQueenRectangle3.x2 + 100;
                    redQueenEllipse.x1 = redQueenEllipse.x1 + 100;
                    redQueenEllipse.x2 = redQueenEllipse.x2 + 100;
                    redQueenBase.x1 = redQueenBase.x1 + 100;
                    redQueenBase.x2 = redQueenBase.x2 + 100;
                }

                return flag;
            }
        }

        else {

            redQueenSquare.failedpath = TRUE;
            return TRUE;
        }
    }
}

boolean moveRedQueenSideK(UINT msg, int j, int i, int pos, int o, int k) {

    if(greyKnight1Rectangle1.posX == redQueenSquareK[k].posX &&
       greyKnight1Rectangle1.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(greyKnight2Rectangle1.posX == redQueenSquareK[k].posX &&
       greyKnight2Rectangle1.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(greyBishop1Square.posX == redQueenSquareK[k].posX &&
       greyBishop1Square.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(greyBishop2Square.posX == redQueenSquareK[k].posX &&
       greyBishop2Square.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(greyRook1Rectangle1.posX == redQueenSquareK[k].posX &&
       greyRook1Rectangle1.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(greyRook2Rectangle1.posX == redQueenSquareK[k].posX &&
       greyRook2Rectangle1.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(greyQueenSquare.posX == redQueenSquareK[k].posX &&
       greyQueenSquare.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    for(int g=0; g<8; g++) {
        if(greyPawnsBase[g].posX == redQueenSquareK[k].posX &&
           greyPawnsBase[g].posY == redQueenSquareK[k].posY) {
            redQueenSquareK[k].failedpath = TRUE;
            return TRUE;
        }
    }
    if(pos < 0) {
        boolean f = FALSE;
        if(pos < -100) {
            f = moveRedQueenSideK(msg, j, i, pos + 100, o, k);
        }
        if(!f) {
            if(pos == o) {

                redQueenSquareK[k].posX = redQueenSquareK[k].posX - 100;
                redQueenSquareK[k].x1 = redQueenSquareK[k].x1 - 100;
                redQueenSquareK[k].x2 = redQueenSquareK[k].x2 - 100;
                redQueenRectangle1K[k].x1 = redQueenRectangle1K[k].x1 - 100;
                redQueenRectangle1K[k].x2 = redQueenRectangle1K[k].x2 - 100;
                redQueenRectangle2K[k].x1 = redQueenRectangle2K[k].x1 - 100;
                redQueenRectangle2K[k].x2 = redQueenRectangle2K[k].x2 - 100;
                redQueenRectangle3K[k].x1 = redQueenRectangle3K[k].x1 - 100;
                redQueenRectangle3K[k].x2 = redQueenRectangle3K[k].x2 - 100;
                redQueenEllipseK[k].x1 = redQueenEllipseK[k].x1 - 100;
                redQueenEllipseK[k].x2 = redQueenEllipseK[k].x2 - 100;
                redQueenBaseK[k].x1 = redQueenBaseK[k].x1 - 100;
                redQueenBaseK[k].x2 = redQueenBaseK[k].x2 - 100;

                if(i*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        for(int p=0; p<8; p++) {
                            if(p != k &&
                                redQueenSquareK[p].posY == redQueenSquareK[k].posY &&
                                redQueenSquareK[p].posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                        }
                        if(redQueenSquare.posY == redQueenSquareK[k].posY &&
                            redQueenSquare.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redPawnsBase[s].posY == redQueenSquareK[k].posY &&
                           redPawnsBase[s].posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop1Square.posY == redQueenSquareK[k].posY &&
                           redBishop1Square.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == redQueenSquareK[k].posY &&
                           redBishop2Square.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                           redKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                           redKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook1Rectangle1.posY == redQueenSquareK[k].posY &&
                           redRook1Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook2Rectangle1.posY == redQueenSquareK[k].posY &&
                           redRook2Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redQueenSquareK[k].posY &&
                           redKingSquare.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop1Square.posY == redQueenSquareK[k].posY &&
                           redBishop1Square.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == redQueenSquareK[k].posY &&
                           redBishop2Square.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                           redKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                           redKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook1Rectangle1.posY == redQueenSquareK[k].posY &&
                           redRook1Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook2Rectangle1.posY == redQueenSquareK[k].posY &&
                           redRook2Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redQueenSquareK[k].posY &&
                           redKingSquare.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        for(int b=0; b<8; b++) {
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyQueenSquareK[b].posY == redQueenSquareK[k].posY &&
                               greyQueenSquareK[b].posX == redQueenSquareK[k].posX) {
                                greyQueenSquareK[b].posX = -1000;
                                greyQueenSquareK[b].x1 = -1000;
                                greyQueenSquareK[b].x2 = -1000;
                                greyQueenBaseK[b].x1 = -1000;
                                greyQueenBaseK[b].x2 = -1000;
                                greyQueenEllipseK[b].x1 = -1000;
                                greyQueenEllipseK[b].x2 = -1000;
                                greyQueenRectangle1K[b].x1 = -1000;
                                greyQueenRectangle1K[b].x2 = -1000;
                                greyQueenRectangle2K[b].x1 = -1000;
                                greyQueenRectangle2K[b].x2 = -1000;
                                greyQueenRectangle3K[b].x1 = -1000;
                                greyQueenRectangle3K[b].x2 = -1000;
                            }
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyPawnsBase[s].posY == redQueenSquareK[k].posY &&
                           greyPawnsBase[s].posX == redQueenSquareK[k].posX) {
                            greyPawnsBase[s].posX = -1000;
                            greyPawnsBase[s].x1 = -1000;
                            greyPawnsBase[s].x2 = -1000;
                            greyPawnsEllipse[s].x1 = -1000;
                            greyPawnsEllipse[s].x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyQueenSquare.posY == redQueenSquareK[k].posY &&
                           greyQueenSquare.posX == redQueenSquareK[k].posX) {
                            greyQueenSquare.posX = -1000;
                            greyQueenSquare.x1 = -1000;
                            greyQueenSquare.x2 = -1000;
                            greyQueenBase.x1 = -1000;
                            greyQueenBase.x2 = -1000;
                            greyQueenEllipse.x1 = -1000;
                            greyQueenEllipse.x2 = -1000;
                            greyQueenRectangle1.x1 = -1000;
                            greyQueenRectangle1.x2 = -1000;
                            greyQueenRectangle2.x1 = -1000;
                            greyQueenRectangle2.x2 = -1000;
                            greyQueenRectangle3.x1 = -1000;
                            greyQueenRectangle3.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook1Rectangle1.posY == redQueenSquareK[k].posY &&
                           greyRook1Rectangle1.posX == redQueenSquareK[k].posX) {
                            greyRook1Rectangle1.posX = -1000;
                            greyRook1Rectangle1.x1 = -1000;
                            greyRook1Rectangle1.x2 = -1000;
                            greyRook1Rectangle2.x1 = -1000;
                            greyRook1Rectangle2.x2 = -1000;
                            greyRook1Base.x1 = -1000;
                            greyRook1Base.x2 = -1000;
                            greyRook1Ellipse.x1 = -1000;
                            greyRook1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook2Rectangle1.posY == redQueenSquareK[k].posY &&
                           greyRook2Rectangle1.posX == redQueenSquareK[k].posX) {
                            greyRook2Rectangle1.posX = -1000;
                            greyRook2Rectangle1.x1 = -1000;
                            greyRook2Rectangle1.x2 = -1000;
                            greyRook2Rectangle2.x1 = -1000;
                            greyRook2Rectangle2.x2 = -1000;
                            greyRook2Base.x1 = -1000;
                            greyRook2Base.x2 = -1000;
                            greyRook2Ellipse.x1 = -1000;
                            greyRook2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyBishop1Square.posY == redQueenSquareK[k].posY &&
                           greyBishop1Square.posX == redQueenSquareK[k].posX) {
                            greyBishop1Square.posX = -1000;
                            greyBishop1Square.x1 = -1000;
                            greyBishop1Square.x2 = -1000;
                            greyBishop1Rectangle.x1 = -1000;
                            greyBishop1Rectangle.x2 = -1000;
                            greyBishop1Base.x1 = -1000;
                            greyBishop1Base.x2 = -1000;
                            greyBishop1Ellipse.x1 = -1000;
                            greyBishop1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyBishop2Square.posY == redQueenSquareK[k].posY &&
                           greyBishop2Square.posX == redQueenSquareK[k].posX) {
                            greyBishop2Square.posX = -1000;
                            greyBishop2Square.x1 = -1000;
                            greyBishop2Square.x2 = -1000;
                            greyBishop2Rectangle.x1 = -1000;
                            greyBishop2Rectangle.x2 = -1000;
                            greyBishop2Base.x1 = -1000;
                            greyBishop2Base.x2 = -1000;
                            greyBishop2Ellipse.x1 = -1000;
                            greyBishop2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                           greyKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                            greyKnight1Rectangle1.posX = -1000;
                            greyKnight1Rectangle1.x1 = -1000;
                            greyKnight1Rectangle1.x2 = -1000;
                            greyKnight1Rectangle2.x1 = -1000;
                            greyKnight1Rectangle2.x2 = -1000;
                            greyKnight1Base.x1 = -1000;
                            greyKnight1Base.x2 = -1000;
                            greyKnight1Ellipse.x1 = -1000;
                            greyKnight1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                           greyKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                            greyKnight2Rectangle1.posX = -1000;
                            greyKnight2Rectangle1.x1 = -1000;
                            greyKnight2Rectangle1.x2 = -1000;
                            greyKnight2Rectangle2.x1 = -1000;
                            greyKnight2Rectangle2.x2 = -1000;
                            greyKnight2Base.x1 = -1000;
                            greyKnight2Base.x2 = -1000;
                            greyKnight2Ellipse.x1 = -1000;
                            greyKnight2Ellipse.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    for(int d=0; d<8; d++) {
                        if(redQueenSquareK[d].posY == redQueenSquareK[k].posY &&
                           redQueenSquareK[d].posX == redQueenSquareK[k].posX - 100) {
                            redQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyQueenSquareK[d].posY == redQueenSquareK[k].posY &&
                           greyQueenSquareK[d].posX == redQueenSquareK[k].posX - 100) {
                            redQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redPawnsBase[s].posY == redQueenSquareK[k].posY &&
                       redPawnsBase[s].posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyPawnsBase[s].posY == redQueenSquareK[k].posY &&
                       greyPawnsBase[s].posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == redQueenSquareK[k].posY &&
                   redBishop1Square.posX == redQueenSquareK[k].posX - 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == redQueenSquareK[k].posY &&
                   redBishop2Square.posX == redQueenSquareK[k].posX - 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == redQueenSquareK[k].posY &&
                   redRook1Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == redQueenSquareK[k].posY &&
                   redRook2Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                   redKnight1Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                   redKnight2Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == redQueenSquareK[k].posY &&
                   redBishop1Square.posX == redQueenSquareK[k].posX - 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == redQueenSquareK[k].posY &&
                   redBishop2Square.posX == redQueenSquareK[k].posX - 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyQueenSquare.posY == redQueenSquareK[k].posY &&
                   greyQueenSquare.posX == redQueenSquareK[k].posX - 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop1Square.posY == redQueenSquareK[k].posY &&
                   greyBishop1Square.posX == redQueenSquareK[k].posX - 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop2Square.posY == redQueenSquareK[k].posY &&
                   greyBishop2Square.posX == redQueenSquareK[k].posX - 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook1Rectangle1.posY == redQueenSquareK[k].posY &&
                   greyRook1Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == redQueenSquareK[k].posY &&
                   greyRook2Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                   greyKnight1Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                   greyKnight2Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop1Square.posY == redQueenSquareK[k].posY &&
                   greyBishop1Square.posX == redQueenSquareK[k].posX - 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop2Square.posY == redQueenSquareK[k].posY &&
                   greyBishop2Square.posX == redQueenSquareK[k].posX - 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyQueenSquare.posY == redQueenSquareK[k].posY &&
                   greyQueenSquare.posX == redQueenSquareK[k].posX - 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redQueenSquare.posY == redQueenSquareK[k].posY &&
                   redQueenSquare.posX == redQueenSquareK[k].posX - 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    redQueenSquareK[k].posX = redQueenSquareK[k].posX - 100;
                    redQueenSquareK[k].x1 = redQueenSquareK[k].x1 - 100;
                    redQueenSquareK[k].x2 = redQueenSquareK[k].x2 - 100;
                    redQueenRectangle1K[k].x1 = redQueenRectangle1K[k].x1 - 100;
                    redQueenRectangle1K[k].x2 = redQueenRectangle1K[k].x2 - 100;
                    redQueenRectangle2K[k].x1 = redQueenRectangle2K[k].x1 - 100;
                    redQueenRectangle2K[k].x2 = redQueenRectangle2K[k].x2 - 100;
                    redQueenRectangle3K[k].x1 = redQueenRectangle3K[k].x1 - 100;
                    redQueenRectangle3K[k].x2 = redQueenRectangle3K[k].x2 - 100;
                    redQueenEllipseK[k].x1 = redQueenEllipseK[k].x1 - 100;
                    redQueenEllipseK[k].x2 = redQueenEllipseK[k].x2 - 100;
                    redQueenBaseK[k].x1 = redQueenBaseK[k].x1 - 100;
                    redQueenBaseK[k].x2 = redQueenBaseK[k].x2 - 100;
                }

                return flag;
            }
        }

        else {

            redQueenSquareK[k].failedpath = TRUE;
            return TRUE;
        }
    } else if(pos > 0) {
        boolean f = FALSE;
        if(pos > 100) {
            f = moveRedQueenSideK(msg, j, i, pos - 100, o, k);
        }
        if(!f) {
            if(pos == o) {

                redQueenSquareK[k].posX = redQueenSquareK[k].posX + 100;
                redQueenSquareK[k].x1 = redQueenSquareK[k].x1 + 100;
                redQueenSquareK[k].x2 = redQueenSquareK[k].x2 + 100;
                redQueenRectangle1K[k].x1 = redQueenRectangle1K[k].x1 + 100;
                redQueenRectangle1K[k].x2 = redQueenRectangle1K[k].x2 + 100;
                redQueenRectangle2K[k].x1 = redQueenRectangle2K[k].x1 + 100;
                redQueenRectangle2K[k].x2 = redQueenRectangle2K[k].x2 + 100;
                redQueenRectangle3K[k].x1 = redQueenRectangle3K[k].x1 + 100;
                redQueenRectangle3K[k].x2 = redQueenRectangle3K[k].x2 + 100;
                redQueenEllipseK[k].x1 = redQueenEllipseK[k].x1 + 100;
                redQueenEllipseK[k].x2 = redQueenEllipseK[k].x2 + 100;
                redQueenBaseK[k].x1 = redQueenBaseK[k].x1 + 100;
                redQueenBaseK[k].x2 = redQueenBaseK[k].x2 + 100;

                if(i*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        for(int p=0; p<8; p++) {
                            if(p != k &&
                                redQueenSquareK[p].posY == redQueenSquareK[k].posY &&
                                redQueenSquareK[p].posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                        }
                        if(redQueenSquare.posY == redQueenSquareK[k].posY &&
                            redQueenSquare.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redPawnsBase[s].posY == redQueenSquareK[k].posY &&
                           redPawnsBase[s].posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop1Square.posY == redQueenSquareK[k].posY &&
                           redBishop1Square.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == redQueenSquareK[k].posY &&
                           redBishop2Square.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                           redKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                           redKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook1Rectangle1.posY == redQueenSquareK[k].posY &&
                           redRook1Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook2Rectangle1.posY == redQueenSquareK[k].posY &&
                           redRook2Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redQueenSquareK[k].posY &&
                           redKingSquare.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop1Square.posY == redQueenSquareK[k].posY &&
                           redBishop1Square.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == redQueenSquareK[k].posY &&
                           redBishop2Square.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                           redKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                           redKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook1Rectangle1.posY == redQueenSquareK[k].posY &&
                           redRook1Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook2Rectangle1.posY == redQueenSquareK[k].posY &&
                           redRook2Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redQueenSquareK[k].posY &&
                           redKingSquare.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyPawnsBase[s].posY == redQueenSquareK[k].posY &&
                           greyPawnsBase[s].posX == redQueenSquareK[k].posX) {
                            greyPawnsBase[s].posX = -1000;
                            greyPawnsBase[s].x1 = -1000;
                            greyPawnsBase[s].x2 = -1000;
                            greyPawnsEllipse[s].x1 = -1000;
                            greyPawnsEllipse[s].x2 = -1000;
                        }
                        for(int c=0; c<8; c++) {
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyQueenSquareK[c].posY == redQueenSquareK[k].posY &&
                               greyQueenSquareK[c].posX == redQueenSquareK[k].posX) {
                                greyQueenSquareK[c].posX = -1000;
                                greyQueenSquareK[c].x1 = -1000;
                                greyQueenSquareK[c].x2 = -1000;
                                greyQueenBaseK[c].x1 = -1000;
                                greyQueenBaseK[c].x2 = -1000;
                                greyQueenEllipseK[c].x1 = -1000;
                                greyQueenEllipseK[c].x2 = -1000;
                                greyQueenRectangle1K[c].x1 = -1000;
                                greyQueenRectangle1K[c].x2 = -1000;
                                greyQueenRectangle2K[c].x1 = -1000;
                                greyQueenRectangle2K[c].x2 = -1000;
                                greyQueenRectangle3K[c].x1 = -1000;
                                greyQueenRectangle3K[c].x2 = -1000;
                            }
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyQueenSquare.posY == redQueenSquareK[k].posY &&
                           greyQueenSquare.posX == redQueenSquareK[k].posX) {
                            greyQueenSquare.posX = -1000;
                            greyQueenSquare.x1 = -1000;
                            greyQueenSquare.x2 = -1000;
                            greyQueenBase.x1 = -1000;
                            greyQueenBase.x2 = -1000;
                            greyQueenEllipse.x1 = -1000;
                            greyQueenEllipse.x2 = -1000;
                            greyQueenRectangle1.x1 = -1000;
                            greyQueenRectangle1.x2 = -1000;
                            greyQueenRectangle2.x1 = -1000;
                            greyQueenRectangle2.x2 = -1000;
                            greyQueenRectangle3.x1 = -1000;
                            greyQueenRectangle3.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook1Rectangle1.posY == redQueenSquareK[k].posY &&
                           greyRook1Rectangle1.posX == redQueenSquareK[k].posX) {
                            greyRook1Rectangle1.posX = -1000;
                            greyRook1Rectangle1.x1 = -1000;
                            greyRook1Rectangle1.x2 = -1000;
                            greyRook1Rectangle2.x1 = -1000;
                            greyRook1Rectangle2.x2 = -1000;
                            greyRook1Base.x1 = -1000;
                            greyRook1Base.x2 = -1000;
                            greyRook1Ellipse.x1 = -1000;
                            greyRook1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook2Rectangle1.posY == redQueenSquareK[k].posY &&
                           greyRook2Rectangle1.posX == redQueenSquareK[k].posX) {
                            greyRook2Rectangle1.posX = -1000;
                            greyRook2Rectangle1.x1 = -1000;
                            greyRook2Rectangle1.x2 = -1000;
                            greyRook2Rectangle2.x1 = -1000;
                            greyRook2Rectangle2.x2 = -1000;
                            greyRook2Base.x1 = -1000;
                            greyRook2Base.x2 = -1000;
                            greyRook2Ellipse.x1 = -1000;
                            greyRook2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyBishop1Square.posY == redQueenSquareK[k].posY &&
                           greyBishop1Square.posX == redQueenSquareK[k].posX) {
                            greyBishop1Square.posX = -1000;
                            greyBishop1Square.x1 = -1000;
                            greyBishop1Square.x2 = -1000;
                            greyBishop1Rectangle.x1 = -1000;
                            greyBishop1Rectangle.x2 = -1000;
                            greyBishop1Base.x1 = -1000;
                            greyBishop1Base.x2 = -1000;
                            greyBishop1Ellipse.x1 = -1000;
                            greyBishop1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyBishop2Square.posY == redQueenSquareK[k].posY &&
                           greyBishop2Square.posX == redQueenSquareK[k].posX) {
                            greyBishop2Square.posX = -1000;
                            greyBishop2Square.x1 = -1000;
                            greyBishop2Square.x2 = -1000;
                            greyBishop2Rectangle.x1 = -1000;
                            greyBishop2Rectangle.x2 = -1000;
                            greyBishop2Base.x1 = -1000;
                            greyBishop2Base.x2 = -1000;
                            greyBishop2Ellipse.x1 = -1000;
                            greyBishop2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                           greyKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                            greyKnight1Rectangle1.posX = -1000;
                            greyKnight1Rectangle1.x1 = -1000;
                            greyKnight1Rectangle1.x2 = -1000;
                            greyKnight1Rectangle2.x1 = -1000;
                            greyKnight1Rectangle2.x2 = -1000;
                            greyKnight1Base.x1 = -1000;
                            greyKnight1Base.x2 = -1000;
                            greyKnight1Ellipse.x1 = -1000;
                            greyKnight1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                           greyKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                            greyKnight2Rectangle1.posX = -1000;
                            greyKnight2Rectangle1.x1 = -1000;
                            greyKnight2Rectangle1.x2 = -1000;
                            greyKnight2Rectangle2.x1 = -1000;
                            greyKnight2Rectangle2.x2 = -1000;
                            greyKnight2Base.x1 = -1000;
                            greyKnight2Base.x2 = -1000;
                            greyKnight2Ellipse.x1 = -1000;
                            greyKnight2Ellipse.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int i=0; i<8; i++) {
                    for(int f=0; f<8; f++) {
                        if(redQueenSquareK[f].posY == redQueenSquareK[k].posY &&
                           redQueenSquareK[f].posX == redQueenSquareK[k].posX + 100) {
                            redQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redQueenSquare.posY == redQueenSquareK[k].posY &&
                       redQueenSquare.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redPawnsBase[i].posY == redQueenSquareK[k].posY &&
                       redPawnsBase[i].posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyPawnsBase[i].posY == redQueenSquareK[k].posY &&
                       greyPawnsBase[i].posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == redQueenSquareK[k].posY &&
                   redBishop1Square.posX == redQueenSquareK[k].posX + 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == redQueenSquareK[k].posY &&
                   redBishop2Square.posX == redQueenSquareK[k].posX + 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == redQueenSquareK[k].posY &&
                   redRook1Rectangle1.posX == redQueenSquareK[k].posX + 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == redQueenSquareK[k].posY &&
                   redRook2Rectangle1.posX == redQueenSquareK[k].posX + 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                   redKnight1Rectangle1.posX == redQueenSquareK[k].posX + 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                   redKnight2Rectangle1.posX == redQueenSquareK[k].posX + 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == redQueenSquareK[k].posY &&
                   redBishop1Square.posX == redQueenSquareK[k].posX + 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == redQueenSquareK[k].posY &&
                   redBishop2Square.posX == redQueenSquareK[k].posX + 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                for(int g=0; g<8; g++) {
                    if(greyQueenSquareK[g].posY == redQueenSquareK[k].posY &&
                       greyQueenSquareK[g].posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(greyQueenSquare.posY == redQueenSquareK[k].posY &&
                   greyQueenSquare.posX == redQueenSquareK[k].posX + 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop1Square.posY == redQueenSquareK[k].posY &&
                   greyBishop1Square.posX == redQueenSquareK[k].posX + 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop2Square.posY == redQueenSquareK[k].posY &&
                   greyBishop2Square.posX == redQueenSquareK[k].posX + 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook1Rectangle1.posY == redQueenSquareK[k].posY &&
                   greyRook1Rectangle1.posX == redQueenSquareK[k].posX + 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == redQueenSquareK[k].posY &&
                   greyRook2Rectangle1.posX == redQueenSquareK[k].posX + 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                   greyKnight1Rectangle1.posX == redQueenSquareK[k].posX + 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                   greyKnight2Rectangle1.posX == redQueenSquareK[k].posX + 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop1Square.posY == redQueenSquareK[k].posY &&
                   greyBishop1Square.posX == redQueenSquareK[k].posX + 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop2Square.posY == redQueenSquareK[k].posY &&
                   greyBishop2Square.posX == redQueenSquareK[k].posX + 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyQueenSquare.posY == redQueenSquareK[k].posY &&
                   greyQueenSquare.posX == redQueenSquareK[k].posX + 100) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    redQueenSquareK[k].posX = redQueenSquareK[k].posX + 100;
                    redQueenSquareK[k].x1 = redQueenSquareK[k].x1 + 100;
                    redQueenSquareK[k].x2 = redQueenSquareK[k].x2 + 100;
                    redQueenRectangle1K[k].x1 = redQueenRectangle1K[k].x1 + 100;
                    redQueenRectangle1K[k].x2 = redQueenRectangle1K[k].x2 + 100;
                    redQueenRectangle2K[k].x1 = redQueenRectangle2K[k].x1 + 100;
                    redQueenRectangle2K[k].x2 = redQueenRectangle2K[k].x2 + 100;
                    redQueenRectangle3K[k].x1 = redQueenRectangle3K[k].x1 + 100;
                    redQueenRectangle3K[k].x2 = redQueenRectangle3K[k].x2 + 100;
                    redQueenEllipseK[k].x1 = redQueenEllipseK[k].x1 + 100;
                    redQueenEllipseK[k].x2 = redQueenEllipseK[k].x2 + 100;
                    redQueenBaseK[k].x1 = redQueenBaseK[k].x1 + 100;
                    redQueenBaseK[k].x2 = redQueenBaseK[k].x2 + 100;
                }

                return flag;
            }
        }

        else {

            redQueenSquareK[k].failedpath = TRUE;
            return TRUE;
        }
    }
}

boolean moveGreyQueenSideK(UINT msg, int j, int i, int pos, int o, int k) {

    if(redKnight1Rectangle1.posX == greyQueenSquareK[k].posX &&
       redKnight1Rectangle1.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(redKnight2Rectangle1.posX == greyQueenSquareK[k].posX &&
       redKnight2Rectangle1.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(redBishop1Square.posX == greyQueenSquareK[k].posX &&
       redBishop1Square.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(redBishop2Square.posX == greyQueenSquareK[k].posX &&
       redBishop2Square.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(redRook1Rectangle1.posX == greyQueenSquareK[k].posX &&
       redRook1Rectangle1.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(redRook2Rectangle1.posX == greyQueenSquareK[k].posX &&
       redRook2Rectangle1.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(redQueenSquare.posX == greyQueenSquareK[k].posX &&
       redQueenSquare.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    for(int g=0; g<8; g++) {
        if(redPawnsBase[g].posX == greyQueenSquareK[k].posX &&
           redPawnsBase[g].posY == greyQueenSquareK[k].posY) {
            greyQueenSquareK[k].failedpath = TRUE;
            return TRUE;
        }
    }
    if(pos < 0) {
        boolean f = FALSE;
        if(pos < -100) {
            f = moveGreyQueenSideK(msg, j, i, pos + 100, o, k);
        }
        if(!f) {
            if(pos == o) {

                greyQueenSquareK[k].posX = greyQueenSquareK[k].posX - 100;
                greyQueenSquareK[k].x1 = greyQueenSquareK[k].x1 - 100;
                greyQueenSquareK[k].x2 = greyQueenSquareK[k].x2 - 100;
                greyQueenRectangle1K[k].x1 = greyQueenRectangle1K[k].x1 - 100;
                greyQueenRectangle1K[k].x2 = greyQueenRectangle1K[k].x2 - 100;
                greyQueenRectangle2K[k].x1 = greyQueenRectangle2K[k].x1 - 100;
                greyQueenRectangle2K[k].x2 = greyQueenRectangle2K[k].x2 - 100;
                greyQueenRectangle3K[k].x1 = greyQueenRectangle3K[k].x1 - 100;
                greyQueenRectangle3K[k].x2 = greyQueenRectangle3K[k].x2 - 100;
                greyQueenEllipseK[k].x1 = greyQueenEllipseK[k].x1 - 100;
                greyQueenEllipseK[k].x2 = greyQueenEllipseK[k].x2 - 100;
                greyQueenBaseK[k].x1 = greyQueenBaseK[k].x1 - 100;
                greyQueenBaseK[k].x2 = greyQueenBaseK[k].x2 - 100;

                if(i*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        for(int p=0; p<8; p++) {
                            if(p != k &&
                                greyQueenSquareK[p].posY == greyQueenSquareK[k].posY &&
                                greyQueenSquareK[p].posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                        }
                        if(greyQueenSquare.posY == greyQueenSquareK[k].posY &&
                            greyQueenSquare.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyPawnsBase[s].posY == greyQueenSquareK[k].posY &&
                           greyPawnsBase[s].posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop1Square.posY == greyQueenSquareK[k].posY &&
                           greyBishop1Square.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop2Square.posY == greyQueenSquareK[k].posY &&
                           greyBishop2Square.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                           greyKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                           greyKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook1Rectangle1.posY == greyQueenSquareK[k].posY &&
                           greyRook1Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook2Rectangle1.posY == greyQueenSquareK[k].posY &&
                           greyRook2Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKingSquare.posY == greyQueenSquareK[k].posY &&
                           greyKingSquare.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop1Square.posY == greyQueenSquareK[k].posY &&
                           greyBishop1Square.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop2Square.posY == greyQueenSquareK[k].posY &&
                           greyBishop2Square.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                           greyKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                           greyKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook1Rectangle1.posY == greyQueenSquareK[k].posY &&
                           greyRook1Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook2Rectangle1.posY == greyQueenSquareK[k].posY &&
                           greyRook2Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKingSquare.posY == greyQueenSquareK[k].posY &&
                           greyKingSquare.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        for(int b=0; b<8; b++) {
                            if(redQueenSquareK[b].posY == greyQueenSquareK[k].posY &&
                               redQueenSquareK[b].posX == greyQueenSquareK[k].posX) {
                                redQueenSquareK[b].posX = -1000;
                                redQueenSquareK[b].x1 = -1000;
                                redQueenSquareK[b].x2 = -1000;
                                redQueenBaseK[b].x1 = -1000;
                                redQueenBaseK[b].x2 = -1000;
                                redQueenEllipseK[b].x1 = -1000;
                                redQueenEllipseK[b].x2 = -1000;
                                redQueenRectangle1K[b].x1 = -1000;
                                redQueenRectangle1K[b].x2 = -1000;
                                redQueenRectangle2K[b].x1 = -1000;
                                redQueenRectangle2K[b].x2 = -1000;
                                redQueenRectangle3K[b].x1 = -1000;
                                redQueenRectangle3K[b].x2 = -1000;
                            }
                        }
                        if(redPawnsBase[s].posY == greyQueenSquareK[k].posY &&
                           redPawnsBase[s].posX == greyQueenSquareK[k].posX) {
                            redPawnsBase[s].posX = -1000;
                            redPawnsBase[s].x1 = -1000;
                            redPawnsBase[s].x2 = -1000;
                            redPawnsEllipse[s].x1 = -1000;
                            redPawnsEllipse[s].x2 = -1000;
                        }
                        if(redQueenSquare.posY == greyQueenSquareK[k].posY &&
                           redQueenSquare.posX == greyQueenSquareK[k].posX) {
                            redQueenSquare.posX = -1000;
                            redQueenSquare.x1 = -1000;
                            redQueenSquare.x2 = -1000;
                            redQueenBase.x1 = -1000;
                            redQueenBase.x2 = -1000;
                            redQueenEllipse.x1 = -1000;
                            redQueenEllipse.x2 = -1000;
                            redQueenRectangle1.x1 = -1000;
                            redQueenRectangle1.x2 = -1000;
                            redQueenRectangle2.x1 = -1000;
                            redQueenRectangle2.x2 = -1000;
                            redQueenRectangle3.x1 = -1000;
                            redQueenRectangle3.x2 = -1000;
                        }
                        if(redRook1Rectangle1.posY == greyQueenSquareK[k].posY &&
                           redRook1Rectangle1.posX == greyQueenSquareK[k].posX) {
                            redRook1Rectangle1.posX = -1000;
                            redRook1Rectangle1.x1 = -1000;
                            redRook1Rectangle1.x2 = -1000;
                            redRook1Rectangle2.x1 = -1000;
                            redRook1Rectangle2.x2 = -1000;
                            redRook1Base.x1 = -1000;
                            redRook1Base.x2 = -1000;
                            redRook1Ellipse.x1 = -1000;
                            redRook1Ellipse.x2 = -1000;
                        }
                        if(redRook2Rectangle1.posY == greyQueenSquareK[k].posY &&
                           redRook2Rectangle1.posX == greyQueenSquareK[k].posX) {
                            redRook2Rectangle1.posX = -1000;
                            redRook2Rectangle1.x1 = -1000;
                            redRook2Rectangle1.x2 = -1000;
                            redRook2Rectangle2.x1 = -1000;
                            redRook2Rectangle2.x2 = -1000;
                            redRook2Base.x1 = -1000;
                            redRook2Base.x2 = -1000;
                            redRook2Ellipse.x1 = -1000;
                            redRook2Ellipse.x2 = -1000;
                        }
                        if(redBishop1Square.posY == greyQueenSquareK[k].posY &&
                           redBishop1Square.posX == greyQueenSquareK[k].posX) {
                            redBishop1Square.posX = -1000;
                            redBishop1Square.x1 = -1000;
                            redBishop1Square.x2 = -1000;
                            redBishop1Rectangle.x1 = -1000;
                            redBishop1Rectangle.x2 = -1000;
                            redBishop1Base.x1 = -1000;
                            redBishop1Base.x2 = -1000;
                            redBishop1Ellipse.x1 = -1000;
                            redBishop1Ellipse.x2 = -1000;
                        }
                        if(redBishop2Square.posY == greyQueenSquareK[k].posY &&
                           redBishop2Square.posX == greyQueenSquareK[k].posX) {
                            redBishop2Square.posX = -1000;
                            redBishop2Square.x1 = -1000;
                            redBishop2Square.x2 = -1000;
                            redBishop2Rectangle.x1 = -1000;
                            redBishop2Rectangle.x2 = -1000;
                            redBishop2Base.x1 = -1000;
                            redBishop2Base.x2 = -1000;
                            redBishop2Ellipse.x1 = -1000;
                            redBishop2Ellipse.x2 = -1000;
                        }
                        if(redKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                           redKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                            redKnight1Rectangle1.posX = -1000;
                            redKnight1Rectangle1.x1 = -1000;
                            redKnight1Rectangle1.x2 = -1000;
                            redKnight1Rectangle2.x1 = -1000;
                            redKnight1Rectangle2.x2 = -1000;
                            redKnight1Base.x1 = -1000;
                            redKnight1Base.x2 = -1000;
                            redKnight1Ellipse.x1 = -1000;
                            redKnight1Ellipse.x2 = -1000;
                        }
                        if(redKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                           redKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                            redKnight2Rectangle1.posX = -1000;
                            redKnight2Rectangle1.x1 = -1000;
                            redKnight2Rectangle1.x2 = -1000;
                            redKnight2Rectangle2.x1 = -1000;
                            redKnight2Rectangle2.x2 = -1000;
                            redKnight2Base.x1 = -1000;
                            redKnight2Base.x2 = -1000;
                            redKnight2Ellipse.x1 = -1000;
                            redKnight2Ellipse.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    for(int d=0; d<8; d++) {
                        if(greyQueenSquareK[d].posY == greyQueenSquareK[k].posY &&
                           greyQueenSquareK[d].posX == greyQueenSquareK[k].posX - 100) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(redQueenSquareK[d].posY == greyQueenSquareK[k].posY &&
                           redQueenSquareK[d].posX == greyQueenSquareK[k].posX - 100) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redPawnsBase[s].posY == greyQueenSquareK[k].posY &&
                       redPawnsBase[s].posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyPawnsBase[s].posY == greyQueenSquareK[k].posY &&
                       greyPawnsBase[s].posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == greyQueenSquareK[k].posY &&
                   redBishop1Square.posX == greyQueenSquareK[k].posX - 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == greyQueenSquareK[k].posY &&
                   redBishop2Square.posX == greyQueenSquareK[k].posX - 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == greyQueenSquareK[k].posY &&
                   redRook1Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == greyQueenSquareK[k].posY &&
                   redRook2Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                   redKnight1Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                   redKnight2Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == greyQueenSquareK[k].posY &&
                   redBishop1Square.posX == greyQueenSquareK[k].posX - 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == greyQueenSquareK[k].posY &&
                   redBishop2Square.posX == greyQueenSquareK[k].posX - 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyQueenSquare.posY == greyQueenSquareK[k].posY &&
                   greyQueenSquare.posX == greyQueenSquareK[k].posX - 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop1Square.posY == greyQueenSquareK[k].posY &&
                   greyBishop1Square.posX == greyQueenSquareK[k].posX - 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop2Square.posY == greyQueenSquareK[k].posY &&
                   greyBishop2Square.posX == greyQueenSquareK[k].posX - 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook1Rectangle1.posY == greyQueenSquareK[k].posY &&
                   greyRook1Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == greyQueenSquareK[k].posY &&
                   greyRook2Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                   greyKnight1Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                   greyKnight2Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop1Square.posY == greyQueenSquareK[k].posY &&
                   greyBishop1Square.posX == greyQueenSquareK[k].posX - 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop2Square.posY == greyQueenSquareK[k].posY &&
                   greyBishop2Square.posX == greyQueenSquareK[k].posX - 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyQueenSquare.posY == greyQueenSquareK[k].posY &&
                   greyQueenSquare.posX == greyQueenSquareK[k].posX - 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redQueenSquare.posY == greyQueenSquareK[k].posY &&
                   redQueenSquare.posX == greyQueenSquareK[k].posX - 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    greyQueenSquareK[k].posX = greyQueenSquareK[k].posX - 100;
                    greyQueenSquareK[k].x1 = greyQueenSquareK[k].x1 - 100;
                    greyQueenSquareK[k].x2 = greyQueenSquareK[k].x2 - 100;
                    greyQueenRectangle1K[k].x1 = greyQueenRectangle1K[k].x1 - 100;
                    greyQueenRectangle1K[k].x2 = greyQueenRectangle1K[k].x2 - 100;
                    greyQueenRectangle2K[k].x1 = greyQueenRectangle2K[k].x1 - 100;
                    greyQueenRectangle2K[k].x2 = greyQueenRectangle2K[k].x2 - 100;
                    greyQueenRectangle3K[k].x1 = greyQueenRectangle3K[k].x1 - 100;
                    greyQueenRectangle3K[k].x2 = greyQueenRectangle3K[k].x2 - 100;
                    greyQueenEllipseK[k].x1 = greyQueenEllipseK[k].x1 - 100;
                    greyQueenEllipseK[k].x2 = greyQueenEllipseK[k].x2 - 100;
                    greyQueenBaseK[k].x1 = greyQueenBaseK[k].x1 - 100;
                    greyQueenBaseK[k].x2 = greyQueenBaseK[k].x2 - 100;
                }

                return flag;
            }
        }

        else {

            greyQueenSquareK[k].failedpath = TRUE;
            return TRUE;
        }
    } else if(pos > 0) {
        boolean f = FALSE;
        if(pos > 100) {
            f = moveGreyQueenSideK(msg, j, i, pos - 100, o, k);
        }
        if(!f) {
            if(pos == o) {

                greyQueenSquareK[k].posX = greyQueenSquareK[k].posX + 100;
                greyQueenSquareK[k].x1 = greyQueenSquareK[k].x1 + 100;
                greyQueenSquareK[k].x2 = greyQueenSquareK[k].x2 + 100;
                greyQueenRectangle1K[k].x1 = greyQueenRectangle1K[k].x1 + 100;
                greyQueenRectangle1K[k].x2 = greyQueenRectangle1K[k].x2 + 100;
                greyQueenRectangle2K[k].x1 = greyQueenRectangle2K[k].x1 + 100;
                greyQueenRectangle2K[k].x2 = greyQueenRectangle2K[k].x2 + 100;
                greyQueenRectangle3K[k].x1 = greyQueenRectangle3K[k].x1 + 100;
                greyQueenRectangle3K[k].x2 = greyQueenRectangle3K[k].x2 + 100;
                greyQueenEllipseK[k].x1 = greyQueenEllipseK[k].x1 + 100;
                greyQueenEllipseK[k].x2 = greyQueenEllipseK[k].x2 + 100;
                greyQueenBaseK[k].x1 = greyQueenBaseK[k].x1 + 100;
                greyQueenBaseK[k].x2 = greyQueenBaseK[k].x2 + 100;

                if(i*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        for(int p=0; p<8; p++) {
                            if(p != k &&
                                greyQueenSquareK[p].posY == greyQueenSquareK[k].posY &&
                                greyQueenSquareK[p].posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                        }
                        if(greyQueenSquare.posY == greyQueenSquareK[k].posY &&
                            greyQueenSquare.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyPawnsBase[s].posY == greyQueenSquareK[k].posY &&
                           greyPawnsBase[s].posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop1Square.posY == greyQueenSquareK[k].posY &&
                           greyBishop1Square.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop2Square.posY == greyQueenSquareK[k].posY &&
                           greyBishop2Square.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                           greyKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                           greyKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook1Rectangle1.posY == greyQueenSquareK[k].posY &&
                           greyRook1Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook2Rectangle1.posY == greyQueenSquareK[k].posY &&
                           greyRook2Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKingSquare.posY == greyQueenSquareK[k].posY &&
                           greyKingSquare.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop1Square.posY == greyQueenSquareK[k].posY &&
                           greyBishop1Square.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop2Square.posY == greyQueenSquareK[k].posY &&
                           greyBishop2Square.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                           greyKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                           greyKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook1Rectangle1.posY == greyQueenSquareK[k].posY &&
                           greyRook1Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook2Rectangle1.posY == greyQueenSquareK[k].posY &&
                           greyRook2Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKingSquare.posY == greyQueenSquareK[k].posY &&
                           greyKingSquare.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redPawnsBase[s].posY == greyQueenSquareK[k].posY &&
                           redPawnsBase[s].posX == greyQueenSquareK[k].posX) {
                            redPawnsBase[s].posX = -1000;
                            redPawnsBase[s].x1 = -1000;
                            redPawnsBase[s].x2 = -1000;
                            redPawnsEllipse[s].x1 = -1000;
                            redPawnsEllipse[s].x2 = -1000;
                        }
                        for(int c=0; c<8; c++) {
                            if(redQueenSquareK[c].posY == greyQueenSquareK[k].posY &&
                               redQueenSquareK[c].posX == greyQueenSquareK[k].posX) {
                                redQueenSquareK[c].posX = -1000;
                                redQueenSquareK[c].x1 = -1000;
                                redQueenSquareK[c].x2 = -1000;
                                redQueenBaseK[c].x1 = -1000;
                                redQueenBaseK[c].x2 = -1000;
                                redQueenEllipseK[c].x1 = -1000;
                                redQueenEllipseK[c].x2 = -1000;
                                redQueenRectangle1K[c].x1 = -1000;
                                redQueenRectangle1K[c].x2 = -1000;
                                redQueenRectangle2K[c].x1 = -1000;
                                redQueenRectangle2K[c].x2 = -1000;
                                redQueenRectangle3K[c].x1 = -1000;
                                redQueenRectangle3K[c].x2 = -1000;
                            }
                        }
                        if(redQueenSquare.posY == greyQueenSquareK[k].posY &&
                           redQueenSquare.posX == greyQueenSquareK[k].posX) {
                            redQueenSquare.posX = -1000;
                            redQueenSquare.x1 = -1000;
                            redQueenSquare.x2 = -1000;
                            redQueenBase.x1 = -1000;
                            redQueenBase.x2 = -1000;
                            redQueenEllipse.x1 = -1000;
                            redQueenEllipse.x2 = -1000;
                            redQueenRectangle1.x1 = -1000;
                            redQueenRectangle1.x2 = -1000;
                            redQueenRectangle2.x1 = -1000;
                            redQueenRectangle2.x2 = -1000;
                            redQueenRectangle3.x1 = -1000;
                            redQueenRectangle3.x2 = -1000;
                        }
                        if(redRook1Rectangle1.posY == greyQueenSquareK[k].posY &&
                           redRook1Rectangle1.posX == greyQueenSquareK[k].posX) {
                            redRook1Rectangle1.posX = -1000;
                            redRook1Rectangle1.x1 = -1000;
                            redRook1Rectangle1.x2 = -1000;
                            redRook1Rectangle2.x1 = -1000;
                            redRook1Rectangle2.x2 = -1000;
                            redRook1Base.x1 = -1000;
                            redRook1Base.x2 = -1000;
                            redRook1Ellipse.x1 = -1000;
                            redRook1Ellipse.x2 = -1000;
                        }
                        if(redRook2Rectangle1.posY == greyQueenSquareK[k].posY &&
                           redRook2Rectangle1.posX == greyQueenSquareK[k].posX) {
                            redRook2Rectangle1.posX = -1000;
                            redRook2Rectangle1.x1 = -1000;
                            redRook2Rectangle1.x2 = -1000;
                            redRook2Rectangle2.x1 = -1000;
                            redRook2Rectangle2.x2 = -1000;
                            redRook2Base.x1 = -1000;
                            redRook2Base.x2 = -1000;
                            redRook2Ellipse.x1 = -1000;
                            redRook2Ellipse.x2 = -1000;
                        }
                        if(redBishop1Square.posY == greyQueenSquareK[k].posY &&
                           redBishop1Square.posX == greyQueenSquareK[k].posX) {
                            redBishop1Square.posX = -1000;
                            redBishop1Square.x1 = -1000;
                            redBishop1Square.x2 = -1000;
                            redBishop1Rectangle.x1 = -1000;
                            redBishop1Rectangle.x2 = -1000;
                            redBishop1Base.x1 = -1000;
                            redBishop1Base.x2 = -1000;
                            redBishop1Ellipse.x1 = -1000;
                            redBishop1Ellipse.x2 = -1000;
                        }
                        if(redBishop2Square.posY == greyQueenSquareK[k].posY &&
                           redBishop2Square.posX == greyQueenSquareK[k].posX) {
                            redBishop2Square.posX = -1000;
                            redBishop2Square.x1 = -1000;
                            redBishop2Square.x2 = -1000;
                            redBishop2Rectangle.x1 = -1000;
                            redBishop2Rectangle.x2 = -1000;
                            redBishop2Base.x1 = -1000;
                            redBishop2Base.x2 = -1000;
                            redBishop2Ellipse.x1 = -1000;
                            redBishop2Ellipse.x2 = -1000;
                        }
                        if(redKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                           redKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                            redKnight1Rectangle1.posX = -1000;
                            redKnight1Rectangle1.x1 = -1000;
                            redKnight1Rectangle1.x2 = -1000;
                            redKnight1Rectangle2.x1 = -1000;
                            redKnight1Rectangle2.x2 = -1000;
                            redKnight1Base.x1 = -1000;
                            redKnight1Base.x2 = -1000;
                            redKnight1Ellipse.x1 = -1000;
                            redKnight1Ellipse.x2 = -1000;
                        }
                        if(redKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                           redKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                            redKnight2Rectangle1.posX = -1000;
                            redKnight2Rectangle1.x1 = -1000;
                            redKnight2Rectangle1.x2 = -1000;
                            redKnight2Rectangle2.x1 = -1000;
                            redKnight2Rectangle2.x2 = -1000;
                            redKnight2Base.x1 = -1000;
                            redKnight2Base.x2 = -1000;
                            redKnight2Ellipse.x1 = -1000;
                            redKnight2Ellipse.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int i=0; i<8; i++) {
                    for(int f=0; f<8; f++) {
                        if(redQueenSquareK[f].posY == greyQueenSquareK[k].posY &&
                           redQueenSquareK[f].posX == greyQueenSquareK[k].posX + 100) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redQueenSquare.posY == greyQueenSquareK[k].posY &&
                       redQueenSquare.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redPawnsBase[i].posY == greyQueenSquareK[k].posY &&
                       redPawnsBase[i].posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyPawnsBase[i].posY == greyQueenSquareK[k].posY &&
                       greyPawnsBase[i].posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == greyQueenSquareK[k].posY &&
                   redBishop1Square.posX == greyQueenSquareK[k].posX + 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == greyQueenSquareK[k].posY &&
                   redBishop2Square.posX == greyQueenSquareK[k].posX + 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == greyQueenSquareK[k].posY &&
                   redRook1Rectangle1.posX == greyQueenSquareK[k].posX + 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == greyQueenSquareK[k].posY &&
                   redRook2Rectangle1.posX == greyQueenSquareK[k].posX + 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                   redKnight1Rectangle1.posX == greyQueenSquareK[k].posX + 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                   redKnight2Rectangle1.posX == greyQueenSquareK[k].posX + 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == greyQueenSquareK[k].posY &&
                   redBishop1Square.posX == greyQueenSquareK[k].posX + 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == greyQueenSquareK[k].posY &&
                   redBishop2Square.posX == greyQueenSquareK[k].posX + 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                for(int g=0; g<8; g++) {
                    if(greyQueenSquareK[g].posY == greyQueenSquareK[k].posY &&
                       greyQueenSquareK[g].posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(greyQueenSquare.posY == greyQueenSquareK[k].posY &&
                   greyQueenSquare.posX == greyQueenSquareK[k].posX + 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop1Square.posY == greyQueenSquareK[k].posY &&
                   greyBishop1Square.posX == greyQueenSquareK[k].posX + 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop2Square.posY == greyQueenSquareK[k].posY &&
                   greyBishop2Square.posX == greyQueenSquareK[k].posX + 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook1Rectangle1.posY == greyQueenSquareK[k].posY &&
                   greyRook1Rectangle1.posX == greyQueenSquareK[k].posX + 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == greyQueenSquareK[k].posY &&
                   greyRook2Rectangle1.posX == greyQueenSquareK[k].posX + 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                   greyKnight1Rectangle1.posX == greyQueenSquareK[k].posX + 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                   greyKnight2Rectangle1.posX == greyQueenSquareK[k].posX + 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop1Square.posY == greyQueenSquareK[k].posY &&
                   greyBishop1Square.posX == greyQueenSquareK[k].posX + 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop2Square.posY == greyQueenSquareK[k].posY &&
                   greyBishop2Square.posX == greyQueenSquareK[k].posX + 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyQueenSquare.posY == greyQueenSquareK[k].posY &&
                   greyQueenSquare.posX == greyQueenSquareK[k].posX + 100) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    greyQueenSquareK[k].posX = greyQueenSquareK[k].posX + 100;
                    greyQueenSquareK[k].x1 = greyQueenSquareK[k].x1 + 100;
                    greyQueenSquareK[k].x2 = greyQueenSquareK[k].x2 + 100;
                    greyQueenRectangle1K[k].x1 = greyQueenRectangle1K[k].x1 + 100;
                    greyQueenRectangle1K[k].x2 = greyQueenRectangle1K[k].x2 + 100;
                    greyQueenRectangle2K[k].x1 = greyQueenRectangle2K[k].x1 + 100;
                    greyQueenRectangle2K[k].x2 = greyQueenRectangle2K[k].x2 + 100;
                    greyQueenRectangle3K[k].x1 = greyQueenRectangle3K[k].x1 + 100;
                    greyQueenRectangle3K[k].x2 = greyQueenRectangle3K[k].x2 + 100;
                    greyQueenEllipseK[k].x1 = greyQueenEllipseK[k].x1 + 100;
                    greyQueenEllipseK[k].x2 = greyQueenEllipseK[k].x2 + 100;
                    greyQueenBaseK[k].x1 = greyQueenBaseK[k].x1 + 100;
                    greyQueenBaseK[k].x2 = greyQueenBaseK[k].x2 + 100;
                }

                return flag;
            }
        }

        else {

            greyQueenSquareK[k].failedpath = TRUE;
            return TRUE;
        }
    }
}

boolean moveRedQueenK(UINT msg, int j, int i, int pos, int o, int k) {

    for(int q=0; q<8; q++) {
        if(q != k &&
           redQueenSquareK[q].posX == redQueenSquareK[k].posX &&
           redQueenSquareK[q].posY == redQueenSquareK[k].posY) {
            redQueenSquareK[k].failedpath = TRUE;
            return TRUE;
        }
        if(q != k &&
           greyQueenSquareK[q].posX == redQueenSquareK[k].posX &&
           greyQueenSquareK[q].posY == redQueenSquareK[k].posY) {
            redQueenSquareK[k].failedpath = TRUE;
            return TRUE;
        }
    }
    if(redQueenSquare.posX == redQueenSquareK[k].posX &&
       redQueenSquare.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(greyQueenSquare.posX == redQueenSquareK[k].posX &&
       greyQueenSquare.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(greyKnight1Rectangle1.posX == redQueenSquareK[k].posX &&
       greyKnight1Rectangle1.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(greyKnight2Rectangle1.posX == redQueenSquareK[k].posX &&
       greyKnight2Rectangle1.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(greyBishop1Square.posX == redQueenSquareK[k].posX &&
       greyBishop1Square.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(greyBishop2Square.posX == redQueenSquareK[k].posX &&
       greyBishop2Square.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(greyRook1Rectangle1.posX == redQueenSquareK[k].posX &&
       greyRook1Rectangle1.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(greyRook2Rectangle1.posX == redQueenSquareK[k].posX &&
       greyRook2Rectangle1.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(greyQueenSquare.posX == redQueenSquareK[k].posX &&
       greyQueenSquare.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    for(int g=0; g<8; g++) {
        if(greyPawnsBase[g].posX == redQueenSquareK[k].posX &&
           greyPawnsBase[g].posY == redQueenSquareK[k].posY) {
            redQueenSquareK[k].failedpath = TRUE;
            return TRUE;
        }
    }
    if(pos < 0) {
        boolean f = FALSE;
        if(pos < -100) {
            f = moveRedQueenK(msg, j, i, pos + 100, o, k);
        }
        if(!f) {
            if(pos == o) {

                redQueenSquareK[k].posY = redQueenSquareK[k].posY - 100;
                redQueenSquareK[k].y1 = redQueenSquareK[k].y1 - 100;
                redQueenSquareK[k].y2 = redQueenSquareK[k].y2 - 100;
                redQueenRectangle1K[k].y1 = redQueenRectangle1K[k].y1 - 100;
                redQueenRectangle1K[k].y2 = redQueenRectangle1K[k].y2 - 100;
                redQueenRectangle2K[k].y1 = redQueenRectangle2K[k].y1 - 100;
                redQueenRectangle2K[k].y2 = redQueenRectangle2K[k].y2 - 100;
                redQueenRectangle3K[k].y1 = redQueenRectangle3K[k].y1 - 100;
                redQueenRectangle3K[k].y2 = redQueenRectangle3K[k].y2 - 100;
                redQueenEllipseK[k].y1 = redQueenEllipseK[k].y1 - 100;
                redQueenEllipseK[k].y2 = redQueenEllipseK[k].y2 - 100;
                redQueenBaseK[k].y1 = redQueenBaseK[k].y1 - 100;
                redQueenBaseK[k].y2 = redQueenBaseK[k].y2 - 100;

                if(j*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        for(int p=0; p<8; p++) {
                            if(p != k &&
                               redQueenSquareK[p].posY == redQueenSquareK[k].posY &&
                               redQueenSquareK[p].posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                        }
                        if(redQueenSquare.posY == redQueenSquareK[k].posY &&
                           redQueenSquare.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redPawnsBase[s].posY == redQueenSquareK[k].posY &&
                           redPawnsBase[s].posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop1Square.posY == redQueenSquareK[k].posY &&
                           redBishop1Square.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == redQueenSquareK[k].posY &&
                           redBishop2Square.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                           redKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                           redKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook1Rectangle1.posY == redQueenSquareK[k].posY &&
                           redRook1Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook2Rectangle1.posY == redQueenSquareK[k].posY &&
                           redRook2Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redQueenSquareK[k].posY &&
                           redKingSquare.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop1Square.posY == redQueenSquareK[k].posY &&
                           redBishop1Square.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == redQueenSquareK[k].posY &&
                           redBishop2Square.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                           redKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                           redKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook1Rectangle1.posY == redQueenSquareK[k].posY &&
                           redRook1Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook2Rectangle1.posY == redQueenSquareK[k].posY &&
                           redRook2Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redQueenSquareK[k].posY &&
                           redKingSquare.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        for(int r=0; r<8; r++) {
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyQueenSquareK[r].posY == redQueenSquareK[k].posY &&
                               greyQueenSquareK[r].posX == redQueenSquareK[k].posX) {
                                greyQueenSquareK[r].posX = -1000;
                                greyQueenSquareK[r].x1 = -1000;
                                greyQueenSquareK[r].x2 = -1000;
                                greyQueenBaseK[r].x1 = -1000;
                                greyQueenBaseK[r].x2 = -1000;
                                greyQueenEllipseK[r].x1 = -1000;
                                greyQueenEllipseK[r].x2 = -1000;
                                greyQueenRectangle1K[r].x1 = -1000;
                                greyQueenRectangle1K[r].x2 = -1000;
                                greyQueenRectangle2K[r].x1 = -1000;
                                greyQueenRectangle2K[r].x2 = -1000;
                                greyQueenRectangle3K[r].x1 = -1000;
                                greyQueenRectangle3K[r].x2 = -1000;
                            }
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyPawnsBase[s].posY == redQueenSquareK[k].posY &&
                           greyPawnsBase[s].posX == redQueenSquareK[k].posX) {
                            greyPawnsBase[s].posX = -1000;
                            greyPawnsBase[s].x1 = -1000;
                            greyPawnsBase[s].x2 = -1000;
                            greyPawnsEllipse[s].x1 = -1000;
                            greyPawnsEllipse[s].x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyQueenSquare.posY == redQueenSquareK[k].posY &&
                           greyQueenSquare.posX == redQueenSquareK[k].posX) {
                            greyQueenSquare.posX = -1000;
                            greyQueenSquare.x1 = -1000;
                            greyQueenSquare.x2 = -1000;
                            greyQueenBase.x1 = -1000;
                            greyQueenBase.x2 = -1000;
                            greyQueenEllipse.x1 = -1000;
                            greyQueenEllipse.x2 = -1000;
                            greyQueenRectangle1.x1 = -1000;
                            greyQueenRectangle1.x2 = -1000;
                            greyQueenRectangle2.x1 = -1000;
                            greyQueenRectangle2.x2 = -1000;
                            greyQueenRectangle3.x1 = -1000;
                            greyQueenRectangle3.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook1Rectangle1.posY == redQueenSquareK[k].posY &&
                           greyRook1Rectangle1.posX == redQueenSquareK[k].posX) {
                            greyRook1Rectangle1.posX = -1000;
                            greyRook1Rectangle1.x1 = -1000;
                            greyRook1Rectangle1.x2 = -1000;
                            greyRook1Rectangle2.x1 = -1000;
                            greyRook1Rectangle2.x2 = -1000;
                            greyRook1Base.x1 = -1000;
                            greyRook1Base.x2 = -1000;
                            greyRook1Ellipse.x1 = -1000;
                            greyRook1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook2Rectangle1.posY == redQueenSquareK[k].posY &&
                           greyRook2Rectangle1.posX == redQueenSquareK[k].posX) {
                            greyRook2Rectangle1.posX = -1000;
                            greyRook2Rectangle1.x1 = -1000;
                            greyRook2Rectangle1.x2 = -1000;
                            greyRook2Rectangle2.x1 = -1000;
                            greyRook2Rectangle2.x2 = -1000;
                            greyRook2Base.x1 = -1000;
                            greyRook2Base.x2 = -1000;
                            greyRook2Ellipse.x1 = -1000;
                            greyRook2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyBishop1Square.posY == redQueenSquareK[k].posY &&
                           greyBishop1Square.posX == redQueenSquareK[k].posX) {
                            greyBishop1Square.posX = -1000;
                            greyBishop1Square.x1 = -1000;
                            greyBishop1Square.x2 = -1000;
                            greyBishop1Rectangle.x1 = -1000;
                            greyBishop1Rectangle.x2 = -1000;
                            greyBishop1Base.x1 = -1000;
                            greyBishop1Base.x2 = -1000;
                            greyBishop1Ellipse.x1 = -1000;
                            greyBishop1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyBishop2Square.posY == redQueenSquareK[k].posY &&
                           greyBishop2Square.posX == redQueenSquareK[k].posX) {
                            greyBishop2Square.posX = -1000;
                            greyBishop2Square.x1 = -1000;
                            greyBishop2Square.x2 = -1000;
                            greyBishop2Rectangle.x1 = -1000;
                            greyBishop2Rectangle.x2 = -1000;
                            greyBishop2Base.x1 = -1000;
                            greyBishop2Base.x2 = -1000;
                            greyBishop2Ellipse.x1 = -1000;
                            greyBishop2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                           greyKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                            greyKnight1Rectangle1.posX = -1000;
                            greyKnight1Rectangle1.x1 = -1000;
                            greyKnight1Rectangle1.x2 = -1000;
                            greyKnight1Rectangle2.x1 = -1000;
                            greyKnight1Rectangle2.x2 = -1000;
                            greyKnight1Base.x1 = -1000;
                            greyKnight1Base.x2 = -1000;
                            greyKnight1Ellipse.x1 = -1000;
                            greyKnight1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                           greyKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                            greyKnight2Rectangle1.posX = -1000;
                            greyKnight2Rectangle1.x1 = -1000;
                            greyKnight2Rectangle1.x2 = -1000;
                            greyKnight2Rectangle2.x1 = -1000;
                            greyKnight2Rectangle2.x2 = -1000;
                            greyKnight2Base.x1 = -1000;
                            greyKnight2Base.x2 = -1000;
                            greyKnight2Ellipse.x1 = -1000;
                            greyKnight2Ellipse.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    for(int p=0; p<8; p++) {
                        if(p != k &&
                           redQueenSquareK[p].posY == redQueenSquareK[k].posY - 100 &&
                           redQueenSquareK[p].posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redQueenSquare.posY == redQueenSquareK[k].posY - 100 &&
                       redQueenSquare.posX == redQueenSquareK[k].posX) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redPawnsBase[s].posY == redQueenSquareK[k].posY - 100 &&
                       redPawnsBase[s].posX == redQueenSquareK[k].posX) {
                        redQueenSquareK[k].failedpath = TRUE;                        
                        flag = TRUE;
                    }
                    if(greyPawnsBase[s].posY == redQueenSquareK[k].posY - 100 &&
                       greyPawnsBase[s].posX == redQueenSquareK[k].posX) {
                        redQueenSquareK[k].failedpath = TRUE;                        
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == redQueenSquareK[k].posY - 100 &&
                   redBishop1Square.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == redQueenSquareK[k].posY - 100 &&
                   redBishop2Square.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                   redRook1Rectangle1.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                   redRook2Rectangle1.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                   redKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                   redKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == redQueenSquareK[k].posY - 100 &&
                   redBishop1Square.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == redQueenSquareK[k].posY - 100 &&
                   redBishop2Square.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                for(int w=0; w<8; w++) {
                    if(greyQueenSquareK[w].posY == redQueenSquareK[k].posY - 100 &&
                       greyQueenSquareK[w].posX == redQueenSquareK[k].posX) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(greyQueenSquare.posY == redQueenSquareK[k].posY - 100 &&
                   greyQueenSquare.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop1Square.posY == redQueenSquareK[k].posY - 100 &&
                   greyBishop1Square.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop2Square.posY == redQueenSquareK[k].posY - 100 &&
                   greyBishop2Square.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook1Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                   greyRook1Rectangle1.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                   greyRook2Rectangle1.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                   greyKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                   greyKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    redQueenSquareK[k].posY = redQueenSquareK[k].posY - 100;
                    redQueenSquareK[k].y1 = redQueenSquareK[k].y1 - 100;
                    redQueenSquareK[k].y2 = redQueenSquareK[k].y2 - 100;
                    redQueenRectangle1K[k].y1 = redQueenRectangle1K[k].y1 - 100;
                    redQueenRectangle1K[k].y2 = redQueenRectangle1K[k].y2 - 100;
                    redQueenRectangle2K[k].y1 = redQueenRectangle2K[k].y1 - 100;
                    redQueenRectangle2K[k].y2 = redQueenRectangle2K[k].y2 - 100;
                    redQueenRectangle3K[k].y1 = redQueenRectangle3K[k].y1 - 100;
                    redQueenRectangle3K[k].y2 = redQueenRectangle3K[k].y2 - 100;
                    redQueenEllipseK[k].y1 = redQueenEllipseK[k].y1 - 100;
                    redQueenEllipseK[k].y2 = redQueenEllipseK[k].y2 - 100;
                    redQueenBaseK[k].y1 = redQueenBaseK[k].y1 - 100;
                    redQueenBaseK[k].y2 = redQueenBaseK[k].y2 - 100;
                }

                return flag;
            }
        }

        else {

            redQueenSquareK[k].failedpath = TRUE;                        
            return TRUE;
        }
    } else if(pos > 0) {
        boolean f = FALSE;
        if(pos > 100) {
            f = moveRedQueenK(msg, j, i, pos - 100, o, k);
        }
        if(!f) {
            if(pos == o) {

                redQueenSquareK[k].posY = redQueenSquareK[k].posY + 100;
                redQueenSquareK[k].y1 = redQueenSquareK[k].y1 + 100;
                redQueenSquareK[k].y2 = redQueenSquareK[k].y2 + 100;
                redQueenRectangle1K[k].y1 = redQueenRectangle1K[k].y1 + 100;
                redQueenRectangle1K[k].y2 = redQueenRectangle1K[k].y2 + 100;
                redQueenRectangle2K[k].y1 = redQueenRectangle2K[k].y1 + 100;
                redQueenRectangle2K[k].y2 = redQueenRectangle2K[k].y2 + 100;
                redQueenRectangle3K[k].y1 = redQueenRectangle3K[k].y1 + 100;
                redQueenRectangle3K[k].y2 = redQueenRectangle3K[k].y2 + 100;
                redQueenEllipseK[k].y1 = redQueenEllipseK[k].y1 + 100;
                redQueenEllipseK[k].y2 = redQueenEllipseK[k].y2 + 100;
                redQueenBaseK[k].y1 = redQueenBaseK[k].y1 + 100;
                redQueenBaseK[k].y2 = redQueenBaseK[k].y2 + 100;

                if(j*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        for(int p=0; p<8; p++) {
                            if(p != k &&
                               redQueenSquareK[p].posY == redQueenSquareK[k].posY &&
                               redQueenSquareK[p].posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                        }
                        if(redQueenSquare.posY == redQueenSquareK[k].posY &&
                           redQueenSquare.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redPawnsBase[s].posY == redQueenSquareK[k].posY &&
                           redPawnsBase[s].posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop1Square.posY == redQueenSquareK[k].posY &&
                           redBishop1Square.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == redQueenSquareK[k].posY &&
                           redBishop2Square.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                           redKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                           redKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook1Rectangle1.posY == redQueenSquareK[k].posY &&
                           redRook1Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook2Rectangle1.posY == redQueenSquareK[k].posY &&
                           redRook2Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redQueenSquareK[k].posY &&
                           redKingSquare.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop1Square.posY == redQueenSquareK[k].posY &&
                           redBishop1Square.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == redQueenSquareK[k].posY &&
                           redBishop2Square.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                           redKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                           redKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook1Rectangle1.posY == redQueenSquareK[k].posY &&
                           redRook1Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook2Rectangle1.posY == redQueenSquareK[k].posY &&
                           redRook2Rectangle1.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redQueenSquareK[k].posY &&
                           redKingSquare.posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        for(int a=0; a<8; a++) {
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyQueenSquareK[a].posY == redQueenSquareK[k].posY &&
                               greyQueenSquareK[a].posX == redQueenSquareK[k].posX) {
                                greyQueenSquareK[a].posX = -1000;
                                greyQueenSquareK[a].x1 = -1000;
                                greyQueenSquareK[a].x2 = -1000;
                                greyQueenBaseK[a].x1 = -1000;
                                greyQueenBaseK[a].x2 = -1000;
                                greyQueenEllipseK[a].x1 = -1000;
                                greyQueenEllipseK[a].x2 = -1000;
                                greyQueenRectangle1K[a].x1 = -1000;
                                greyQueenRectangle1K[a].x2 = -1000;
                                greyQueenRectangle2K[a].x1 = -1000;
                                greyQueenRectangle2K[a].x2 = -1000;
                                greyQueenRectangle3K[a].x1 = -1000;
                                greyQueenRectangle3K[a].x2 = -1000;
                            }
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyPawnsBase[s].posY == redQueenSquareK[k].posY &&
                           greyPawnsBase[s].posX == redQueenSquareK[k].posX) {
                            greyPawnsBase[s].posX = -1000;
                            greyPawnsBase[s].x1 = -1000;
                            greyPawnsBase[s].x2 = -1000;
                            greyPawnsEllipse[s].x1 = -1000;
                            greyPawnsEllipse[s].x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyQueenSquare.posY == redQueenSquareK[k].posY &&
                           greyQueenSquare.posX == redQueenSquareK[k].posX) {
                            greyQueenSquare.posX = -1000;
                            greyQueenSquare.x1 = -1000;
                            greyQueenSquare.x2 = -1000;
                            greyQueenBase.x1 = -1000;
                            greyQueenBase.x2 = -1000;
                            greyQueenEllipse.x1 = -1000;
                            greyQueenEllipse.x2 = -1000;
                            greyQueenRectangle1.x1 = -1000;
                            greyQueenRectangle1.x2 = -1000;
                            greyQueenRectangle2.x1 = -1000;
                            greyQueenRectangle2.x2 = -1000;
                            greyQueenRectangle3.x1 = -1000;
                            greyQueenRectangle3.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook1Rectangle1.posY == redQueenSquareK[k].posY &&
                           greyRook1Rectangle1.posX == redQueenSquareK[k].posX) {
                            greyRook1Rectangle1.posX = -1000;
                            greyRook1Rectangle1.x1 = -1000;
                            greyRook1Rectangle1.x2 = -1000;
                            greyRook1Rectangle2.x1 = -1000;
                            greyRook1Rectangle2.x2 = -1000;
                            greyRook1Base.x1 = -1000;
                            greyRook1Base.x2 = -1000;
                            greyRook1Ellipse.x1 = -1000;
                            greyRook1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook2Rectangle1.posY == redQueenSquareK[k].posY &&
                           greyRook2Rectangle1.posX == redQueenSquareK[k].posX) {
                            greyRook2Rectangle1.posX = -1000;
                            greyRook2Rectangle1.x1 = -1000;
                            greyRook2Rectangle1.x2 = -1000;
                            greyRook2Rectangle2.x1 = -1000;
                            greyRook2Rectangle2.x2 = -1000;
                            greyRook2Base.x1 = -1000;
                            greyRook2Base.x2 = -1000;
                            greyRook2Ellipse.x1 = -1000;
                            greyRook2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyBishop1Square.posY == redQueenSquareK[k].posY &&
                           greyBishop1Square.posX == redQueenSquareK[k].posX) {
                            greyBishop1Square.posX = -1000;
                            greyBishop1Square.x1 = -1000;
                            greyBishop1Square.x2 = -1000;
                            greyBishop1Rectangle.x1 = -1000;
                            greyBishop1Rectangle.x2 = -1000;
                            greyBishop1Base.x1 = -1000;
                            greyBishop1Base.x2 = -1000;
                            greyBishop1Ellipse.x1 = -1000;
                            greyBishop1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyBishop2Square.posY == redQueenSquareK[k].posY &&
                           greyBishop2Square.posX == redQueenSquareK[k].posX) {
                            greyBishop2Square.posX = -1000;
                            greyBishop2Square.x1 = -1000;
                            greyBishop2Square.x2 = -1000;
                            greyBishop2Rectangle.x1 = -1000;
                            greyBishop2Rectangle.x2 = -1000;
                            greyBishop2Base.x1 = -1000;
                            greyBishop2Base.x2 = -1000;
                            greyBishop2Ellipse.x1 = -1000;
                            greyBishop2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                           greyKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                            greyKnight1Rectangle1.posX = -1000;
                            greyKnight1Rectangle1.x1 = -1000;
                            greyKnight1Rectangle1.x2 = -1000;
                            greyKnight1Rectangle2.x1 = -1000;
                            greyKnight1Rectangle2.x2 = -1000;
                            greyKnight1Base.x1 = -1000;
                            greyKnight1Base.x2 = -1000;
                            greyKnight1Ellipse.x1 = -1000;
                            greyKnight1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                           greyKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                            greyKnight2Rectangle1.posX = -1000;
                            greyKnight2Rectangle1.x1 = -1000;
                            greyKnight2Rectangle1.x2 = -1000;
                            greyKnight2Rectangle2.x1 = -1000;
                            greyKnight2Rectangle2.x2 = -1000;
                            greyKnight2Base.x1 = -1000;
                            greyKnight2Base.x2 = -1000;
                            greyKnight2Ellipse.x1 = -1000;
                            greyKnight2Ellipse.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    for(int p=0; p<8; p++) {
                        if(p != k &&
                           redQueenSquareK[p].posY == redQueenSquareK[k].posY + 100 &&
                           redQueenSquareK[p].posX == redQueenSquareK[k].posX) {
                            redQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redQueenSquare.posY == redQueenSquareK[k].posY + 100 &&
                       redQueenSquare.posX == redQueenSquareK[k].posX) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redPawnsBase[s].posY == redQueenSquareK[k].posY + 100 &&
                       redPawnsBase[s].posX == redQueenSquareK[k].posX) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyPawnsBase[s].posY == redQueenSquareK[k].posY + 100 &&
                       greyPawnsBase[s].posX == redQueenSquareK[k].posX) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == redQueenSquareK[k].posY + 100 &&
                   redBishop1Square.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == redQueenSquareK[k].posY + 100 &&
                   redBishop2Square.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == redQueenSquareK[k].posY + 100 &&
                   redRook1Rectangle1.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == redQueenSquareK[k].posY + 100 &&
                   redRook2Rectangle1.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == redQueenSquareK[k].posY + 100 &&
                   redKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == redQueenSquareK[k].posY + 100 &&
                   redKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == redQueenSquareK[k].posY + 100 &&
                   redBishop1Square.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == redQueenSquareK[k].posY + 100 &&
                   redBishop2Square.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                for(int e=0; e<8; e++) {
                    if(greyQueenSquareK[e].posY == redQueenSquareK[k].posY + 100 &&
                       greyQueenSquareK[e].posX == redQueenSquareK[k].posX) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(greyQueenSquare.posY == redQueenSquareK[k].posY + 100 &&
                   greyQueenSquare.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop1Square.posY == redQueenSquareK[k].posY + 100 &&
                   greyBishop1Square.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop2Square.posY == redQueenSquareK[k].posY + 100 &&
                   greyBishop2Square.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook1Rectangle1.posY == redQueenSquareK[k].posY + 100 &&
                   greyRook1Rectangle1.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == redQueenSquareK[k].posY + 100 &&
                   greyRook2Rectangle1.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == redQueenSquareK[k].posY + 100 &&
                   greyKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == redQueenSquareK[k].posY + 100 &&
                   greyKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop1Square.posY == redQueenSquareK[k].posY + 100 &&
                   greyBishop1Square.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop2Square.posY == redQueenSquareK[k].posY + 100 &&
                   greyBishop2Square.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyQueenSquare.posY == redQueenSquareK[k].posY + 100 &&
                   greyQueenSquare.posX == redQueenSquareK[k].posX) {
                    redQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    redQueenSquareK[k].posY = redQueenSquareK[k].posY + 100;
                    redQueenSquareK[k].y1 = redQueenSquareK[k].y1 + 100;
                    redQueenSquareK[k].y2 = redQueenSquareK[k].y2 + 100;
                    redQueenRectangle1K[k].y1 = redQueenRectangle1K[k].y1 + 100;
                    redQueenRectangle1K[k].y2 = redQueenRectangle1K[k].y2 + 100;
                    redQueenRectangle2K[k].y1 = redQueenRectangle2K[k].y1 + 100;
                    redQueenRectangle2K[k].y2 = redQueenRectangle2K[k].y2 + 100;
                    redQueenRectangle3K[k].y1 = redQueenRectangle3K[k].y1 + 100;
                    redQueenRectangle3K[k].y2 = redQueenRectangle3K[k].y2 + 100;
                    redQueenEllipseK[k].y1 = redQueenEllipseK[k].y1 + 100;
                    redQueenEllipseK[k].y2 = redQueenEllipseK[k].y2 + 100;
                    redQueenBaseK[k].y1 = redQueenBaseK[k].y1 + 100;
                    redQueenBaseK[k].y2 = redQueenBaseK[k].y2 + 100;
                }

                return flag;
            }
        }

        else {

            redQueenSquareK[k].failedpath = TRUE;
            return TRUE;
        }
    }
}

boolean moveGreyQueenK(UINT msg, int j, int i, int pos, int o, int k) {

    for(int q=0; q<8; q++) {
        if(q != k &&
           redQueenSquareK[q].posX == greyQueenSquareK[k].posX &&
           redQueenSquareK[q].posY == greyQueenSquareK[k].posY) {
            greyQueenSquareK[k].failedpath = TRUE;
            return TRUE;
        }
        if(q != k &&
           redQueenSquareK[q].posX == greyQueenSquareK[k].posX &&
           redQueenSquareK[q].posY == greyQueenSquareK[k].posY) {
            greyQueenSquareK[k].failedpath = TRUE;
            return TRUE;
        }
    }
    if(redQueenSquare.posX == greyQueenSquareK[k].posX &&
       redQueenSquare.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(greyQueenSquare.posX == greyQueenSquareK[k].posX &&
       greyQueenSquare.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(redKnight1Rectangle1.posX == greyQueenSquareK[k].posX &&
       redKnight1Rectangle1.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(redKnight2Rectangle1.posX == greyQueenSquareK[k].posX &&
       redKnight2Rectangle1.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(redBishop1Square.posX == greyQueenSquareK[k].posX &&
       redBishop1Square.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(redBishop2Square.posX == greyQueenSquareK[k].posX &&
       redBishop2Square.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(redRook1Rectangle1.posX == greyQueenSquareK[k].posX &&
       redRook1Rectangle1.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(redRook2Rectangle1.posX == greyQueenSquareK[k].posX &&
       redRook2Rectangle1.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(redQueenSquare.posX == greyQueenSquareK[k].posX &&
       redQueenSquare.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    for(int g=0; g<8; g++) {
        if(redPawnsBase[g].posX == greyQueenSquareK[k].posX &&
           redPawnsBase[g].posY == greyQueenSquareK[k].posY) {
            greyQueenSquareK[k].failedpath = TRUE;
            return TRUE;
        }
    }
    if(pos < 0) {
        boolean f = FALSE;
        if(pos < -100) {
            f = moveGreyQueenK(msg, j, i, pos + 100, o, k);
        }
        if(!f) {
            if(pos == o) {

                greyQueenSquareK[k].posY = greyQueenSquareK[k].posY - 100;
                greyQueenSquareK[k].y1 = greyQueenSquareK[k].y1 - 100;
                greyQueenSquareK[k].y2 = greyQueenSquareK[k].y2 - 100;
                greyQueenRectangle1K[k].y1 = greyQueenRectangle1K[k].y1 - 100;
                greyQueenRectangle1K[k].y2 = greyQueenRectangle1K[k].y2 - 100;
                greyQueenRectangle2K[k].y1 = greyQueenRectangle2K[k].y1 - 100;
                greyQueenRectangle2K[k].y2 = greyQueenRectangle2K[k].y2 - 100;
                greyQueenRectangle3K[k].y1 = greyQueenRectangle3K[k].y1 - 100;
                greyQueenRectangle3K[k].y2 = greyQueenRectangle3K[k].y2 - 100;
                greyQueenEllipseK[k].y1 = greyQueenEllipseK[k].y1 - 100;
                greyQueenEllipseK[k].y2 = greyQueenEllipseK[k].y2 - 100;
                greyQueenBaseK[k].y1 = greyQueenBaseK[k].y1 - 100;
                greyQueenBaseK[k].y2 = greyQueenBaseK[k].y2 - 100;

                if(j*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        for(int p=0; p<8; p++) {
                            if(p != k &&
                               greyQueenSquareK[p].posY == greyQueenSquareK[k].posY &&
                               greyQueenSquareK[p].posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                        }
                        if(greyQueenSquare.posY == greyQueenSquareK[k].posY &&
                           greyQueenSquare.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyPawnsBase[s].posY == greyQueenSquareK[k].posY &&
                           greyPawnsBase[s].posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop1Square.posY == greyQueenSquareK[k].posY &&
                           greyBishop1Square.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop2Square.posY == greyQueenSquareK[k].posY &&
                           greyBishop2Square.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                           greyKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                           greyKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook1Rectangle1.posY == greyQueenSquareK[k].posY &&
                           greyRook1Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook2Rectangle1.posY == greyQueenSquareK[k].posY &&
                           greyRook2Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKingSquare.posY == greyQueenSquareK[k].posY &&
                           greyKingSquare.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop1Square.posY == greyQueenSquareK[k].posY &&
                           greyBishop1Square.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop2Square.posY == greyQueenSquareK[k].posY &&
                           greyBishop2Square.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                           greyKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                           greyKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook1Rectangle1.posY == greyQueenSquareK[k].posY &&
                           greyRook1Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook2Rectangle1.posY == greyQueenSquareK[k].posY &&
                           greyRook2Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKingSquare.posY == greyQueenSquareK[k].posY &&
                           greyKingSquare.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        for(int r=0; r<8; r++) {
                            if(redQueenSquareK[r].posY == greyQueenSquareK[k].posY &&
                               redQueenSquareK[r].posX == greyQueenSquareK[k].posX) {
                                redQueenSquareK[r].posX = -1000;
                                redQueenSquareK[r].x1 = -1000;
                                redQueenSquareK[r].x2 = -1000;
                                redQueenBaseK[r].x1 = -1000;
                                redQueenBaseK[r].x2 = -1000;
                                redQueenEllipseK[r].x1 = -1000;
                                redQueenEllipseK[r].x2 = -1000;
                                redQueenRectangle1K[r].x1 = -1000;
                                redQueenRectangle1K[r].x2 = -1000;
                                redQueenRectangle2K[r].x1 = -1000;
                                redQueenRectangle2K[r].x2 = -1000;
                                redQueenRectangle3K[r].x1 = -1000;
                                redQueenRectangle3K[r].x2 = -1000;
                            }
                        }
                        if(redPawnsBase[s].posY == greyQueenSquareK[k].posY &&
                           redPawnsBase[s].posX == greyQueenSquareK[k].posX) {
                            redPawnsBase[s].posX = -1000;
                            redPawnsBase[s].x1 = -1000;
                            redPawnsBase[s].x2 = -1000;
                            redPawnsEllipse[s].x1 = -1000;
                            redPawnsEllipse[s].x2 = -1000;
                        }
                        if(redQueenSquare.posY == greyQueenSquareK[k].posY &&
                           redQueenSquare.posX == greyQueenSquareK[k].posX) {
                            redQueenSquare.posX = -1000;
                            redQueenSquare.x1 = -1000;
                            redQueenSquare.x2 = -1000;
                            redQueenBase.x1 = -1000;
                            redQueenBase.x2 = -1000;
                            redQueenEllipse.x1 = -1000;
                            redQueenEllipse.x2 = -1000;
                            redQueenRectangle1.x1 = -1000;
                            redQueenRectangle1.x2 = -1000;
                            redQueenRectangle2.x1 = -1000;
                            redQueenRectangle2.x2 = -1000;
                            redQueenRectangle3.x1 = -1000;
                            redQueenRectangle3.x2 = -1000;
                        }
                        if(redRook1Rectangle1.posY == greyQueenSquareK[k].posY &&
                           redRook1Rectangle1.posX == greyQueenSquareK[k].posX) {
                            redRook1Rectangle1.posX = -1000;
                            redRook1Rectangle1.x1 = -1000;
                            redRook1Rectangle1.x2 = -1000;
                            redRook1Rectangle2.x1 = -1000;
                            redRook1Rectangle2.x2 = -1000;
                            redRook1Base.x1 = -1000;
                            redRook1Base.x2 = -1000;
                            redRook1Ellipse.x1 = -1000;
                            redRook1Ellipse.x2 = -1000;
                        }
                        if(redRook2Rectangle1.posY == greyQueenSquareK[k].posY &&
                           redRook2Rectangle1.posX == greyQueenSquareK[k].posX) {
                            redRook2Rectangle1.posX = -1000;
                            redRook2Rectangle1.x1 = -1000;
                            redRook2Rectangle1.x2 = -1000;
                            redRook2Rectangle2.x1 = -1000;
                            redRook2Rectangle2.x2 = -1000;
                            redRook2Base.x1 = -1000;
                            redRook2Base.x2 = -1000;
                            redRook2Ellipse.x1 = -1000;
                            redRook2Ellipse.x2 = -1000;
                        }
                        if(redBishop1Square.posY == greyQueenSquareK[k].posY &&
                           redBishop1Square.posX == greyQueenSquareK[k].posX) {
                            redBishop1Square.posX = -1000;
                            redBishop1Square.x1 = -1000;
                            redBishop1Square.x2 = -1000;
                            redBishop1Rectangle.x1 = -1000;
                            redBishop1Rectangle.x2 = -1000;
                            redBishop1Base.x1 = -1000;
                            redBishop1Base.x2 = -1000;
                            redBishop1Ellipse.x1 = -1000;
                            redBishop1Ellipse.x2 = -1000;
                        }
                        if(redBishop2Square.posY == greyQueenSquareK[k].posY &&
                           redBishop2Square.posX == greyQueenSquareK[k].posX) {
                            redBishop2Square.posX = -1000;
                            redBishop2Square.x1 = -1000;
                            redBishop2Square.x2 = -1000;
                            redBishop2Rectangle.x1 = -1000;
                            redBishop2Rectangle.x2 = -1000;
                            redBishop2Base.x1 = -1000;
                            redBishop2Base.x2 = -1000;
                            redBishop2Ellipse.x1 = -1000;
                            redBishop2Ellipse.x2 = -1000;
                        }
                        if(redKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                           redKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                            redKnight1Rectangle1.posX = -1000;
                            redKnight1Rectangle1.x1 = -1000;
                            redKnight1Rectangle1.x2 = -1000;
                            redKnight1Rectangle2.x1 = -1000;
                            redKnight1Rectangle2.x2 = -1000;
                            redKnight1Base.x1 = -1000;
                            redKnight1Base.x2 = -1000;
                            redKnight1Ellipse.x1 = -1000;
                            redKnight1Ellipse.x2 = -1000;
                        }
                        if(redKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                           redKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                            redKnight2Rectangle1.posX = -1000;
                            redKnight2Rectangle1.x1 = -1000;
                            redKnight2Rectangle1.x2 = -1000;
                            redKnight2Rectangle2.x1 = -1000;
                            redKnight2Rectangle2.x2 = -1000;
                            redKnight2Base.x1 = -1000;
                            redKnight2Base.x2 = -1000;
                            redKnight2Ellipse.x1 = -1000;
                            redKnight2Ellipse.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    for(int p=0; p<8; p++) {
                        if(p != k &&
                           redQueenSquareK[p].posY == greyQueenSquareK[k].posY - 100 &&
                           redQueenSquareK[p].posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(greyQueenSquare.posY == greyQueenSquareK[k].posY - 100 &&
                       greyQueenSquare.posX == greyQueenSquareK[k].posX) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redQueenSquare.posY == greyQueenSquareK[k].posY - 100 &&
                       redQueenSquare.posX == greyQueenSquareK[k].posX) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redPawnsBase[s].posY == greyQueenSquareK[k].posY - 100 &&
                       redPawnsBase[s].posX == greyQueenSquareK[k].posX) {
                        greyQueenSquareK[k].failedpath = TRUE;                        
                        flag = TRUE;
                    }
                    if(greyPawnsBase[s].posY == greyQueenSquareK[k].posY - 100 &&
                       greyPawnsBase[s].posX == greyQueenSquareK[k].posX) {
                        greyQueenSquareK[k].failedpath = TRUE;                        
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == greyQueenSquareK[k].posY - 100 &&
                   redBishop1Square.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == greyQueenSquareK[k].posY - 100 &&
                   redBishop2Square.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                   redRook1Rectangle1.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                   redRook2Rectangle1.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                   redKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                   redKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == greyQueenSquareK[k].posY - 100 &&
                   redBishop1Square.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == greyQueenSquareK[k].posY - 100 &&
                   redBishop2Square.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                for(int w=0; w<8; w++) {
                    if(greyQueenSquareK[w].posY == greyQueenSquareK[k].posY - 100 &&
                       greyQueenSquareK[w].posX == greyQueenSquareK[k].posX) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(greyQueenSquare.posY == greyQueenSquareK[k].posY - 100 &&
                   greyQueenSquare.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop1Square.posY == greyQueenSquareK[k].posY - 100 &&
                   greyBishop1Square.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop2Square.posY == greyQueenSquareK[k].posY - 100 &&
                   greyBishop2Square.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook1Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                   greyRook1Rectangle1.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                   greyRook2Rectangle1.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                   greyKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                   greyKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    greyQueenSquareK[k].posY = greyQueenSquareK[k].posY - 100;
                    greyQueenSquareK[k].y1 = greyQueenSquareK[k].y1 - 100;
                    greyQueenSquareK[k].y2 = greyQueenSquareK[k].y2 - 100;
                    redQueenRectangle1K[k].y1 = redQueenRectangle1K[k].y1 - 100;
                    redQueenRectangle1K[k].y2 = redQueenRectangle1K[k].y2 - 100;
                    redQueenRectangle2K[k].y1 = redQueenRectangle2K[k].y1 - 100;
                    redQueenRectangle2K[k].y2 = redQueenRectangle2K[k].y2 - 100;
                    redQueenRectangle3K[k].y1 = redQueenRectangle3K[k].y1 - 100;
                    redQueenRectangle3K[k].y2 = redQueenRectangle3K[k].y2 - 100;
                    redQueenEllipseK[k].y1 = redQueenEllipseK[k].y1 - 100;
                    redQueenEllipseK[k].y2 = redQueenEllipseK[k].y2 - 100;
                    redQueenBaseK[k].y1 = redQueenBaseK[k].y1 - 100;
                    redQueenBaseK[k].y2 = redQueenBaseK[k].y2 - 100;
                }

                return flag;
            }
        }

        else {

            greyQueenSquareK[k].failedpath = TRUE;                        
            return TRUE;
        }
    } else if(pos > 0) {
        boolean f = FALSE;
        if(pos > 100) {
            f = moveGreyQueenK(msg, j, i, pos - 100, o, k);
        }
        if(!f) {
            if(pos == o) {

                greyQueenSquareK[k].posY = greyQueenSquareK[k].posY + 100;
                greyQueenSquareK[k].y1 = greyQueenSquareK[k].y1 + 100;
                greyQueenSquareK[k].y2 = greyQueenSquareK[k].y2 + 100;
                greyQueenRectangle1K[k].y1 = greyQueenRectangle1K[k].y1 + 100;
                greyQueenRectangle1K[k].y2 = greyQueenRectangle1K[k].y2 + 100;
                greyQueenRectangle2K[k].y1 = greyQueenRectangle2K[k].y1 + 100;
                greyQueenRectangle2K[k].y2 = greyQueenRectangle2K[k].y2 + 100;
                greyQueenRectangle3K[k].y1 = greyQueenRectangle3K[k].y1 + 100;
                greyQueenRectangle3K[k].y2 = greyQueenRectangle3K[k].y2 + 100;
                greyQueenEllipseK[k].y1 = greyQueenEllipseK[k].y1 + 100;
                greyQueenEllipseK[k].y2 = greyQueenEllipseK[k].y2 + 100;
                greyQueenBaseK[k].y1 = greyQueenBaseK[k].y1 + 100;
                greyQueenBaseK[k].y2 = greyQueenBaseK[k].y2 + 100;

                if(j*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        for(int p=0; p<8; p++) {
                            if(p != k &&
                               greyQueenSquareK[p].posY == greyQueenSquareK[k].posY &&
                               greyQueenSquareK[p].posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                        }
                        if(greyQueenSquare.posY == greyQueenSquareK[k].posY &&
                           greyQueenSquare.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redQueenSquare.posY == greyQueenSquareK[k].posY &&
                           redQueenSquare.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redPawnsBase[s].posY == greyQueenSquareK[k].posY &&
                           redPawnsBase[s].posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop1Square.posY == greyQueenSquareK[k].posY &&
                           redBishop1Square.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == greyQueenSquareK[k].posY &&
                           redBishop2Square.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                           redKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                           redKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook1Rectangle1.posY == greyQueenSquareK[k].posY &&
                           redRook1Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook2Rectangle1.posY == greyQueenSquareK[k].posY &&
                           redRook2Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == greyQueenSquareK[k].posY &&
                           redKingSquare.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop1Square.posY == greyQueenSquareK[k].posY &&
                           redBishop1Square.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == greyQueenSquareK[k].posY &&
                           redBishop2Square.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                           redKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                           redKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook1Rectangle1.posY == greyQueenSquareK[k].posY &&
                           redRook1Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook2Rectangle1.posY == greyQueenSquareK[k].posY &&
                           redRook2Rectangle1.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == greyQueenSquareK[k].posY &&
                           redKingSquare.posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            return TRUE;
                        }
                        for(int a=0; a<8; a++) {
                            if(redQueenSquareK[a].posY == greyQueenSquareK[k].posY &&
                               redQueenSquareK[a].posX == greyQueenSquareK[k].posX) {
                                redQueenSquareK[a].posX = -1000;
                                redQueenSquareK[a].x1 = -1000;
                                redQueenSquareK[a].x2 = -1000;
                                redQueenBaseK[a].x1 = -1000;
                                redQueenBaseK[a].x2 = -1000;
                                redQueenEllipseK[a].x1 = -1000;
                                redQueenEllipseK[a].x2 = -1000;
                                redQueenRectangle1K[a].x1 = -1000;
                                redQueenRectangle1K[a].x2 = -1000;
                                redQueenRectangle2K[a].x1 = -1000;
                                redQueenRectangle2K[a].x2 = -1000;
                                redQueenRectangle3K[a].x1 = -1000;
                                redQueenRectangle3K[a].x2 = -1000;
                            }
                        }
                        if(greyPawnsBase[s].posY == greyQueenSquareK[k].posY &&
                           greyPawnsBase[s].posX == greyQueenSquareK[k].posX) {
                            greyPawnsBase[s].posX = -1000;
                            greyPawnsBase[s].x1 = -1000;
                            greyPawnsBase[s].x2 = -1000;
                            greyPawnsEllipse[s].x1 = -1000;
                            greyPawnsEllipse[s].x2 = -1000;
                        }
                        if(redQueenSquare.posY == greyQueenSquareK[k].posY &&
                           redQueenSquare.posX == greyQueenSquareK[k].posX) {
                            redQueenSquare.posX = -1000;
                            redQueenSquare.x1 = -1000;
                            redQueenSquare.x2 = -1000;
                            redQueenBase.x1 = -1000;
                            redQueenBase.x2 = -1000;
                            redQueenEllipse.x1 = -1000;
                            redQueenEllipse.x2 = -1000;
                            redQueenRectangle1.x1 = -1000;
                            redQueenRectangle1.x2 = -1000;
                            redQueenRectangle2.x1 = -1000;
                            redQueenRectangle2.x2 = -1000;
                            redQueenRectangle3.x1 = -1000;
                            redQueenRectangle3.x2 = -1000;
                        }
                        if(redRook1Rectangle1.posY == greyQueenSquareK[k].posY &&
                           redRook1Rectangle1.posX == greyQueenSquareK[k].posX) {
                            redRook1Rectangle1.posX = -1000;
                            redRook1Rectangle1.x1 = -1000;
                            redRook1Rectangle1.x2 = -1000;
                            redRook1Rectangle2.x1 = -1000;
                            redRook1Rectangle2.x2 = -1000;
                            redRook1Base.x1 = -1000;
                            redRook1Base.x2 = -1000;
                            redRook1Ellipse.x1 = -1000;
                            redRook1Ellipse.x2 = -1000;
                        }
                        if(redRook2Rectangle1.posY == greyQueenSquareK[k].posY &&
                           redRook2Rectangle1.posX == greyQueenSquareK[k].posX) {
                            redRook2Rectangle1.posX = -1000;
                            redRook2Rectangle1.x1 = -1000;
                            redRook2Rectangle1.x2 = -1000;
                            redRook2Rectangle2.x1 = -1000;
                            redRook2Rectangle2.x2 = -1000;
                            redRook2Base.x1 = -1000;
                            redRook2Base.x2 = -1000;
                            redRook2Ellipse.x1 = -1000;
                            redRook2Ellipse.x2 = -1000;
                        }
                        if(redBishop1Square.posY == greyQueenSquareK[k].posY &&
                           redBishop1Square.posX == greyQueenSquareK[k].posX) {
                            redBishop1Square.posX = -1000;
                            redBishop1Square.x1 = -1000;
                            redBishop1Square.x2 = -1000;
                            redBishop1Rectangle.x1 = -1000;
                            redBishop1Rectangle.x2 = -1000;
                            redBishop1Base.x1 = -1000;
                            redBishop1Base.x2 = -1000;
                            redBishop1Ellipse.x1 = -1000;
                            redBishop1Ellipse.x2 = -1000;
                        }
                        if(redBishop2Square.posY == greyQueenSquareK[k].posY &&
                           redBishop2Square.posX == greyQueenSquareK[k].posX) {
                            redBishop2Square.posX = -1000;
                            redBishop2Square.x1 = -1000;
                            redBishop2Square.x2 = -1000;
                            redBishop2Rectangle.x1 = -1000;
                            redBishop2Rectangle.x2 = -1000;
                            redBishop2Base.x1 = -1000;
                            redBishop2Base.x2 = -1000;
                            redBishop2Ellipse.x1 = -1000;
                            redBishop2Ellipse.x2 = -1000;
                        }
                        if(redKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                           redKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                            redKnight1Rectangle1.posX = -1000;
                            redKnight1Rectangle1.x1 = -1000;
                            redKnight1Rectangle1.x2 = -1000;
                            redKnight1Rectangle2.x1 = -1000;
                            redKnight1Rectangle2.x2 = -1000;
                            redKnight1Base.x1 = -1000;
                            redKnight1Base.x2 = -1000;
                            redKnight1Ellipse.x1 = -1000;
                            redKnight1Ellipse.x2 = -1000;
                        }
                        if(redKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                           redKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                            redKnight2Rectangle1.posX = -1000;
                            redKnight2Rectangle1.x1 = -1000;
                            redKnight2Rectangle1.x2 = -1000;
                            redKnight2Rectangle2.x1 = -1000;
                            redKnight2Rectangle2.x2 = -1000;
                            redKnight2Base.x1 = -1000;
                            redKnight2Base.x2 = -1000;
                            redKnight2Ellipse.x1 = -1000;
                            redKnight2Ellipse.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    for(int p=0; p<8; p++) {
                        if(p != k &&
                           greyQueenSquareK[p].posY == greyQueenSquareK[k].posY + 100 &&
                           greyQueenSquareK[p].posX == greyQueenSquareK[k].posX) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(greyQueenSquare.posY == greyQueenSquareK[k].posY + 100 &&
                       greyQueenSquare.posX == greyQueenSquareK[k].posX) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redQueenSquare.posY == greyQueenSquareK[k].posY + 100 &&
                       redQueenSquare.posX == greyQueenSquareK[k].posX) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redPawnsBase[s].posY == greyQueenSquareK[k].posY + 100 &&
                       redPawnsBase[s].posX == greyQueenSquareK[k].posX) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyPawnsBase[s].posY == greyQueenSquareK[k].posY + 100 &&
                       greyPawnsBase[s].posX == greyQueenSquareK[k].posX) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == greyQueenSquareK[k].posY + 100 &&
                   redBishop1Square.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == greyQueenSquareK[k].posY + 100 &&
                   redBishop2Square.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == greyQueenSquareK[k].posY + 100 &&
                   redRook1Rectangle1.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == greyQueenSquareK[k].posY + 100 &&
                   redRook2Rectangle1.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == greyQueenSquareK[k].posY + 100 &&
                   redKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == greyQueenSquareK[k].posY + 100 &&
                   redKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == greyQueenSquareK[k].posY + 100 &&
                   redBishop1Square.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop2Square.posY == greyQueenSquareK[k].posY + 100 &&
                   redBishop2Square.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                for(int e=0; e<8; e++) {
                    if(greyQueenSquareK[e].posY == greyQueenSquareK[k].posY + 100 &&
                       greyQueenSquareK[e].posX == greyQueenSquareK[k].posX) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(greyQueenSquare.posY == greyQueenSquareK[k].posY + 100 &&
                   greyQueenSquare.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop1Square.posY == greyQueenSquareK[k].posY + 100 &&
                   greyBishop1Square.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop2Square.posY == greyQueenSquareK[k].posY + 100 &&
                   greyBishop2Square.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook1Rectangle1.posY == greyQueenSquareK[k].posY + 100 &&
                   greyRook1Rectangle1.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == greyQueenSquareK[k].posY + 100 &&
                   greyRook2Rectangle1.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == greyQueenSquareK[k].posY + 100 &&
                   greyKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == greyQueenSquareK[k].posY + 100 &&
                   greyKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop1Square.posY == greyQueenSquareK[k].posY + 100 &&
                   greyBishop1Square.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyBishop2Square.posY == greyQueenSquareK[k].posY + 100 &&
                   greyBishop2Square.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyQueenSquare.posY == greyQueenSquareK[k].posY + 100 &&
                   greyQueenSquare.posX == greyQueenSquareK[k].posX) {
                    greyQueenSquareK[k].failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    greyQueenSquareK[k].posY = greyQueenSquareK[k].posY + 100;
                    greyQueenSquareK[k].y1 = greyQueenSquareK[k].y1 + 100;
                    greyQueenSquareK[k].y2 = greyQueenSquareK[k].y2 + 100;
                    greyQueenRectangle1K[k].y1 = greyQueenRectangle1K[k].y1 + 100;
                    greyQueenRectangle1K[k].y2 = greyQueenRectangle1K[k].y2 + 100;
                    greyQueenRectangle2K[k].y1 = greyQueenRectangle2K[k].y1 + 100;
                    greyQueenRectangle2K[k].y2 = greyQueenRectangle2K[k].y2 + 100;
                    greyQueenRectangle3K[k].y1 = greyQueenRectangle3K[k].y1 + 100;
                    greyQueenRectangle3K[k].y2 = greyQueenRectangle3K[k].y2 + 100;
                    greyQueenEllipseK[k].y1 = greyQueenEllipseK[k].y1 + 100;
                    greyQueenEllipseK[k].y2 = greyQueenEllipseK[k].y2 + 100;
                    greyQueenBaseK[k].y1 = greyQueenBaseK[k].y1 + 100;
                    greyQueenBaseK[k].y2 = greyQueenBaseK[k].y2 + 100;
                }

                return flag;
            }
        }

        else {

            greyQueenSquareK[k].failedpath = TRUE;
            return TRUE;
        }
    }
}

boolean moveGreyQueenDiagonally(UINT msg, int j, int i, int pos1, int ps1, int pos2, int ps2) {

    if(redKnight1Rectangle1.posX == greyQueenSquare.posX &&
       redKnight1Rectangle1.posY == greyQueenSquare.posY) {
        greyQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(redKnight2Rectangle1.posX == greyQueenSquare.posX &&
       redKnight2Rectangle1.posY == greyQueenSquare.posY) {
        greyQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(redBishop1Square.posX == greyQueenSquare.posX &&
       redBishop1Square.posY == greyQueenSquare.posY) {
        greyQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(redBishop2Square.posX == greyQueenSquare.posX &&
       redBishop2Square.posY == greyQueenSquare.posY) {
        greyQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(redRook1Rectangle1.posX == greyQueenSquare.posX &&
       redRook1Rectangle1.posY == greyQueenSquare.posY) {
        greyQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(redRook2Rectangle1.posX == greyQueenSquare.posX &&
       redRook2Rectangle1.posY == greyQueenSquare.posY) {
        greyQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(redQueenSquare.posX == greyQueenSquare.posX &&
       redQueenSquare.posY == greyQueenSquare.posY) {
        greyQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    for(int g=0; g<8; g++) {
        if(redPawnsBase[g].posX == greyQueenSquare.posX &&
           redPawnsBase[g].posY == greyQueenSquare.posY) {
            greyQueenSquare.failedpath = TRUE;
            return TRUE;
        }
    }
    boolean fail = FALSE;
    if(pos1 == ps1) {
        fail = FALSE;
    } else if(pos1 == -ps1) {
        fail = FALSE;
    } else {
        fail = TRUE;
        greyQueenSquare.failedpath = fail;
    }
    if(pos1 < 0) {
        if(ps1 < 0) {
            boolean f = FALSE;
            if(pos1 < -100 && ps1 < -100) {
                f = moveGreyQueenDiagonally(msg, j, i, pos1 + 100, ps1 + 100, pos2, ps2);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    greyQueenSquare.posY = greyQueenSquare.posY - 100;
                    greyQueenSquare.posX = greyQueenSquare.posX - 100;
                    greyQueenSquare.y1 = greyQueenSquare.y1 - 100;
                    greyQueenSquare.x1 = greyQueenSquare.x1 - 100;
                    greyQueenSquare.y2 = greyQueenSquare.y2 - 100;
                    greyQueenSquare.x2 = greyQueenSquare.x2 - 100;
                    greyQueenRectangle1.y1 = greyQueenRectangle1.y1 - 100;
                    greyQueenRectangle1.x1 = greyQueenRectangle1.x1 - 100;
                    greyQueenRectangle1.y2 = greyQueenRectangle1.y2 - 100;
                    greyQueenRectangle1.x2 = greyQueenRectangle1.x2 - 100;
                    greyQueenRectangle2.y1 = greyQueenRectangle2.y1 - 100;
                    greyQueenRectangle2.x1 = greyQueenRectangle2.x1 - 100;
                    greyQueenRectangle2.y2 = greyQueenRectangle2.y2 - 100;
                    greyQueenRectangle2.x2 = greyQueenRectangle2.x2 - 100;
                    greyQueenRectangle3.y1 = greyQueenRectangle3.y1 - 100;
                    greyQueenRectangle3.x1 = greyQueenRectangle3.x1 - 100;
                    greyQueenRectangle3.y2 = greyQueenRectangle3.y2 - 100;
                    greyQueenRectangle3.x2 = greyQueenRectangle3.x2 - 100;
                    greyQueenEllipse.y1 = greyQueenEllipse.y1 - 100;
                    greyQueenEllipse.x1 = greyQueenEllipse.x1 - 100;
                    greyQueenEllipse.y2 = greyQueenEllipse.y2 - 100;
                    greyQueenEllipse.x2 = greyQueenEllipse.x2 - 100;
                    greyQueenBase.y1 = greyQueenBase.y1 - 100;
                    greyQueenBase.x1 = greyQueenBase.x1 - 100;
                    greyQueenBase.y2 = greyQueenBase.y2 - 100;
                    greyQueenBase.x2 = greyQueenBase.x2 - 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            if(greyPawnsBase[s].posY == greyQueenSquare.posY &&
                               greyPawnsBase[s].posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop1Square.posY == greyQueenSquare.posY &&
                               greyBishop1Square.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop2Square.posY == greyQueenSquare.posY &&
                               greyBishop2Square.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight1Rectangle1.posY == greyQueenSquare.posY &&
                               greyKnight1Rectangle1.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight2Rectangle1.posY == greyQueenSquare.posY &&
                               greyKnight2Rectangle1.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook1Rectangle1.posY == greyQueenSquare.posY &&
                               greyRook1Rectangle1.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook2Rectangle1.posY == greyQueenSquare.posY &&
                               greyRook2Rectangle1.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKingSquare.posY == greyQueenSquare.posY &&
                               greyKingSquare.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop1Square.posY == greyQueenSquare.posY &&
                               greyBishop1Square.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop2Square.posY == greyQueenSquare.posY &&
                               greyBishop2Square.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight1Rectangle1.posY == greyQueenSquare.posY &&
                               greyKnight1Rectangle1.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight2Rectangle1.posY == greyQueenSquare.posY &&
                               greyKnight2Rectangle1.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook1Rectangle1.posY == greyQueenSquare.posY &&
                               greyRook1Rectangle1.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook2Rectangle1.posY == greyQueenSquare.posY &&
                               greyRook2Rectangle1.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKingSquare.posY == greyQueenSquare.posY &&
                               greyKingSquare.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redPawnsBase[s].posY == greyQueenSquare.posY &&
                               redPawnsBase[s].posX == greyQueenSquare.posX) {
                                redPawnsBase[s].posX = -1000;
                                redPawnsBase[s].x1 = -1000;
                                redPawnsBase[s].x2 = -1000;
                                redPawnsEllipse[s].x1 = -1000;
                                redPawnsEllipse[s].x2 = -1000;
                            }
                            if(redKnight1Rectangle1.posY == greyQueenSquare.posY &&
                               redKnight1Rectangle1.posX == greyQueenSquare.posX) {
                                redKnight1Rectangle1.posX = -1000;
                                redKnight1Rectangle1.x1 = -1000;
                                redKnight1Rectangle1.x2 = -1000;
                                redKnight1Rectangle2.x1 = -1000;
                                redKnight1Rectangle2.x2 = -1000;
                                redKnight1Base.x1 = -1000;
                                redKnight1Base.x2 = -1000;
                                redKnight1Ellipse.x1 = -1000;
                                redKnight1Ellipse.x2 = -1000;
                            }
                            if(redKnight2Rectangle1.posY == greyQueenSquare.posY &&
                               redKnight2Rectangle1.posX == greyQueenSquare.posX) {
                                redKnight2Rectangle1.posX = -1000;
                                redKnight2Rectangle1.x1 = -1000;
                                redKnight2Rectangle1.x2 = -1000;
                                redKnight2Rectangle2.x1 = -1000;
                                redKnight2Rectangle2.x2 = -1000;
                                redKnight2Base.x1 = -1000;
                                redKnight2Base.x2 = -1000;
                                redKnight2Ellipse.x1 = -1000;
                                redKnight2Ellipse.x2 = -1000;
                            }
                            if(redBishop1Square.posY == greyQueenSquare.posY &&
                               redBishop1Square.posX == greyQueenSquare.posX) {
                                redBishop1Square.posX = -1000;
                                redBishop1Square.x1 = -1000;
                                redBishop1Square.x2 = -1000;
                                redBishop1Rectangle.x1 = -1000;
                                redBishop1Rectangle.x2 = -1000;
                                redBishop1Base.x1 = -1000;
                                redBishop1Base.x2 = -1000;
                                redBishop1Ellipse.x1 = -1000;
                                redBishop1Ellipse.x2 = -1000;
                            }
                            if(redBishop2Square.posY == greyQueenSquare.posY &&
                               redBishop2Square.posX == greyQueenSquare.posX) {
                                redBishop2Square.posX = -1000;
                                redBishop2Square.x1 = -1000;
                                redBishop2Square.x2 = -1000;
                                redBishop2Rectangle.x1 = -1000;
                                redBishop2Rectangle.x2 = -1000;
                                redBishop2Base.x1 = -1000;
                                redBishop2Base.x2 = -1000;
                                redBishop2Ellipse.x1 = -1000;
                                redBishop2Ellipse.x2 = -1000;
                            }
                            if(redRook1Rectangle1.posY == greyQueenSquare.posY &&
                               redRook1Rectangle1.posX == greyQueenSquare.posX) {
                                redRook1Rectangle1.posX = -1000;
                                redRook1Rectangle1.x1 = -1000;
                                redRook1Rectangle1.x2 = -1000;
                                redRook1Rectangle2.x1 = -1000;
                                redRook1Rectangle2.x2 = -1000;
                                redRook1Base.x1 = -1000;
                                redRook1Base.x2 = -1000;
                                redRook1Ellipse.x1 = -1000;
                                redRook1Ellipse.x2 = -1000;
                            }
                            if(redRook2Rectangle1.posY == greyQueenSquare.posY &&
                               redRook2Rectangle1.posX == greyQueenSquare.posX) {
                                redRook2Rectangle1.posX = -1000;
                                redRook2Rectangle1.x1 = -1000;
                                redRook2Rectangle1.x2 = -1000;
                                redRook2Rectangle2.x1 = -1000;
                                redRook2Rectangle2.x2 = -1000;
                                redRook2Base.x1 = -1000;
                                redRook2Base.x2 = -1000;
                                redRook2Ellipse.x1 = -1000;
                                redRook2Ellipse.x2 = -1000;
                            }
                            if(redQueenSquare.posY == greyQueenSquare.posY &&
                               redQueenSquare.posX == greyQueenSquare.posX) {
                                redQueenSquare.posX = -1000;
                                redQueenSquare.x1 = -1000;
                                redQueenSquare.x2 = -1000;
                                redQueenBase.x1 = -1000;
                                redQueenBase.x2 = -1000;
                                redQueenEllipse.x1 = -1000;
                                redQueenEllipse.x2 = -1000;
                                redQueenRectangle1.x1 = -1000;
                                redQueenRectangle1.x2 = -1000;
                                redQueenRectangle2.x1 = -1000;
                                redQueenRectangle2.x2 = -1000;
                                redQueenRectangle3.x1 = -1000;
                                redQueenRectangle3.x2 = -1000;
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == greyQueenSquare.posY - 100 &&
                           redPawnsBase[s].posX == greyQueenSquare.posX - 100) {
                            greyQueenSquare.failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == greyQueenSquare.posY - 100 &&
                           greyPawnsBase[s].posX == greyQueenSquare.posX - 100) {
                            greyQueenSquare.failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redQueenSquare.posY == greyQueenSquare.posY - 100 &&
                       redQueenSquare.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == greyQueenSquare.posY - 100 &&
                       redBishop1Square.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyQueenSquare.posY - 100 &&
                       redBishop2Square.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == greyQueenSquare.posY - 100 &&
                       redRook1Rectangle1.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == greyQueenSquare.posY - 100 &&
                       redRook2Rectangle1.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == greyQueenSquare.posY - 100 &&
                       redKnight1Rectangle1.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == greyQueenSquare.posY - 100 &&
                       redKnight2Rectangle1.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == greyQueenSquare.posY - 100 &&
                       redBishop1Square.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyQueenSquare.posY - 100 &&
                       redBishop2Square.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == redQueenSquare.posY - 100 &&
                       greyQueenSquare.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == redQueenSquare.posY - 100 &&
                       greyBishop1Square.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == redQueenSquare.posY - 100 &&
                       greyBishop2Square.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == greyQueenSquare.posY - 100 &&
                       greyRook1Rectangle1.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == greyQueenSquare.posY - 100 &&
                       greyRook2Rectangle1.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == greyQueenSquare.posY - 100 &&
                       greyKnight1Rectangle1.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == greyQueenSquare.posY - 100 &&
                       greyKnight2Rectangle1.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == greyQueenSquare.posY - 100 &&
                       greyBishop1Square.posX == greyQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == greyQueenSquare.posY - 100 &&
                       greyBishop2Square.posX == greyQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == greyQueenSquare.posY - 100 &&
                       greyQueenSquare.posX == greyQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        greyQueenSquare.posY = greyQueenSquare.posY - 100;
                        greyQueenSquare.y1 = greyQueenSquare.y1 - 100;
                        greyQueenSquare.y2 = greyQueenSquare.y2 - 100;
                        greyQueenRectangle1.y1 = greyQueenRectangle1.y1 - 100;
                        greyQueenRectangle1.y2 = greyQueenRectangle1.y2 - 100;
                        greyQueenRectangle2.y1 = greyQueenRectangle2.y1 - 100;
                        greyQueenRectangle2.y2 = greyQueenRectangle2.y2 - 100;
                        greyQueenRectangle3.y1 = greyQueenRectangle3.y1 - 100;
                        greyQueenRectangle3.y2 = greyQueenRectangle3.y2 - 100;
                        greyQueenEllipse.y1 = greyQueenEllipse.y1 - 100;
                        greyQueenEllipse.y2 = greyQueenEllipse.y2 - 100;
                        greyQueenBase.y1 = greyQueenBase.y1 - 100;
                        greyQueenBase.y2 = greyQueenBase.y2 - 100;
                        greyQueenSquare.posX = greyQueenSquare.posX - 100;
                        greyQueenSquare.x1 = greyQueenSquare.x1 - 100;
                        greyQueenSquare.x2 = greyQueenSquare.x2 - 100;
                        greyQueenRectangle1.x1 = greyQueenRectangle1.x1 - 100;
                        greyQueenRectangle1.x2 = greyQueenRectangle1.x2 - 100;
                        greyQueenRectangle2.x1 = greyQueenRectangle2.x1 - 100;
                        greyQueenRectangle2.x2 = greyQueenRectangle2.x2 - 100;
                        greyQueenRectangle3.x1 = greyQueenRectangle3.x1 - 100;
                        greyQueenRectangle3.x2 = greyQueenRectangle3.x2 - 100;
                        greyQueenEllipse.x1 = greyQueenEllipse.x1 - 100;
                        greyQueenEllipse.x2 = greyQueenEllipse.x2 - 100;
                        greyQueenBase.x1 = greyQueenBase.x1 - 100;
                        greyQueenBase.x2 = greyQueenBase.x2 - 100;
                    }

                    return flag;
                }
            }

            else {

                greyQueenSquare.failedpath = TRUE;
                return TRUE;
            }
        }
        if(ps1 > 0) {
            boolean f = FALSE;
            if(pos1 < -100 && ps1 > 100) {
                f = moveGreyQueenDiagonally(msg, j, i, pos1 + 100, ps1 - 100, pos2, ps2);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    greyQueenSquare.posY = greyQueenSquare.posY - 100;
                    greyQueenSquare.posX = greyQueenSquare.posX + 100;
                    greyQueenSquare.y1 = greyQueenSquare.y1 - 100;
                    greyQueenSquare.x1 = greyQueenSquare.x1 + 100;
                    greyQueenSquare.y2 = greyQueenSquare.y2 - 100;
                    greyQueenSquare.x2 = greyQueenSquare.x2 + 100;
                    greyQueenRectangle1.y1 = greyQueenRectangle1.y1 - 100;
                    greyQueenRectangle1.x1 = greyQueenRectangle1.x1 + 100;
                    greyQueenRectangle1.y2 = greyQueenRectangle1.y2 - 100;
                    greyQueenRectangle1.x2 = greyQueenRectangle1.x2 + 100;
                    greyQueenRectangle2.y1 = greyQueenRectangle2.y1 - 100;
                    greyQueenRectangle2.x1 = greyQueenRectangle2.x1 + 100;
                    greyQueenRectangle2.y2 = greyQueenRectangle2.y2 - 100;
                    greyQueenRectangle2.x2 = greyQueenRectangle2.x2 + 100;
                    greyQueenRectangle3.y1 = greyQueenRectangle3.y1 - 100;
                    greyQueenRectangle3.x1 = greyQueenRectangle3.x1 + 100;
                    greyQueenRectangle3.y2 = greyQueenRectangle3.y2 - 100;
                    greyQueenRectangle3.x2 = greyQueenRectangle3.x2 + 100;
                    greyQueenEllipse.y1 = greyQueenEllipse.y1 - 100;
                    greyQueenEllipse.x1 = greyQueenEllipse.x1 + 100;
                    greyQueenEllipse.y2 = greyQueenEllipse.y2 - 100;
                    greyQueenEllipse.x2 = greyQueenEllipse.x2 + 100;
                    greyQueenBase.y1 = greyQueenBase.y1 - 100;
                    greyQueenBase.x1 = greyQueenBase.x1 + 100;
                    greyQueenBase.y2 = greyQueenBase.y2 - 100;
                    greyQueenBase.x2 = greyQueenBase.x2 + 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            if(greyPawnsBase[s].posY == greyQueenSquare.posY &&
                               greyPawnsBase[s].posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop1Square.posY == greyQueenSquare.posY &&
                               greyBishop1Square.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop2Square.posY == greyQueenSquare.posY &&
                               greyBishop2Square.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight1Rectangle1.posY == greyQueenSquare.posY &&
                               greyKnight1Rectangle1.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight2Rectangle1.posY == greyQueenSquare.posY &&
                               greyKnight2Rectangle1.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook1Rectangle1.posY == greyQueenSquare.posY &&
                               greyRook1Rectangle1.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook2Rectangle1.posY == greyQueenSquare.posY &&
                               greyRook2Rectangle1.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKingSquare.posY == greyQueenSquare.posY &&
                               greyKingSquare.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redPawnsBase[s].posY == greyQueenSquare.posY &&
                               redPawnsBase[s].posX == greyQueenSquare.posX) {
                                redPawnsBase[s].posX = -1000;
                                redPawnsBase[s].x1 = -1000;
                                redPawnsBase[s].x2 = -1000;
                                redPawnsEllipse[s].x1 = -1000;
                                redPawnsEllipse[s].x2 = -1000;
                            }
                            if(redKnight1Rectangle1.posY == greyQueenSquare.posY &&
                               redKnight1Rectangle1.posX == greyQueenSquare.posX) {
                                redKnight1Rectangle1.posX = -1000;
                                redKnight1Rectangle1.x1 = -1000;
                                redKnight1Rectangle1.x2 = -1000;
                                redKnight1Rectangle2.x1 = -1000;
                                redKnight1Rectangle2.x2 = -1000;
                                redKnight1Base.x1 = -1000;
                                redKnight1Base.x2 = -1000;
                                redKnight1Ellipse.x1 = -1000;
                                redKnight1Ellipse.x2 = -1000;
                            }
                            if(redKnight2Rectangle1.posY == greyQueenSquare.posY &&
                               redKnight2Rectangle1.posX == greyQueenSquare.posX) {
                                redKnight2Rectangle1.posX = -1000;
                                redKnight2Rectangle1.x1 = -1000;
                                redKnight2Rectangle1.x2 = -1000;
                                redKnight2Rectangle2.x1 = -1000;
                                redKnight2Rectangle2.x2 = -1000;
                                redKnight2Base.x1 = -1000;
                                redKnight2Base.x2 = -1000;
                                redKnight2Ellipse.x1 = -1000;
                                redKnight2Ellipse.x2 = -1000;
                            }
                            if(redBishop1Square.posY == greyQueenSquare.posY &&
                               redBishop1Square.posX == greyQueenSquare.posX) {
                                redBishop1Square.posX = -1000;
                                redBishop1Square.x1 = -1000;
                                redBishop1Square.x2 = -1000;
                                redBishop1Rectangle.x1 = -1000;
                                redBishop1Rectangle.x2 = -1000;
                                redBishop1Base.x1 = -1000;
                                redBishop1Base.x2 = -1000;
                                redBishop1Ellipse.x1 = -1000;
                                redBishop1Ellipse.x2 = -1000;
                            }
                            if(redBishop2Square.posY == greyQueenSquare.posY &&
                               redBishop2Square.posX == greyQueenSquare.posX) {
                                redBishop2Square.posX = -1000;
                                redBishop2Square.x1 = -1000;
                                redBishop2Square.x2 = -1000;
                                redBishop2Rectangle.x1 = -1000;
                                redBishop2Rectangle.x2 = -1000;
                                redBishop2Base.x1 = -1000;
                                redBishop2Base.x2 = -1000;
                                redBishop2Ellipse.x1 = -1000;
                                redBishop2Ellipse.x2 = -1000;
                            }
                            if(redRook1Rectangle1.posY == greyQueenSquare.posY &&
                               redRook1Rectangle1.posX == greyQueenSquare.posX) {
                                redRook1Rectangle1.posX = -1000;
                                redRook1Rectangle1.x1 = -1000;
                                redRook1Rectangle1.x2 = -1000;
                                redRook1Rectangle2.x1 = -1000;
                                redRook1Rectangle2.x2 = -1000;
                                redRook1Base.x1 = -1000;
                                redRook1Base.x2 = -1000;
                                redRook1Ellipse.x1 = -1000;
                                redRook1Ellipse.x2 = -1000;
                            }
                            if(redRook2Rectangle1.posY == greyQueenSquare.posY &&
                               redRook2Rectangle1.posX == greyQueenSquare.posX) {
                                redRook2Rectangle1.posX = -1000;
                                redRook2Rectangle1.x1 = -1000;
                                redRook2Rectangle1.x2 = -1000;
                                redRook2Rectangle2.x1 = -1000;
                                redRook2Rectangle2.x2 = -1000;
                                redRook2Base.x1 = -1000;
                                redRook2Base.x2 = -1000;
                                redRook2Ellipse.x1 = -1000;
                                redRook2Ellipse.x2 = -1000;
                            }
                            if(redQueenSquare.posY == greyQueenSquare.posY &&
                               redQueenSquare.posX == greyQueenSquare.posX) {
                                redQueenSquare.posX = -1000;
                                redQueenSquare.x1 = -1000;
                                redQueenSquare.x2 = -1000;
                                redQueenBase.x1 = -1000;
                                redQueenBase.x2 = -1000;
                                redQueenEllipse.x1 = -1000;
                                redQueenEllipse.x2 = -1000;
                                redQueenRectangle1.x1 = -1000;
                                redQueenRectangle1.x2 = -1000;
                                redQueenRectangle2.x1 = -1000;
                                redQueenRectangle2.x2 = -1000;
                                redQueenRectangle3.x1 = -1000;
                                redQueenRectangle3.x2 = -1000;
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == greyQueenSquare.posY - 100 &&
                           redPawnsBase[s].posX == greyQueenSquare.posX + 100) {
                            greyQueenSquare.failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == greyQueenSquare.posY - 100 &&
                           greyPawnsBase[s].posX == greyQueenSquare.posX + 100) {
                            greyQueenSquare.failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redQueenSquare.posY == greyQueenSquare.posY - 100 &&
                       redQueenSquare.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == greyQueenSquare.posY - 100 &&
                       redBishop1Square.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyQueenSquare.posY - 100 &&
                       redBishop2Square.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == greyQueenSquare.posY - 100 &&
                       redRook1Rectangle1.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == greyQueenSquare.posY - 100 &&
                       redRook2Rectangle1.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == greyQueenSquare.posY - 100 &&
                       redKnight1Rectangle1.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == greyQueenSquare.posY - 100 &&
                       redKnight2Rectangle1.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == greyQueenSquare.posY - 100 &&
                       redBishop1Square.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyQueenSquare.posY - 100 &&
                       redBishop2Square.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == greyQueenSquare.posY - 100 &&
                       greyRook1Rectangle1.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == greyQueenSquare.posY - 100 &&
                       greyRook2Rectangle1.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == greyQueenSquare.posY - 100 &&
                       greyKnight1Rectangle1.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == greyQueenSquare.posY - 100 &&
                       greyKnight2Rectangle1.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == greyQueenSquare.posY - 100 &&
                       greyBishop1Square.posX == greyQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == greyQueenSquare.posY - 100 &&
                       greyBishop2Square.posX == greyQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == greyQueenSquare.posY - 100 &&
                       greyQueenSquare.posX == greyQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        greyQueenSquare.posY = greyQueenSquare.posY - 100;
                        greyQueenSquare.y1 = greyQueenSquare.y1 - 100;
                        greyQueenSquare.y2 = greyQueenSquare.y2 - 100;
                        greyQueenRectangle1.y1 = greyQueenRectangle1.y1 - 100;
                        greyQueenRectangle1.y2 = greyQueenRectangle1.y2 - 100;
                        greyQueenRectangle2.y1 = greyQueenRectangle2.y1 - 100;
                        greyQueenRectangle2.y2 = greyQueenRectangle2.y2 - 100;
                        greyQueenRectangle3.y1 = greyQueenRectangle3.y1 - 100;
                        greyQueenRectangle3.y2 = greyQueenRectangle3.y2 - 100;
                        greyQueenEllipse.y1 = greyQueenEllipse.y1 - 100;
                        greyQueenEllipse.y2 = greyQueenEllipse.y2 - 100;
                        greyQueenBase.y1 = greyQueenBase.y1 - 100;
                        greyQueenBase.y2 = greyQueenBase.y2 - 100;
                        greyQueenSquare.posX = greyQueenSquare.posX + 100;
                        greyQueenSquare.x1 = greyQueenSquare.x1 + 100;
                        greyQueenSquare.x2 = greyQueenSquare.x2 + 100;
                        greyQueenRectangle1.x1 = greyQueenRectangle1.x1 + 100;
                        greyQueenRectangle1.x2 = greyQueenRectangle1.x2 + 100;
                        greyQueenRectangle2.x1 = greyQueenRectangle2.x1 + 100;
                        greyQueenRectangle2.x2 = greyQueenRectangle2.x2 + 100;
                        greyQueenRectangle3.x1 = greyQueenRectangle3.x1 + 100;
                        greyQueenRectangle3.x2 = greyQueenRectangle3.x2 + 100;
                        greyQueenEllipse.x1 = greyQueenEllipse.x1 + 100;
                        greyQueenEllipse.x2 = greyQueenEllipse.x2 + 100;
                        greyQueenBase.x1 = greyQueenBase.x1 + 100;
                        greyQueenBase.x2 = greyQueenBase.x2 + 100;
                    }

                    return flag;
                }
            }

            else {

                greyQueenSquare.failedpath = TRUE;
                return TRUE;
            }
        }
    } else if(pos1 > 0) {
        if(ps1 < 0) {
            boolean f = FALSE;
            if(pos1 > 100 && ps1 < -100) {
                f = moveGreyQueenDiagonally(msg, j, i, pos1 - 100, ps1 + 100, pos2, ps2);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    greyQueenSquare.posY = greyQueenSquare.posY + 100;
                    greyQueenSquare.posX = greyQueenSquare.posX - 100;
                    greyQueenSquare.y1 = greyQueenSquare.y1 + 100;
                    greyQueenSquare.x1 = greyQueenSquare.x1 - 100;
                    greyQueenSquare.y2 = greyQueenSquare.y2 + 100;
                    greyQueenSquare.x2 = greyQueenSquare.x2 - 100;
                    greyQueenRectangle1.y1 = greyQueenRectangle1.y1 + 100;
                    greyQueenRectangle1.x1 = greyQueenRectangle1.x1 - 100;
                    greyQueenRectangle1.y2 = greyQueenRectangle1.y2 + 100;
                    greyQueenRectangle1.x2 = greyQueenRectangle1.x2 - 100;
                    greyQueenRectangle2.y1 = greyQueenRectangle2.y1 + 100;
                    greyQueenRectangle2.x1 = greyQueenRectangle2.x1 - 100;
                    greyQueenRectangle2.y2 = greyQueenRectangle2.y2 + 100;
                    greyQueenRectangle2.x2 = greyQueenRectangle2.x2 - 100;
                    greyQueenRectangle3.y1 = greyQueenRectangle3.y1 + 100;
                    greyQueenRectangle3.x1 = greyQueenRectangle3.x1 - 100;
                    greyQueenRectangle3.y2 = greyQueenRectangle3.y2 + 100;
                    greyQueenRectangle3.x2 = greyQueenRectangle3.x2 - 100;
                    greyQueenEllipse.y1 = greyQueenEllipse.y1 + 100;
                    greyQueenEllipse.x1 = greyQueenEllipse.x1 - 100;
                    greyQueenEllipse.y2 = greyQueenEllipse.y2 + 100;
                    greyQueenEllipse.x2 = greyQueenEllipse.x2 - 100;
                    greyQueenBase.y1 = greyQueenBase.y1 + 100;
                    greyQueenBase.x1 = greyQueenBase.x1 - 100;
                    greyQueenBase.y2 = greyQueenBase.y2 + 100;
                    greyQueenBase.x2 = greyQueenBase.x2 - 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            if(greyPawnsBase[s].posY == greyQueenSquare.posY &&
                               greyPawnsBase[s].posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop1Square.posY == greyQueenSquare.posY &&
                               greyBishop1Square.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop2Square.posY == greyQueenSquare.posY &&
                               greyBishop2Square.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight1Rectangle1.posY == greyQueenSquare.posY &&
                               greyKnight1Rectangle1.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight2Rectangle1.posY == greyQueenSquare.posY &&
                               greyKnight2Rectangle1.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook1Rectangle1.posY == greyQueenSquare.posY &&
                               greyRook1Rectangle1.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook2Rectangle1.posY == greyQueenSquare.posY &&
                               greyRook2Rectangle1.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKingSquare.posY == greyQueenSquare.posY &&
                               greyKingSquare.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redPawnsBase[s].posY == greyQueenSquare.posY &&
                               redPawnsBase[s].posX == greyQueenSquare.posX) {
                                redPawnsBase[s].posX = -1000;
                                redPawnsBase[s].x1 = -1000;
                                redPawnsBase[s].x2 = -1000;
                                redPawnsEllipse[s].x1 = -1000;
                                redPawnsEllipse[s].x2 = -1000;
                            }
                            if(redKnight1Rectangle1.posY == greyQueenSquare.posY &&
                               redKnight1Rectangle1.posX == greyQueenSquare.posX) {
                                redKnight1Rectangle1.posX = -1000;
                                redKnight1Rectangle1.x1 = -1000;
                                redKnight1Rectangle1.x2 = -1000;
                                redKnight1Rectangle2.x1 = -1000;
                                redKnight1Rectangle2.x2 = -1000;
                                redKnight1Base.x1 = -1000;
                                redKnight1Base.x2 = -1000;
                                redKnight1Ellipse.x1 = -1000;
                                redKnight1Ellipse.x2 = -1000;
                            }
                            if(redKnight2Rectangle1.posY == greyQueenSquare.posY &&
                               redKnight2Rectangle1.posX == greyQueenSquare.posX) {
                                redKnight2Rectangle1.posX = -1000;
                                redKnight2Rectangle1.x1 = -1000;
                                redKnight2Rectangle1.x2 = -1000;
                                redKnight2Rectangle2.x1 = -1000;
                                redKnight2Rectangle2.x2 = -1000;
                                redKnight2Base.x1 = -1000;
                                redKnight2Base.x2 = -1000;
                                redKnight2Ellipse.x1 = -1000;
                                redKnight2Ellipse.x2 = -1000;
                            }
                            if(redBishop1Square.posY == greyQueenSquare.posY &&
                               redBishop1Square.posX == greyQueenSquare.posX) {
                                redBishop1Square.posX = -1000;
                                redBishop1Square.x1 = -1000;
                                redBishop1Square.x2 = -1000;
                                redBishop1Rectangle.x1 = -1000;
                                redBishop1Rectangle.x2 = -1000;
                                redBishop1Base.x1 = -1000;
                                redBishop1Base.x2 = -1000;
                                redBishop1Ellipse.x1 = -1000;
                                redBishop1Ellipse.x2 = -1000;
                            }
                            if(redBishop2Square.posY == greyQueenSquare.posY &&
                               redBishop2Square.posX == greyQueenSquare.posX) {
                                redBishop2Square.posX = -1000;
                                redBishop2Square.x1 = -1000;
                                redBishop2Square.x2 = -1000;
                                redBishop2Rectangle.x1 = -1000;
                                redBishop2Rectangle.x2 = -1000;
                                redBishop2Base.x1 = -1000;
                                redBishop2Base.x2 = -1000;
                                redBishop2Ellipse.x1 = -1000;
                                redBishop2Ellipse.x2 = -1000;
                            }
                            if(redRook1Rectangle1.posY == greyQueenSquare.posY &&
                               redRook1Rectangle1.posX == greyQueenSquare.posX) {
                                redRook1Rectangle1.posX = -1000;
                                redRook1Rectangle1.x1 = -1000;
                                redRook1Rectangle1.x2 = -1000;
                                redRook1Rectangle2.x1 = -1000;
                                redRook1Rectangle2.x2 = -1000;
                                redRook1Base.x1 = -1000;
                                redRook1Base.x2 = -1000;
                                redRook1Ellipse.x1 = -1000;
                                redRook1Ellipse.x2 = -1000;
                            }
                            if(redRook2Rectangle1.posY == greyQueenSquare.posY &&
                               redRook2Rectangle1.posX == greyQueenSquare.posX) {
                                redRook2Rectangle1.posX = -1000;
                                redRook2Rectangle1.x1 = -1000;
                                redRook2Rectangle1.x2 = -1000;
                                redRook2Rectangle2.x1 = -1000;
                                redRook2Rectangle2.x2 = -1000;
                                redRook2Base.x1 = -1000;
                                redRook2Base.x2 = -1000;
                                redRook2Ellipse.x1 = -1000;
                                redRook2Ellipse.x2 = -1000;
                            }
                            if(redQueenSquare.posY == greyQueenSquare.posY &&
                               redQueenSquare.posX == greyQueenSquare.posX) {
                                redQueenSquare.posX = -1000;
                                redQueenSquare.x1 = -1000;
                                redQueenSquare.x2 = -1000;
                                redQueenBase.x1 = -1000;
                                redQueenBase.x2 = -1000;
                                redQueenEllipse.x1 = -1000;
                                redQueenEllipse.x2 = -1000;
                                redQueenRectangle1.x1 = -1000;
                                redQueenRectangle1.x2 = -1000;
                                redQueenRectangle2.x1 = -1000;
                                redQueenRectangle2.x2 = -1000;
                                redQueenRectangle3.x1 = -1000;
                                redQueenRectangle3.x2 = -1000;
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == greyQueenSquare.posY + 100 &&
                           redPawnsBase[s].posX == greyQueenSquare.posX - 100) {
                            greyQueenSquare.failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == greyQueenSquare.posY + 100 &&
                           greyPawnsBase[s].posX == greyQueenSquare.posX - 100) {
                            greyQueenSquare.failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redQueenSquare.posY == greyQueenSquare.posY + 100 &&
                       redQueenSquare.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == greyQueenSquare.posY + 100 &&
                       redBishop1Square.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyQueenSquare.posY + 100 &&
                       redBishop2Square.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == greyQueenSquare.posY + 100 &&
                       redRook1Rectangle1.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == greyQueenSquare.posY + 100 &&
                       redRook2Rectangle1.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == greyQueenSquare.posY + 100 &&
                       redKnight1Rectangle1.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == greyQueenSquare.posY + 100 &&
                       redKnight2Rectangle1.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == greyQueenSquare.posY + 100 &&
                       redBishop1Square.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyQueenSquare.posY + 100 &&
                       redBishop2Square.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == greyQueenSquare.posY + 100 &&
                       greyRook1Rectangle1.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == greyQueenSquare.posY + 100 &&
                       greyRook2Rectangle1.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == greyQueenSquare.posY + 100 &&
                       greyKnight1Rectangle1.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == greyQueenSquare.posY + 100 &&
                       greyKnight2Rectangle1.posX == greyQueenSquare.posX - 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == greyQueenSquare.posY + 100 &&
                       greyBishop1Square.posX == greyQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == greyQueenSquare.posY + 100 &&
                       greyBishop2Square.posX == greyQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == greyQueenSquare.posY + 100 &&
                       greyQueenSquare.posX == greyQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        greyQueenSquare.posY = greyQueenSquare.posY + 100;
                        greyQueenSquare.y1 = greyQueenSquare.y1 + 100;
                        greyQueenSquare.y2 = greyQueenSquare.y2 + 100;
                        greyQueenRectangle1.y1 = greyQueenRectangle1.y1 + 100;
                        greyQueenRectangle1.y2 = greyQueenRectangle1.y2 + 100;
                        greyQueenRectangle2.y1 = greyQueenRectangle2.y1 + 100;
                        greyQueenRectangle2.y2 = greyQueenRectangle2.y2 + 100;
                        greyQueenRectangle3.y1 = greyQueenRectangle3.y1 + 100;
                        greyQueenRectangle3.y2 = greyQueenRectangle3.y2 + 100;
                        greyQueenEllipse.y1 = greyQueenEllipse.y1 + 100;
                        greyQueenEllipse.y2 = greyQueenEllipse.y2 + 100;
                        greyQueenBase.y1 = greyQueenBase.y1 + 100;
                        greyQueenBase.y2 = greyQueenBase.y2 + 100;
                        greyQueenSquare.posX = greyQueenSquare.posX - 100;
                        greyQueenSquare.x1 = greyQueenSquare.x1 - 100;
                        greyQueenSquare.x2 = greyQueenSquare.x2 - 100;
                        greyQueenRectangle1.x1 = greyQueenRectangle1.x1 - 100;
                        greyQueenRectangle1.x2 = greyQueenRectangle1.x2 - 100;
                        greyQueenRectangle2.x1 = greyQueenRectangle2.x1 - 100;
                        greyQueenRectangle2.x2 = greyQueenRectangle2.x2 - 100;
                        greyQueenRectangle3.x1 = greyQueenRectangle3.x1 - 100;
                        greyQueenRectangle3.x2 = greyQueenRectangle3.x2 - 100;
                        greyQueenEllipse.x1 = greyQueenEllipse.x1 - 100;
                        greyQueenEllipse.x2 = greyQueenEllipse.x2 - 100;
                        greyQueenBase.x1 = greyQueenBase.x1 - 100;
                        greyQueenBase.x2 = greyQueenBase.x2 - 100;
                    }

                    return flag;
                }
            }

            else {

                greyQueenSquare.failedpath = TRUE;
                return TRUE;
            }
        }
        if(ps1 > 0) {
            boolean f = FALSE;
            if(pos1 > 100 && ps1 > 100) {
                f = moveGreyQueenDiagonally(msg, j, i, pos1 - 100, ps1 - 100, pos2, ps2);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    greyQueenSquare.posY = greyQueenSquare.posY + 100;
                    greyQueenSquare.posX = greyQueenSquare.posX + 100;
                    greyQueenSquare.y1 = greyQueenSquare.y1 + 100;
                    greyQueenSquare.x1 = greyQueenSquare.x1 + 100;
                    greyQueenSquare.y2 = greyQueenSquare.y2 + 100;
                    greyQueenSquare.x2 = greyQueenSquare.x2 + 100;
                    greyQueenRectangle1.y1 = greyQueenRectangle1.y1 + 100;
                    greyQueenRectangle1.x1 = greyQueenRectangle1.x1 + 100;
                    greyQueenRectangle1.y2 = greyQueenRectangle1.y2 + 100;
                    greyQueenRectangle1.x2 = greyQueenRectangle1.x2 + 100;
                    greyQueenRectangle2.y1 = greyQueenRectangle2.y1 + 100;
                    greyQueenRectangle2.x1 = greyQueenRectangle2.x1 + 100;
                    greyQueenRectangle2.y2 = greyQueenRectangle2.y2 + 100;
                    greyQueenRectangle2.x2 = greyQueenRectangle2.x2 + 100;
                    greyQueenRectangle3.y1 = greyQueenRectangle3.y1 + 100;
                    greyQueenRectangle3.x1 = greyQueenRectangle3.x1 + 100;
                    greyQueenRectangle3.y2 = greyQueenRectangle3.y2 + 100;
                    greyQueenRectangle3.x2 = greyQueenRectangle3.x2 + 100;
                    greyQueenEllipse.y1 = greyQueenEllipse.y1 + 100;
                    greyQueenEllipse.x1 = greyQueenEllipse.x1 + 100;
                    greyQueenEllipse.y2 = greyQueenEllipse.y2 + 100;
                    greyQueenEllipse.x2 = greyQueenEllipse.x2 + 100;
                    greyQueenBase.y1 = greyQueenBase.y1 + 100;
                    greyQueenBase.x1 = greyQueenBase.x1 + 100;
                    greyQueenBase.y2 = greyQueenBase.y2 + 100;
                    greyQueenBase.x2 = greyQueenBase.x2 + 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            if(greyPawnsBase[s].posY == greyQueenSquare.posY &&
                               greyPawnsBase[s].posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop1Square.posY == greyQueenSquare.posY &&
                               greyBishop1Square.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop2Square.posY == greyQueenSquare.posY &&
                               greyBishop2Square.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight1Rectangle1.posY == greyQueenSquare.posY &&
                               greyKnight1Rectangle1.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight2Rectangle1.posY == greyQueenSquare.posY &&
                               greyKnight2Rectangle1.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook1Rectangle1.posY == greyQueenSquare.posY &&
                               greyRook1Rectangle1.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook2Rectangle1.posY == greyQueenSquare.posY &&
                               greyRook2Rectangle1.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKingSquare.posY == greyQueenSquare.posY &&
                               greyKingSquare.posX == greyQueenSquare.posX) {
                                greyQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redPawnsBase[s].posY == greyQueenSquare.posY &&
                               redPawnsBase[s].posX == greyQueenSquare.posX) {
                                redPawnsBase[s].posX = -1000;
                                redPawnsBase[s].x1 = -1000;
                                redPawnsBase[s].x2 = -1000;
                                redPawnsEllipse[s].x1 = -1000;
                                redPawnsEllipse[s].x2 = -1000;
                            }
                            if(redKnight1Rectangle1.posY == greyQueenSquare.posY &&
                               redKnight1Rectangle1.posX == greyQueenSquare.posX) {
                                redKnight1Rectangle1.posX = -1000;
                                redKnight1Rectangle1.x1 = -1000;
                                redKnight1Rectangle1.x2 = -1000;
                                redKnight1Rectangle2.x1 = -1000;
                                redKnight1Rectangle2.x2 = -1000;
                                redKnight1Base.x1 = -1000;
                                redKnight1Base.x2 = -1000;
                                redKnight1Ellipse.x1 = -1000;
                                redKnight1Ellipse.x2 = -1000;
                            }
                            if(redKnight2Rectangle1.posY == greyQueenSquare.posY &&
                               redKnight2Rectangle1.posX == greyQueenSquare.posX) {
                                redKnight2Rectangle1.posX = -1000;
                                redKnight2Rectangle1.x1 = -1000;
                                redKnight2Rectangle1.x2 = -1000;
                                redKnight2Rectangle2.x1 = -1000;
                                redKnight2Rectangle2.x2 = -1000;
                                redKnight2Base.x1 = -1000;
                                redKnight2Base.x2 = -1000;
                                redKnight2Ellipse.x1 = -1000;
                                redKnight2Ellipse.x2 = -1000;
                            }
                            if(redBishop1Square.posY == greyQueenSquare.posY &&
                               redBishop1Square.posX == greyQueenSquare.posX) {
                                redBishop1Square.posX = -1000;
                                redBishop1Square.x1 = -1000;
                                redBishop1Square.x2 = -1000;
                                redBishop1Rectangle.x1 = -1000;
                                redBishop1Rectangle.x2 = -1000;
                                redBishop1Base.x1 = -1000;
                                redBishop1Base.x2 = -1000;
                                redBishop1Ellipse.x1 = -1000;
                                redBishop1Ellipse.x2 = -1000;
                            }
                            if(redBishop2Square.posY == greyQueenSquare.posY &&
                               redBishop2Square.posX == greyQueenSquare.posX) {
                                redBishop2Square.posX = -1000;
                                redBishop2Square.x1 = -1000;
                                redBishop2Square.x2 = -1000;
                                redBishop2Rectangle.x1 = -1000;
                                redBishop2Rectangle.x2 = -1000;
                                redBishop2Base.x1 = -1000;
                                redBishop2Base.x2 = -1000;
                                redBishop2Ellipse.x1 = -1000;
                                redBishop2Ellipse.x2 = -1000;
                            }
                            if(redRook1Rectangle1.posY == greyQueenSquare.posY &&
                               redRook1Rectangle1.posX == greyQueenSquare.posX) {
                                redRook1Rectangle1.posX = -1000;
                                redRook1Rectangle1.x1 = -1000;
                                redRook1Rectangle1.x2 = -1000;
                                redRook1Rectangle2.x1 = -1000;
                                redRook1Rectangle2.x2 = -1000;
                                redRook1Base.x1 = -1000;
                                redRook1Base.x2 = -1000;
                                redRook1Ellipse.x1 = -1000;
                                redRook1Ellipse.x2 = -1000;
                            }
                            if(redRook2Rectangle1.posY == greyQueenSquare.posY &&
                               redRook2Rectangle1.posX == greyQueenSquare.posX) {
                                redRook2Rectangle1.posX = -1000;
                                redRook2Rectangle1.x1 = -1000;
                                redRook2Rectangle1.x2 = -1000;
                                redRook2Rectangle2.x1 = -1000;
                                redRook2Rectangle2.x2 = -1000;
                                redRook2Base.x1 = -1000;
                                redRook2Base.x2 = -1000;
                                redRook2Ellipse.x1 = -1000;
                                redRook2Ellipse.x2 = -1000;
                            }
                            if(redQueenSquare.posY == greyQueenSquare.posY &&
                               redQueenSquare.posX == greyQueenSquare.posX) {
                                redQueenSquare.posX = -1000;
                                redQueenSquare.x1 = -1000;
                                redQueenSquare.x2 = -1000;
                                redQueenBase.x1 = -1000;
                                redQueenBase.x2 = -1000;
                                redQueenEllipse.x1 = -1000;
                                redQueenEllipse.x2 = -1000;
                                redQueenRectangle1.x1 = -1000;
                                redQueenRectangle1.x2 = -1000;
                                redQueenRectangle2.x1 = -1000;
                                redQueenRectangle2.x2 = -1000;
                                redQueenRectangle3.x1 = -1000;
                                redQueenRectangle3.x2 = -1000;
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == greyQueenSquare.posY + 100 &&
                           redPawnsBase[s].posX == greyQueenSquare.posX + 100) {
                            greyQueenSquare.failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == greyQueenSquare.posY + 100 &&
                           greyPawnsBase[s].posX == greyQueenSquare.posX + 100) {
                            greyQueenSquare.failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redQueenSquare.posY == greyQueenSquare.posY + 100 &&
                       redQueenSquare.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == greyQueenSquare.posY + 100 &&
                       redBishop1Square.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyQueenSquare.posY + 100 &&
                       redBishop2Square.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == greyQueenSquare.posY + 100 &&
                       redRook1Rectangle1.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == greyQueenSquare.posY + 100 &&
                       redRook2Rectangle1.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == greyQueenSquare.posY + 100 &&
                       redKnight1Rectangle1.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == greyQueenSquare.posY + 100 &&
                       redKnight2Rectangle1.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == greyQueenSquare.posY + 100 &&
                       redBishop1Square.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyQueenSquare.posY + 100 &&
                       redBishop2Square.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == greyQueenSquare.posY + 100 &&
                       greyRook1Rectangle1.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == greyQueenSquare.posY + 100 &&
                       greyRook2Rectangle1.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == greyQueenSquare.posY + 100 &&
                       greyKnight1Rectangle1.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == greyQueenSquare.posY + 100 &&
                       greyKnight2Rectangle1.posX == greyQueenSquare.posX + 100) {
                        greyQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == greyQueenSquare.posY + 100 &&
                       greyBishop1Square.posX == greyQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == greyQueenSquare.posY + 100 &&
                       greyBishop2Square.posX == greyQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == greyQueenSquare.posY + 100 &&
                       greyQueenSquare.posX == greyQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        greyQueenSquare.posY = greyQueenSquare.posY + 100;
                        greyQueenSquare.y1 = greyQueenSquare.y1 + 100;
                        greyQueenSquare.y2 = greyQueenSquare.y2 + 100;
                        greyQueenRectangle1.y1 = greyQueenRectangle1.y1 + 100;
                        greyQueenRectangle1.y2 = greyQueenRectangle1.y2 + 100;
                        greyQueenRectangle2.y1 = greyQueenRectangle2.y1 + 100;
                        greyQueenRectangle2.y2 = greyQueenRectangle2.y2 + 100;
                        greyQueenRectangle3.y1 = greyQueenRectangle3.y1 + 100;
                        greyQueenRectangle3.y2 = greyQueenRectangle3.y2 + 100;
                        greyQueenEllipse.y1 = greyQueenEllipse.y1 + 100;
                        greyQueenEllipse.y2 = greyQueenEllipse.y2 + 100;
                        greyQueenBase.y1 = greyQueenBase.y1 + 100;
                        greyQueenBase.y2 = greyQueenBase.y2 + 100;
                        greyQueenSquare.posX = greyQueenSquare.posX + 100;
                        greyQueenSquare.x1 = greyQueenSquare.x1 + 100;
                        greyQueenSquare.x2 = greyQueenSquare.x2 + 100;
                        greyQueenRectangle1.x1 = greyQueenRectangle1.x1 + 100;
                        greyQueenRectangle1.x2 = greyQueenRectangle1.x2 + 100;
                        greyQueenRectangle2.x1 = greyQueenRectangle2.x1 + 100;
                        greyQueenRectangle2.x2 = greyQueenRectangle2.x2 + 100;
                        greyQueenRectangle3.x1 = greyQueenRectangle3.x1 + 100;
                        greyQueenRectangle3.x2 = greyQueenRectangle3.x2 + 100;
                        greyQueenEllipse.x1 = greyQueenEllipse.x1 + 100;
                        greyQueenEllipse.x2 = greyQueenEllipse.x2 + 100;
                        greyQueenBase.x1 = greyQueenBase.x1 + 100;
                        greyQueenBase.x2 = greyQueenBase.x2 + 100;
                    }

                    return flag;
                }
            }

            else {

                greyQueenSquare.failedpath = TRUE;
                return TRUE;
            }
        }
    }
}

boolean moveRedQueenDiagonally(UINT msg, int j, int i, int pos1, int ps1, int pos2, int ps2) {

    if(greyKnight1Rectangle1.posX == redQueenSquare.posX &&
       greyKnight1Rectangle1.posY == redQueenSquare.posY) {
        redQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(greyKnight2Rectangle1.posX == redQueenSquare.posX &&
       greyKnight2Rectangle1.posY == redQueenSquare.posY) {
        redQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(greyBishop1Square.posX == redQueenSquare.posX &&
       greyBishop1Square.posY == redQueenSquare.posY) {
        redQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(greyBishop2Square.posX == redQueenSquare.posX &&
       greyBishop2Square.posY == redQueenSquare.posY) {
        redQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(greyRook1Rectangle1.posX == redQueenSquare.posX &&
       greyRook1Rectangle1.posY == redQueenSquare.posY) {
        redQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(greyRook2Rectangle1.posX == redQueenSquare.posX &&
       greyRook2Rectangle1.posY == redQueenSquare.posY) {
        redQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    if(greyQueenSquare.posX == redQueenSquare.posX &&
       greyQueenSquare.posY == redQueenSquare.posY) {
        redQueenSquare.failedpath = TRUE;
        return TRUE;
    }
    for(int g=0; g<8; g++) {
        if(greyPawnsBase[g].posX == redQueenSquare.posX &&
           greyPawnsBase[g].posY == redQueenSquare.posY) {
            redQueenSquare.failedpath = TRUE;
            return TRUE;
        }
    }
    boolean fail = FALSE;
    if(pos1 == ps1) {
        fail = FALSE;
    } else if(pos1 == -ps1) {
        fail = FALSE;
    } else {
        fail = TRUE;
        redQueenSquare.failedpath = fail;
    }
    if(pos1 < 0) {
        if(ps1 < 0) {
            boolean f = FALSE;
            if(pos1 < -100 && ps1 < -100) {
                f = moveRedQueenDiagonally(msg, j, i, pos1 + 100, ps1 + 100, pos2, ps2);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    redQueenSquare.posY = redQueenSquare.posY - 100;
                    redQueenSquare.posX = redQueenSquare.posX - 100;
                    redQueenSquare.y1 = redQueenSquare.y1 - 100;
                    redQueenSquare.x1 = redQueenSquare.x1 - 100;
                    redQueenSquare.y2 = redQueenSquare.y2 - 100;
                    redQueenSquare.x2 = redQueenSquare.x2 - 100;
                    redQueenRectangle1.y1 = redQueenRectangle1.y1 - 100;
                    redQueenRectangle1.x1 = redQueenRectangle1.x1 - 100;
                    redQueenRectangle1.y2 = redQueenRectangle1.y2 - 100;
                    redQueenRectangle1.x2 = redQueenRectangle1.x2 - 100;
                    redQueenRectangle2.y1 = redQueenRectangle2.y1 - 100;
                    redQueenRectangle2.x1 = redQueenRectangle2.x1 - 100;
                    redQueenRectangle2.y2 = redQueenRectangle2.y2 - 100;
                    redQueenRectangle2.x2 = redQueenRectangle2.x2 - 100;
                    redQueenRectangle3.y1 = redQueenRectangle3.y1 - 100;
                    redQueenRectangle3.x1 = redQueenRectangle3.x1 - 100;
                    redQueenRectangle3.y2 = redQueenRectangle3.y2 - 100;
                    redQueenRectangle3.x2 = redQueenRectangle3.x2 - 100;
                    redQueenEllipse.y1 = redQueenEllipse.y1 - 100;
                    redQueenEllipse.x1 = redQueenEllipse.x1 - 100;
                    redQueenEllipse.y2 = redQueenEllipse.y2 - 100;
                    redQueenEllipse.x2 = redQueenEllipse.x2 - 100;
                    redQueenBase.y1 = redQueenBase.y1 - 100;
                    redQueenBase.x1 = redQueenBase.x1 - 100;
                    redQueenBase.y2 = redQueenBase.y2 - 100;
                    redQueenBase.x2 = redQueenBase.x2 - 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            if(redPawnsBase[s].posY == redQueenSquare.posY &&
                               redPawnsBase[s].posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redBishop1Square.posY == redQueenSquare.posY &&
                               redBishop1Square.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redBishop2Square.posY == redQueenSquare.posY &&
                               redBishop2Square.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight1Rectangle1.posY == redQueenSquare.posY &&
                               redKnight1Rectangle1.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight2Rectangle1.posY == redQueenSquare.posY &&
                               redKnight2Rectangle1.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook1Rectangle1.posY == redQueenSquare.posY &&
                               redRook1Rectangle1.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook2Rectangle1.posY == redQueenSquare.posY &&
                               redRook2Rectangle1.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKingSquare.posY == redQueenSquare.posY &&
                               redKingSquare.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyPawnsBase[s].posY == redQueenSquare.posY &&
                               greyPawnsBase[s].posX == redQueenSquare.posX) {
                                greyPawnsBase[s].posX = -1000;
                                greyPawnsBase[s].x1 = -1000;
                                greyPawnsBase[s].x2 = -1000;
                                greyPawnsEllipse[s].x1 = -1000;
                                greyPawnsEllipse[s].x2 = -1000;
                            }
                            if(greyKnight1Rectangle1.posY == redQueenSquare.posY &&
                               greyKnight1Rectangle1.posX == redQueenSquare.posX) {
                                greyKnight1Rectangle1.posX = -1000;
                                greyKnight1Rectangle1.x1 = -1000;
                                greyKnight1Rectangle1.x2 = -1000;
                                greyKnight1Rectangle2.x1 = -1000;
                                greyKnight1Rectangle2.x2 = -1000;
                                greyKnight1Base.x1 = -1000;
                                greyKnight1Base.x2 = -1000;
                                greyKnight1Ellipse.x1 = -1000;
                                greyKnight1Ellipse.x2 = -1000;
                            }
                            if(greyKnight2Rectangle1.posY == redQueenSquare.posY &&
                               greyKnight2Rectangle1.posX == redQueenSquare.posX) {
                                greyKnight2Rectangle1.posX = -1000;
                                greyKnight2Rectangle1.x1 = -1000;
                                greyKnight2Rectangle1.x2 = -1000;
                                greyKnight2Rectangle2.x1 = -1000;
                                greyKnight2Rectangle2.x2 = -1000;
                                greyKnight2Base.x1 = -1000;
                                greyKnight2Base.x2 = -1000;
                                greyKnight2Ellipse.x1 = -1000;
                                greyKnight2Ellipse.x2 = -1000;
                            }
                            if(greyBishop1Square.posY == redQueenSquare.posY &&
                               greyBishop1Square.posX == redQueenSquare.posX) {
                                greyBishop1Square.posX = -1000;
                                greyBishop1Square.x1 = -1000;
                                greyBishop1Square.x2 = -1000;
                                greyBishop1Rectangle.x1 = -1000;
                                greyBishop1Rectangle.x2 = -1000;
                                greyBishop1Base.x1 = -1000;
                                greyBishop1Base.x2 = -1000;
                                greyBishop1Ellipse.x1 = -1000;
                                greyBishop1Ellipse.x2 = -1000;
                            }
                            if(greyBishop2Square.posY == redQueenSquare.posY &&
                               greyBishop2Square.posX == redQueenSquare.posX) {
                                greyBishop2Square.posX = -1000;
                                greyBishop2Square.x1 = -1000;
                                greyBishop2Square.x2 = -1000;
                                greyBishop2Rectangle.x1 = -1000;
                                greyBishop2Rectangle.x2 = -1000;
                                greyBishop2Base.x1 = -1000;
                                greyBishop2Base.x2 = -1000;
                                greyBishop2Ellipse.x1 = -1000;
                                greyBishop2Ellipse.x2 = -1000;
                            }
                            if(greyRook1Rectangle1.posY == redQueenSquare.posY &&
                               greyRook1Rectangle1.posX == redQueenSquare.posX) {
                                greyRook1Rectangle1.posX = -1000;
                                greyRook1Rectangle1.x1 = -1000;
                                greyRook1Rectangle1.x2 = -1000;
                                greyRook1Rectangle2.x1 = -1000;
                                greyRook1Rectangle2.x2 = -1000;
                                greyRook1Base.x1 = -1000;
                                greyRook1Base.x2 = -1000;
                                greyRook1Ellipse.x1 = -1000;
                                greyRook1Ellipse.x2 = -1000;
                            }
                            if(greyRook2Rectangle1.posY == redQueenSquare.posY &&
                               greyRook2Rectangle1.posX == redQueenSquare.posX) {
                                greyRook2Rectangle1.posX = -1000;
                                greyRook2Rectangle1.x1 = -1000;
                                greyRook2Rectangle1.x2 = -1000;
                                greyRook2Rectangle2.x1 = -1000;
                                greyRook2Rectangle2.x2 = -1000;
                                greyRook2Base.x1 = -1000;
                                greyRook2Base.x2 = -1000;
                                greyRook2Ellipse.x1 = -1000;
                                greyRook2Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyBishop1Square.posY == redQueenSquare.posY &&
                               greyBishop1Square.posX == redQueenSquare.posX) {
                                greyBishop1Square.posX = -1000;
                                greyBishop1Square.x1 = -1000;
                                greyBishop1Square.x2 = -1000;
                                greyBishop1Rectangle.x1 = -1000;
                                greyBishop1Rectangle.x2 = -1000;
                                greyBishop1Base.x1 = -1000;
                                greyBishop1Base.x2 = -1000;
                                greyBishop1Ellipse.x1 = -1000;
                                greyBishop1Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyBishop2Square.posY == redQueenSquare.posY &&
                               greyBishop2Square.posX == redQueenSquare.posX) {
                                greyBishop2Square.posX = -1000;
                                greyBishop2Square.x1 = -1000;
                                greyBishop2Square.x2 = -1000;
                                greyBishop2Rectangle.x1 = -1000;
                                greyBishop2Rectangle.x2 = -1000;
                                greyBishop2Base.x1 = -1000;
                                greyBishop2Base.x2 = -1000;
                                greyBishop2Ellipse.x1 = -1000;
                                greyBishop2Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyKnight1Rectangle1.posY == redQueenSquare.posY &&
                               greyKnight1Rectangle1.posX == redQueenSquare.posX) {
                                greyKnight1Rectangle1.posX = -1000;
                                greyKnight1Rectangle1.x1 = -1000;
                                greyKnight1Rectangle1.x2 = -1000;
                                greyKnight1Rectangle2.x1 = -1000;
                                greyKnight1Rectangle2.x2 = -1000;
                                greyKnight1Base.x1 = -1000;
                                greyKnight1Base.x2 = -1000;
                                greyKnight1Ellipse.x1 = -1000;
                                greyKnight1Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyKnight2Rectangle1.posY == redQueenSquare.posY &&
                               greyKnight2Rectangle1.posX == redQueenSquare.posX) {
                                greyKnight2Rectangle1.posX = -1000;
                                greyKnight2Rectangle1.x1 = -1000;
                                greyKnight2Rectangle1.x2 = -1000;
                                greyKnight2Rectangle2.x1 = -1000;
                                greyKnight2Rectangle2.x2 = -1000;
                                greyKnight2Base.x1 = -1000;
                                greyKnight2Base.x2 = -1000;
                                greyKnight2Ellipse.x1 = -1000;
                                greyKnight2Ellipse.x2 = -1000;
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redQueenSquare.posY - 100 &&
                           redPawnsBase[s].posX == redQueenSquare.posX - 100) {
                            redQueenSquare.failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == redQueenSquare.posY - 100 &&
                           greyPawnsBase[s].posX == redQueenSquare.posX - 100) {
                            redQueenSquare.failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redBishop1Square.posY == redQueenSquare.posY - 100 &&
                       redBishop1Square.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == redQueenSquare.posY - 100 &&
                       redBishop2Square.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == redQueenSquare.posY - 100 &&
                       redRook1Rectangle1.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == redQueenSquare.posY - 100 &&
                       redRook2Rectangle1.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == redQueenSquare.posY - 100 &&
                       redKnight1Rectangle1.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == redQueenSquare.posY - 100 &&
                       redKnight2Rectangle1.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == redQueenSquare.posY - 100 &&
                       redBishop1Square.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == redQueenSquare.posY - 100 &&
                       redBishop2Square.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == redQueenSquare.posY - 100 &&
                       greyRook1Rectangle1.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == redQueenSquare.posY - 100 &&
                       greyRook2Rectangle1.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == redQueenSquare.posY - 100 &&
                       greyKnight1Rectangle1.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == redQueenSquare.posY - 100 &&
                       greyKnight2Rectangle1.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(redBishop1Square.posY == redQueenSquare.posY - 100 &&
                       redBishop1Square.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == redQueenSquare.posY - 100 &&
                       redBishop2Square.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == redQueenSquare.posY - 100 &&
                       redRook1Rectangle1.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == redQueenSquare.posY - 100 &&
                       redRook2Rectangle1.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == redQueenSquare.posY - 100 &&
                       redKnight1Rectangle1.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == redQueenSquare.posY - 100 &&
                       redKnight2Rectangle1.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == redQueenSquare.posY - 100 &&
                       redBishop1Square.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == redQueenSquare.posY - 100 &&
                       redBishop2Square.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == redQueenSquare.posY - 100 &&
                       greyRook1Rectangle1.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == redQueenSquare.posY - 100 &&
                       greyRook2Rectangle1.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == redQueenSquare.posY - 100 &&
                       greyKnight1Rectangle1.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == redQueenSquare.posY - 100 &&
                       greyKnight2Rectangle1.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == redQueenSquare.posY + 100 &&
                       greyBishop1Square.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == redQueenSquare.posY + 100 &&
                       greyBishop2Square.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == redQueenSquare.posY + 100 &&
                       greyQueenSquare.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        redQueenSquare.posY = redQueenSquare.posY - 100;
                        redQueenSquare.y1 = redQueenSquare.y1 - 100;
                        redQueenSquare.y2 = redQueenSquare.y2 - 100;
                        redQueenRectangle1.y1 = redQueenRectangle1.y1 - 100;
                        redQueenRectangle1.y2 = redQueenRectangle1.y2 - 100;
                        redQueenRectangle2.y1 = redQueenRectangle2.y1 - 100;
                        redQueenRectangle2.y2 = redQueenRectangle2.y2 - 100;
                        redQueenRectangle3.y1 = redQueenRectangle3.y1 - 100;
                        redQueenRectangle3.y2 = redQueenRectangle3.y2 - 100;
                        redQueenEllipse.y1 = redQueenEllipse.y1 - 100;
                        redQueenEllipse.y2 = redQueenEllipse.y2 - 100;
                        redQueenBase.y1 = redQueenBase.y1 - 100;
                        redQueenBase.y2 = redQueenBase.y2 - 100;
                        redQueenSquare.posX = redQueenSquare.posX - 100;
                        redQueenSquare.x1 = redQueenSquare.x1 - 100;
                        redQueenSquare.x2 = redQueenSquare.x2 - 100;
                        redQueenRectangle1.x1 = redQueenRectangle1.x1 - 100;
                        redQueenRectangle1.x2 = redQueenRectangle1.x2 - 100;
                        redQueenRectangle2.x1 = redQueenRectangle2.x1 - 100;
                        redQueenRectangle2.x2 = redQueenRectangle2.x2 - 100;
                        redQueenRectangle3.x1 = redQueenRectangle3.x1 - 100;
                        redQueenRectangle3.x2 = redQueenRectangle3.x2 - 100;
                        redQueenEllipse.x1 = redQueenEllipse.x1 - 100;
                        redQueenEllipse.x2 = redQueenEllipse.x2 - 100;
                        redQueenBase.x1 = redQueenBase.x1 - 100;
                        redQueenBase.x2 = redQueenBase.x2 - 100;
                    }

                    return flag;
                }
            }

            else {

                redQueenSquare.failedpath = TRUE;
                return TRUE;
            }
        }
        if(ps1 > 0) {
            boolean f = FALSE;
            if(pos1 < -100 && ps1 > 100) {
                f = moveRedQueenDiagonally(msg, j, i, pos1 + 100, ps1 - 100, pos2, ps2);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    redQueenSquare.posY = redQueenSquare.posY - 100;
                    redQueenSquare.posX = redQueenSquare.posX + 100;
                    redQueenSquare.y1 = redQueenSquare.y1 - 100;
                    redQueenSquare.x1 = redQueenSquare.x1 + 100;
                    redQueenSquare.y2 = redQueenSquare.y2 - 100;
                    redQueenSquare.x2 = redQueenSquare.x2 + 100;
                    redQueenRectangle1.y1 = redQueenRectangle1.y1 - 100;
                    redQueenRectangle1.x1 = redQueenRectangle1.x1 + 100;
                    redQueenRectangle1.y2 = redQueenRectangle1.y2 - 100;
                    redQueenRectangle1.x2 = redQueenRectangle1.x2 + 100;
                    redQueenRectangle2.y1 = redQueenRectangle2.y1 - 100;
                    redQueenRectangle2.x1 = redQueenRectangle2.x1 + 100;
                    redQueenRectangle2.y2 = redQueenRectangle2.y2 - 100;
                    redQueenRectangle2.x2 = redQueenRectangle2.x2 + 100;
                    redQueenRectangle3.y1 = redQueenRectangle3.y1 - 100;
                    redQueenRectangle3.x1 = redQueenRectangle3.x1 + 100;
                    redQueenRectangle3.y2 = redQueenRectangle3.y2 - 100;
                    redQueenRectangle3.x2 = redQueenRectangle3.x2 + 100;
                    redQueenEllipse.y1 = redQueenEllipse.y1 - 100;
                    redQueenEllipse.x1 = redQueenEllipse.x1 + 100;
                    redQueenEllipse.y2 = redQueenEllipse.y2 - 100;
                    redQueenEllipse.x2 = redQueenEllipse.x2 + 100;
                    redQueenBase.y1 = redQueenBase.y1 - 100;
                    redQueenBase.x1 = redQueenBase.x1 + 100;
                    redQueenBase.y2 = redQueenBase.y2 - 100;
                    redQueenBase.x2 = redQueenBase.x2 + 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            if(redPawnsBase[s].posY == redQueenSquare.posY &&
                               redPawnsBase[s].posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redBishop1Square.posY == redQueenSquare.posY &&
                               redBishop1Square.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redBishop2Square.posY == redQueenSquare.posY &&
                               redBishop2Square.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight1Rectangle1.posY == redQueenSquare.posY &&
                               redKnight1Rectangle1.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight2Rectangle1.posY == redQueenSquare.posY &&
                               redKnight2Rectangle1.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook1Rectangle1.posY == redQueenSquare.posY &&
                               redRook1Rectangle1.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook2Rectangle1.posY == redQueenSquare.posY &&
                               redRook2Rectangle1.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKingSquare.posY == redQueenSquare.posY &&
                               redKingSquare.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyPawnsBase[s].posY == redQueenSquare.posY &&
                               greyPawnsBase[s].posX == redQueenSquare.posX) {
                                greyPawnsBase[s].posX = -1000;
                                greyPawnsBase[s].x1 = -1000;
                                greyPawnsBase[s].x2 = -1000;
                                greyPawnsEllipse[s].x1 = -1000;
                                greyPawnsEllipse[s].x2 = -1000;
                            }
                            if(greyKnight1Rectangle1.posY == redQueenSquare.posY &&
                               greyKnight1Rectangle1.posX == redQueenSquare.posX) {
                                greyKnight1Rectangle1.posX = -1000;
                                greyKnight1Rectangle1.x1 = -1000;
                                greyKnight1Rectangle1.x2 = -1000;
                                greyKnight1Rectangle2.x1 = -1000;
                                greyKnight1Rectangle2.x2 = -1000;
                                greyKnight1Base.x1 = -1000;
                                greyKnight1Base.x2 = -1000;
                                greyKnight1Ellipse.x1 = -1000;
                                greyKnight1Ellipse.x2 = -1000;
                            }
                            if(greyKnight2Rectangle1.posY == redQueenSquare.posY &&
                               greyKnight2Rectangle1.posX == redQueenSquare.posX) {
                                greyKnight2Rectangle1.posX = -1000;
                                greyKnight2Rectangle1.x1 = -1000;
                                greyKnight2Rectangle1.x2 = -1000;
                                greyKnight2Rectangle2.x1 = -1000;
                                greyKnight2Rectangle2.x2 = -1000;
                                greyKnight2Base.x1 = -1000;
                                greyKnight2Base.x2 = -1000;
                                greyKnight2Ellipse.x1 = -1000;
                                greyKnight2Ellipse.x2 = -1000;
                            }
                            if(greyBishop1Square.posY == redQueenSquare.posY &&
                               greyBishop1Square.posX == redQueenSquare.posX) {
                                greyBishop1Square.posX = -1000;
                                greyBishop1Square.x1 = -1000;
                                greyBishop1Square.x2 = -1000;
                                greyBishop1Rectangle.x1 = -1000;
                                greyBishop1Rectangle.x2 = -1000;
                                greyBishop1Base.x1 = -1000;
                                greyBishop1Base.x2 = -1000;
                                greyBishop1Ellipse.x1 = -1000;
                                greyBishop1Ellipse.x2 = -1000;
                            }
                            if(greyBishop2Square.posY == redQueenSquare.posY &&
                               greyBishop2Square.posX == redQueenSquare.posX) {
                                greyBishop2Square.posX = -1000;
                                greyBishop2Square.x1 = -1000;
                                greyBishop2Square.x2 = -1000;
                                greyBishop2Rectangle.x1 = -1000;
                                greyBishop2Rectangle.x2 = -1000;
                                greyBishop2Base.x1 = -1000;
                                greyBishop2Base.x2 = -1000;
                                greyBishop2Ellipse.x1 = -1000;
                                greyBishop2Ellipse.x2 = -1000;
                            }
                            if(greyRook1Rectangle1.posY == redQueenSquare.posY &&
                               greyRook1Rectangle1.posX == redQueenSquare.posX) {
                                greyRook1Rectangle1.posX = -1000;
                                greyRook1Rectangle1.x1 = -1000;
                                greyRook1Rectangle1.x2 = -1000;
                                greyRook1Rectangle2.x1 = -1000;
                                greyRook1Rectangle2.x2 = -1000;
                                greyRook1Base.x1 = -1000;
                                greyRook1Base.x2 = -1000;
                                greyRook1Ellipse.x1 = -1000;
                                greyRook1Ellipse.x2 = -1000;
                            }
                            if(greyRook2Rectangle1.posY == redQueenSquare.posY &&
                               greyRook2Rectangle1.posX == redQueenSquare.posX) {
                                greyRook2Rectangle1.posX = -1000;
                                greyRook2Rectangle1.x1 = -1000;
                                greyRook2Rectangle1.x2 = -1000;
                                greyRook2Rectangle2.x1 = -1000;
                                greyRook2Rectangle2.x2 = -1000;
                                greyRook2Base.x1 = -1000;
                                greyRook2Base.x2 = -1000;
                                greyRook2Ellipse.x1 = -1000;
                                greyRook2Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyBishop1Square.posY == redQueenSquare.posY &&
                               greyBishop1Square.posX == redQueenSquare.posX) {
                                greyBishop1Square.posX = -1000;
                                greyBishop1Square.x1 = -1000;
                                greyBishop1Square.x2 = -1000;
                                greyBishop1Rectangle.x1 = -1000;
                                greyBishop1Rectangle.x2 = -1000;
                                greyBishop1Base.x1 = -1000;
                                greyBishop1Base.x2 = -1000;
                                greyBishop1Ellipse.x1 = -1000;
                                greyBishop1Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyBishop2Square.posY == redQueenSquare.posY &&
                               greyBishop2Square.posX == redQueenSquare.posX) {
                                greyBishop2Square.posX = -1000;
                                greyBishop2Square.x1 = -1000;
                                greyBishop2Square.x2 = -1000;
                                greyBishop2Rectangle.x1 = -1000;
                                greyBishop2Rectangle.x2 = -1000;
                                greyBishop2Base.x1 = -1000;
                                greyBishop2Base.x2 = -1000;
                                greyBishop2Ellipse.x1 = -1000;
                                greyBishop2Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyKnight1Rectangle1.posY == redQueenSquare.posY &&
                               greyKnight1Rectangle1.posX == redQueenSquare.posX) {
                                greyKnight1Rectangle1.posX = -1000;
                                greyKnight1Rectangle1.x1 = -1000;
                                greyKnight1Rectangle1.x2 = -1000;
                                greyKnight1Rectangle2.x1 = -1000;
                                greyKnight1Rectangle2.x2 = -1000;
                                greyKnight1Base.x1 = -1000;
                                greyKnight1Base.x2 = -1000;
                                greyKnight1Ellipse.x1 = -1000;
                                greyKnight1Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyKnight2Rectangle1.posY == redQueenSquare.posY &&
                               greyKnight2Rectangle1.posX == redQueenSquare.posX) {
                                greyKnight2Rectangle1.posX = -1000;
                                greyKnight2Rectangle1.x1 = -1000;
                                greyKnight2Rectangle1.x2 = -1000;
                                greyKnight2Rectangle2.x1 = -1000;
                                greyKnight2Rectangle2.x2 = -1000;
                                greyKnight2Base.x1 = -1000;
                                greyKnight2Base.x2 = -1000;
                                greyKnight2Ellipse.x1 = -1000;
                                greyKnight2Ellipse.x2 = -1000;
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redQueenSquare.posY - 100 &&
                           redPawnsBase[s].posX == redQueenSquare.posX + 100) {
                            redQueenSquare.failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == redQueenSquare.posY - 100 &&
                           greyPawnsBase[s].posX == redQueenSquare.posX + 100) {
                            redQueenSquare.failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redBishop1Square.posY == redQueenSquare.posY - 100 &&
                       redBishop1Square.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == redQueenSquare.posY - 100 &&
                       redBishop2Square.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == redQueenSquare.posY - 100 &&
                       redRook1Rectangle1.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == redQueenSquare.posY - 100 &&
                       redRook2Rectangle1.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == redQueenSquare.posY - 100 &&
                       redKnight1Rectangle1.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == redQueenSquare.posY - 100 &&
                       redKnight2Rectangle1.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == redQueenSquare.posY - 100 &&
                       redBishop1Square.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == redQueenSquare.posY - 100 &&
                       redBishop2Square.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == redQueenSquare.posY - 100 &&
                       greyRook1Rectangle1.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == redQueenSquare.posY - 100 &&
                       greyRook2Rectangle1.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == redQueenSquare.posY - 100 &&
                       greyKnight1Rectangle1.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == redQueenSquare.posY - 100 &&
                       greyKnight2Rectangle1.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == redQueenSquare.posY + 100 &&
                       greyBishop1Square.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == redQueenSquare.posY + 100 &&
                       greyBishop2Square.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == redQueenSquare.posY + 100 &&
                       greyQueenSquare.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        redQueenSquare.posY = redQueenSquare.posY - 100;
                        redQueenSquare.y1 = redQueenSquare.y1 - 100;
                        redQueenSquare.y2 = redQueenSquare.y2 - 100;
                        redQueenRectangle1.y1 = redQueenRectangle1.y1 - 100;
                        redQueenRectangle1.y2 = redQueenRectangle1.y2 - 100;
                        redQueenRectangle2.y1 = redQueenRectangle2.y1 - 100;
                        redQueenRectangle2.y2 = redQueenRectangle2.y2 - 100;
                        redQueenRectangle3.y1 = redQueenRectangle3.y1 - 100;
                        redQueenRectangle3.y2 = redQueenRectangle3.y2 - 100;
                        redQueenEllipse.y1 = redQueenEllipse.y1 - 100;
                        redQueenEllipse.y2 = redQueenEllipse.y2 - 100;
                        redQueenBase.y1 = redQueenBase.y1 - 100;
                        redQueenBase.y2 = redQueenBase.y2 - 100;
                        redQueenSquare.posX = redQueenSquare.posX + 100;
                        redQueenSquare.x1 = redQueenSquare.x1 + 100;
                        redQueenSquare.x2 = redQueenSquare.x2 + 100;
                        redQueenRectangle1.x1 = redQueenRectangle1.x1 - 100;
                        redQueenRectangle1.x2 = redQueenRectangle1.x2 - 100;
                        redQueenRectangle2.x1 = redQueenRectangle2.x1 - 100;
                        redQueenRectangle2.x2 = redQueenRectangle2.x2 - 100;
                        redQueenRectangle3.x1 = redQueenRectangle3.x1 - 100;
                        redQueenRectangle3.x2 = redQueenRectangle3.x2 - 100;
                        redQueenEllipse.x1 = redQueenEllipse.x1 + 100;
                        redQueenEllipse.x2 = redQueenEllipse.x2 + 100;
                        redQueenBase.x1 = redQueenBase.x1 + 100;
                        redQueenBase.x2 = redQueenBase.x2 + 100;
                    }

                    return flag;
                }
            }

            else {

                redQueenSquare.failedpath = TRUE;
                return TRUE;
            }
        }
    } else if(pos1 > 0) {
        if(ps1 < 0) {
            boolean f = FALSE;
            if(pos1 > 100 && ps1 < -100) {
                f = moveRedQueenDiagonally(msg, j, i, pos1 - 100, ps1 + 100, pos2, ps2);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    redQueenSquare.posY = redQueenSquare.posY + 100;
                    redQueenSquare.posX = redQueenSquare.posX - 100;
                    redQueenSquare.y1 = redQueenSquare.y1 + 100;
                    redQueenSquare.x1 = redQueenSquare.x1 - 100;
                    redQueenSquare.y2 = redQueenSquare.y2 + 100;
                    redQueenSquare.x2 = redQueenSquare.x2 - 100;
                    redQueenRectangle1.y1 = redQueenRectangle1.y1 + 100;
                    redQueenRectangle1.x1 = redQueenRectangle1.x1 - 100;
                    redQueenRectangle1.y2 = redQueenRectangle1.y2 + 100;
                    redQueenRectangle1.x2 = redQueenRectangle1.x2 - 100;
                    redQueenRectangle2.y1 = redQueenRectangle2.y1 + 100;
                    redQueenRectangle2.x1 = redQueenRectangle2.x1 - 100;
                    redQueenRectangle2.y2 = redQueenRectangle2.y2 + 100;
                    redQueenRectangle2.x2 = redQueenRectangle2.x2 - 100;
                    redQueenRectangle3.y1 = redQueenRectangle3.y1 + 100;
                    redQueenRectangle3.x1 = redQueenRectangle3.x1 - 100;
                    redQueenRectangle3.y2 = redQueenRectangle3.y2 + 100;
                    redQueenRectangle3.x2 = redQueenRectangle3.x2 - 100;
                    redQueenEllipse.y1 = redQueenEllipse.y1 + 100;
                    redQueenEllipse.x1 = redQueenEllipse.x1 - 100;
                    redQueenEllipse.y2 = redQueenEllipse.y2 + 100;
                    redQueenEllipse.x2 = redQueenEllipse.x2 - 100;
                    redQueenBase.y1 = redQueenBase.y1 + 100;
                    redQueenBase.x1 = redQueenBase.x1 - 100;
                    redQueenBase.y2 = redQueenBase.y2 + 100;
                    redQueenBase.x2 = redQueenBase.x2 - 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            if(redPawnsBase[s].posY == redQueenSquare.posY &&
                               redPawnsBase[s].posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redBishop1Square.posY == redQueenSquare.posY &&
                               redBishop1Square.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redBishop2Square.posY == redQueenSquare.posY &&
                               redBishop2Square.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight1Rectangle1.posY == redQueenSquare.posY &&
                               redKnight1Rectangle1.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight2Rectangle1.posY == redQueenSquare.posY &&
                               redKnight2Rectangle1.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook1Rectangle1.posY == redQueenSquare.posY &&
                               redRook1Rectangle1.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook2Rectangle1.posY == redQueenSquare.posY &&
                               redRook2Rectangle1.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKingSquare.posY == redQueenSquare.posY &&
                               redKingSquare.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyPawnsBase[s].posY == redQueenSquare.posY &&
                               greyPawnsBase[s].posX == redQueenSquare.posX) {
                                greyPawnsBase[s].posX = -1000;
                                greyPawnsBase[s].x1 = -1000;
                                greyPawnsBase[s].x2 = -1000;
                                greyPawnsEllipse[s].x1 = -1000;
                                greyPawnsEllipse[s].x2 = -1000;
                            }
                            if(greyKnight1Rectangle1.posY == redQueenSquare.posY &&
                               greyKnight1Rectangle1.posX == redQueenSquare.posX) {
                                greyKnight1Rectangle1.posX = -1000;
                                greyKnight1Rectangle1.x1 = -1000;
                                greyKnight1Rectangle1.x2 = -1000;
                                greyKnight1Rectangle2.x1 = -1000;
                                greyKnight1Rectangle2.x2 = -1000;
                                greyKnight1Base.x1 = -1000;
                                greyKnight1Base.x2 = -1000;
                                greyKnight1Ellipse.x1 = -1000;
                                greyKnight1Ellipse.x2 = -1000;
                            }
                            if(greyKnight2Rectangle1.posY == redQueenSquare.posY &&
                               greyKnight2Rectangle1.posX == redQueenSquare.posX) {
                                greyKnight2Rectangle1.posX = -1000;
                                greyKnight2Rectangle1.x1 = -1000;
                                greyKnight2Rectangle1.x2 = -1000;
                                greyKnight2Rectangle2.x1 = -1000;
                                greyKnight2Rectangle2.x2 = -1000;
                                greyKnight2Base.x1 = -1000;
                                greyKnight2Base.x2 = -1000;
                                greyKnight2Ellipse.x1 = -1000;
                                greyKnight2Ellipse.x2 = -1000;
                            }
                            if(greyBishop1Square.posY == redQueenSquare.posY &&
                               greyBishop1Square.posX == redQueenSquare.posX) {
                                greyBishop1Square.posX = -1000;
                                greyBishop1Square.x1 = -1000;
                                greyBishop1Square.x2 = -1000;
                                greyBishop1Rectangle.x1 = -1000;
                                greyBishop1Rectangle.x2 = -1000;
                                greyBishop1Base.x1 = -1000;
                                greyBishop1Base.x2 = -1000;
                                greyBishop1Ellipse.x1 = -1000;
                                greyBishop1Ellipse.x2 = -1000;
                            }
                            if(greyBishop2Square.posY == redQueenSquare.posY &&
                               greyBishop2Square.posX == redQueenSquare.posX) {
                                greyBishop2Square.posX = -1000;
                                greyBishop2Square.x1 = -1000;
                                greyBishop2Square.x2 = -1000;
                                greyBishop2Rectangle.x1 = -1000;
                                greyBishop2Rectangle.x2 = -1000;
                                greyBishop2Base.x1 = -1000;
                                greyBishop2Base.x2 = -1000;
                                greyBishop2Ellipse.x1 = -1000;
                                greyBishop2Ellipse.x2 = -1000;
                            }
                            if(greyRook1Rectangle1.posY == redQueenSquare.posY &&
                               greyRook1Rectangle1.posX == redQueenSquare.posX) {
                                greyRook1Rectangle1.posX = -1000;
                                greyRook1Rectangle1.x1 = -1000;
                                greyRook1Rectangle1.x2 = -1000;
                                greyRook1Rectangle2.x1 = -1000;
                                greyRook1Rectangle2.x2 = -1000;
                                greyRook1Base.x1 = -1000;
                                greyRook1Base.x2 = -1000;
                                greyRook1Ellipse.x1 = -1000;
                                greyRook1Ellipse.x2 = -1000;
                            }
                            if(greyRook2Rectangle1.posY == redQueenSquare.posY &&
                               greyRook2Rectangle1.posX == redQueenSquare.posX) {
                                greyRook2Rectangle1.posX = -1000;
                                greyRook2Rectangle1.x1 = -1000;
                                greyRook2Rectangle1.x2 = -1000;
                                greyRook2Rectangle2.x1 = -1000;
                                greyRook2Rectangle2.x2 = -1000;
                                greyRook2Base.x1 = -1000;
                                greyRook2Base.x2 = -1000;
                                greyRook2Ellipse.x1 = -1000;
                                greyRook2Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyBishop1Square.posY == redQueenSquare.posY &&
                               greyBishop1Square.posX == redQueenSquare.posX) {
                                greyBishop1Square.posX = -1000;
                                greyBishop1Square.x1 = -1000;
                                greyBishop1Square.x2 = -1000;
                                greyBishop1Rectangle.x1 = -1000;
                                greyBishop1Rectangle.x2 = -1000;
                                greyBishop1Base.x1 = -1000;
                                greyBishop1Base.x2 = -1000;
                                greyBishop1Ellipse.x1 = -1000;
                                greyBishop1Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyBishop2Square.posY == redQueenSquare.posY &&
                               greyBishop2Square.posX == redQueenSquare.posX) {
                                greyBishop2Square.posX = -1000;
                                greyBishop2Square.x1 = -1000;
                                greyBishop2Square.x2 = -1000;
                                greyBishop2Rectangle.x1 = -1000;
                                greyBishop2Rectangle.x2 = -1000;
                                greyBishop2Base.x1 = -1000;
                                greyBishop2Base.x2 = -1000;
                                greyBishop2Ellipse.x1 = -1000;
                                greyBishop2Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyKnight1Rectangle1.posY == redQueenSquare.posY &&
                               greyKnight1Rectangle1.posX == redQueenSquare.posX) {
                                greyKnight1Rectangle1.posX = -1000;
                                greyKnight1Rectangle1.x1 = -1000;
                                greyKnight1Rectangle1.x2 = -1000;
                                greyKnight1Rectangle2.x1 = -1000;
                                greyKnight1Rectangle2.x2 = -1000;
                                greyKnight1Base.x1 = -1000;
                                greyKnight1Base.x2 = -1000;
                                greyKnight1Ellipse.x1 = -1000;
                                greyKnight1Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyKnight2Rectangle1.posY == redQueenSquare.posY &&
                               greyKnight2Rectangle1.posX == redQueenSquare.posX) {
                                greyKnight2Rectangle1.posX = -1000;
                                greyKnight2Rectangle1.x1 = -1000;
                                greyKnight2Rectangle1.x2 = -1000;
                                greyKnight2Rectangle2.x1 = -1000;
                                greyKnight2Rectangle2.x2 = -1000;
                                greyKnight2Base.x1 = -1000;
                                greyKnight2Base.x2 = -1000;
                                greyKnight2Ellipse.x1 = -1000;
                                greyKnight2Ellipse.x2 = -1000;
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redQueenSquare.posY + 100 &&
                           redPawnsBase[s].posX == redQueenSquare.posX - 100) {
                            redQueenSquare.failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == redQueenSquare.posY + 100 &&
                           greyPawnsBase[s].posX == redQueenSquare.posX - 100) {
                            redQueenSquare.failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redBishop1Square.posY == redQueenSquare.posY + 100 &&
                       redBishop1Square.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == redQueenSquare.posY + 100 &&
                       redBishop2Square.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == redQueenSquare.posY + 100 &&
                       redRook1Rectangle1.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == redQueenSquare.posY + 100 &&
                       redRook2Rectangle1.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == redQueenSquare.posY + 100 &&
                       redKnight1Rectangle1.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == redQueenSquare.posY + 100 &&
                       redKnight2Rectangle1.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == redQueenSquare.posY + 100 &&
                       redBishop1Square.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == redQueenSquare.posY + 100 &&
                       redBishop2Square.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == redQueenSquare.posY + 100 &&
                       greyRook1Rectangle1.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == redQueenSquare.posY + 100 &&
                       greyRook2Rectangle1.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == redQueenSquare.posY + 100 &&
                       greyKnight1Rectangle1.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == redQueenSquare.posY + 100 &&
                       greyKnight2Rectangle1.posX == redQueenSquare.posX - 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == redQueenSquare.posY + 100 &&
                       greyBishop1Square.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == redQueenSquare.posY + 100 &&
                       greyBishop2Square.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == redQueenSquare.posY + 100 &&
                       greyQueenSquare.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        redQueenSquare.posY = redQueenSquare.posY + 100;
                        redQueenSquare.y1 = redQueenSquare.y1 + 100;
                        redQueenSquare.y2 = redQueenSquare.y2 + 100;
                        redQueenRectangle1.y1 = redQueenRectangle1.y1 + 100;
                        redQueenRectangle1.y2 = redQueenRectangle1.y2 + 100;
                        redQueenRectangle2.y1 = redQueenRectangle2.y1 + 100;
                        redQueenRectangle2.y2 = redQueenRectangle2.y2 + 100;
                        redQueenRectangle3.y1 = redQueenRectangle3.y1 + 100;
                        redQueenRectangle3.y2 = redQueenRectangle3.y2 + 100;
                        redQueenEllipse.y1 = redQueenEllipse.y1 + 100;
                        redQueenEllipse.y2 = redQueenEllipse.y2 + 100;
                        redQueenBase.y1 = redQueenBase.y1 + 100;
                        redQueenBase.y2 = redQueenBase.y2 + 100;
                        redQueenSquare.posX = redQueenSquare.posX - 100;
                        redQueenSquare.x1 = redQueenSquare.x1 - 100;
                        redQueenSquare.x2 = redQueenSquare.x2 - 100;
                        redQueenRectangle1.x1 = redQueenRectangle1.x1 - 100;
                        redQueenRectangle1.x2 = redQueenRectangle1.x2 - 100;
                        redQueenRectangle2.x1 = redQueenRectangle2.x1 - 100;
                        redQueenRectangle2.x2 = redQueenRectangle2.x2 - 100;
                        redQueenRectangle3.x1 = redQueenRectangle3.x1 - 100;
                        redQueenRectangle3.x2 = redQueenRectangle3.x2 - 100;
                        redQueenEllipse.x1 = redQueenEllipse.x1 - 100;
                        redQueenEllipse.x2 = redQueenEllipse.x2 - 100;
                        redQueenBase.x1 = redQueenBase.x1 - 100;
                        redQueenBase.x2 = redQueenBase.x2 - 100;
                    }

                    return flag;
                }
            }

            else {

                redQueenSquare.failedpath = TRUE;
                return TRUE;
            }
        }
        if(ps1 > 0) {
            boolean f = FALSE;
            if(pos1 > 100 && ps1 > 100) {
                f = moveRedQueenDiagonally(msg, j, i, pos1 - 100, ps1 - 100, pos2, ps2);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    redQueenSquare.posY = redQueenSquare.posY + 100;
                    redQueenSquare.posX = redQueenSquare.posX + 100;
                    redQueenSquare.y1 = redQueenSquare.y1 + 100;
                    redQueenSquare.x1 = redQueenSquare.x1 + 100;
                    redQueenSquare.y2 = redQueenSquare.y2 + 100;
                    redQueenSquare.x2 = redQueenSquare.x2 + 100;
                    redQueenRectangle1.y1 = redQueenRectangle1.y1 + 100;
                    redQueenRectangle1.x1 = redQueenRectangle1.x1 + 100;
                    redQueenRectangle1.y2 = redQueenRectangle1.y2 + 100;
                    redQueenRectangle1.x2 = redQueenRectangle1.x2 + 100;
                    redQueenRectangle2.y1 = redQueenRectangle2.y1 + 100;
                    redQueenRectangle2.x1 = redQueenRectangle2.x1 + 100;
                    redQueenRectangle2.y2 = redQueenRectangle2.y2 + 100;
                    redQueenRectangle2.x2 = redQueenRectangle2.x2 + 100;
                    redQueenRectangle3.y1 = redQueenRectangle3.y1 + 100;
                    redQueenRectangle3.x1 = redQueenRectangle3.x1 + 100;
                    redQueenRectangle3.y2 = redQueenRectangle3.y2 + 100;
                    redQueenRectangle3.x2 = redQueenRectangle3.x2 + 100;
                    redQueenEllipse.y1 = redQueenEllipse.y1 + 100;
                    redQueenEllipse.x1 = redQueenEllipse.x1 + 100;
                    redQueenEllipse.y2 = redQueenEllipse.y2 + 100;
                    redQueenEllipse.x2 = redQueenEllipse.x2 + 100;
                    redQueenBase.y1 = redQueenBase.y1 + 100;
                    redQueenBase.x1 = redQueenBase.x1 + 100;
                    redQueenBase.y2 = redQueenBase.y2 + 100;
                    redQueenBase.x2 = redQueenBase.x2 + 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            if(redPawnsBase[s].posY == redQueenSquare.posY &&
                               redPawnsBase[s].posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redBishop1Square.posY == redQueenSquare.posY &&
                               redBishop1Square.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redBishop2Square.posY == redQueenSquare.posY &&
                               redBishop2Square.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight1Rectangle1.posY == redQueenSquare.posY &&
                               redKnight1Rectangle1.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight2Rectangle1.posY == redQueenSquare.posY &&
                               redKnight2Rectangle1.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook1Rectangle1.posY == redQueenSquare.posY &&
                               redRook1Rectangle1.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook2Rectangle1.posY == redQueenSquare.posY &&
                               redRook2Rectangle1.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKingSquare.posY == redQueenSquare.posY &&
                               redKingSquare.posX == redQueenSquare.posX) {
                                redQueenSquare.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyPawnsBase[s].posY == redQueenSquare.posY &&
                               greyPawnsBase[s].posX == redQueenSquare.posX) {
                                greyPawnsBase[s].posX = -1000;
                                greyPawnsBase[s].x1 = -1000;
                                greyPawnsBase[s].x2 = -1000;
                                greyPawnsEllipse[s].x1 = -1000;
                                greyPawnsEllipse[s].x2 = -1000;
                            }
                            if(greyKnight1Rectangle1.posY == redQueenSquare.posY &&
                               greyKnight1Rectangle1.posX == redQueenSquare.posX) {
                                greyKnight1Rectangle1.posX = -1000;
                                greyKnight1Rectangle1.x1 = -1000;
                                greyKnight1Rectangle1.x2 = -1000;
                                greyKnight1Rectangle2.x1 = -1000;
                                greyKnight1Rectangle2.x2 = -1000;
                                greyKnight1Base.x1 = -1000;
                                greyKnight1Base.x2 = -1000;
                                greyKnight1Ellipse.x1 = -1000;
                                greyKnight1Ellipse.x2 = -1000;
                            }
                            if(greyKnight2Rectangle1.posY == redQueenSquare.posY &&
                               greyKnight2Rectangle1.posX == redQueenSquare.posX) {
                                greyKnight2Rectangle1.posX = -1000;
                                greyKnight2Rectangle1.x1 = -1000;
                                greyKnight2Rectangle1.x2 = -1000;
                                greyKnight2Rectangle2.x1 = -1000;
                                greyKnight2Rectangle2.x2 = -1000;
                                greyKnight2Base.x1 = -1000;
                                greyKnight2Base.x2 = -1000;
                                greyKnight2Ellipse.x1 = -1000;
                                greyKnight2Ellipse.x2 = -1000;
                            }
                            if(greyBishop1Square.posY == redQueenSquare.posY &&
                               greyBishop1Square.posX == redQueenSquare.posX) {
                                greyBishop1Square.posX = -1000;
                                greyBishop1Square.x1 = -1000;
                                greyBishop1Square.x2 = -1000;
                                greyBishop1Rectangle.x1 = -1000;
                                greyBishop1Rectangle.x2 = -1000;
                                greyBishop1Base.x1 = -1000;
                                greyBishop1Base.x2 = -1000;
                                greyBishop1Ellipse.x1 = -1000;
                                greyBishop1Ellipse.x2 = -1000;
                            }
                            if(greyBishop2Square.posY == redQueenSquare.posY &&
                               greyBishop2Square.posX == redQueenSquare.posX) {
                                greyBishop2Square.posX = -1000;
                                greyBishop2Square.x1 = -1000;
                                greyBishop2Square.x2 = -1000;
                                greyBishop2Rectangle.x1 = -1000;
                                greyBishop2Rectangle.x2 = -1000;
                                greyBishop2Base.x1 = -1000;
                                greyBishop2Base.x2 = -1000;
                                greyBishop2Ellipse.x1 = -1000;
                                greyBishop2Ellipse.x2 = -1000;
                            }
                            if(greyRook1Rectangle1.posY == redQueenSquare.posY &&
                               greyRook1Rectangle1.posX == redQueenSquare.posX) {
                                greyRook1Rectangle1.posX = -1000;
                                greyRook1Rectangle1.x1 = -1000;
                                greyRook1Rectangle1.x2 = -1000;
                                greyRook1Rectangle2.x1 = -1000;
                                greyRook1Rectangle2.x2 = -1000;
                                greyRook1Base.x1 = -1000;
                                greyRook1Base.x2 = -1000;
                                greyRook1Ellipse.x1 = -1000;
                                greyRook1Ellipse.x2 = -1000;
                            }
                            if(greyRook2Rectangle1.posY == redQueenSquare.posY &&
                               greyRook2Rectangle1.posX == redQueenSquare.posX) {
                                greyRook2Rectangle1.posX = -1000;
                                greyRook2Rectangle1.x1 = -1000;
                                greyRook2Rectangle1.x2 = -1000;
                                greyRook2Rectangle2.x1 = -1000;
                                greyRook2Rectangle2.x2 = -1000;
                                greyRook2Base.x1 = -1000;
                                greyRook2Base.x2 = -1000;
                                greyRook2Ellipse.x1 = -1000;
                                greyRook2Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyBishop1Square.posY == redQueenSquare.posY &&
                               greyBishop1Square.posX == redQueenSquare.posX) {
                                greyBishop1Square.posX = -1000;
                                greyBishop1Square.x1 = -1000;
                                greyBishop1Square.x2 = -1000;
                                greyBishop1Rectangle.x1 = -1000;
                                greyBishop1Rectangle.x2 = -1000;
                                greyBishop1Base.x1 = -1000;
                                greyBishop1Base.x2 = -1000;
                                greyBishop1Ellipse.x1 = -1000;
                                greyBishop1Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyBishop2Square.posY == redQueenSquare.posY &&
                               greyBishop2Square.posX == redQueenSquare.posX) {
                                greyBishop2Square.posX = -1000;
                                greyBishop2Square.x1 = -1000;
                                greyBishop2Square.x2 = -1000;
                                greyBishop2Rectangle.x1 = -1000;
                                greyBishop2Rectangle.x2 = -1000;
                                greyBishop2Base.x1 = -1000;
                                greyBishop2Base.x2 = -1000;
                                greyBishop2Ellipse.x1 = -1000;
                                greyBishop2Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyKnight1Rectangle1.posY == redQueenSquare.posY &&
                               greyKnight1Rectangle1.posX == redQueenSquare.posX) {
                                greyKnight1Rectangle1.posX = -1000;
                                greyKnight1Rectangle1.x1 = -1000;
                                greyKnight1Rectangle1.x2 = -1000;
                                greyKnight1Rectangle2.x1 = -1000;
                                greyKnight1Rectangle2.x2 = -1000;
                                greyKnight1Base.x1 = -1000;
                                greyKnight1Base.x2 = -1000;
                                greyKnight1Ellipse.x1 = -1000;
                                greyKnight1Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyKnight2Rectangle1.posY == redQueenSquare.posY &&
                               greyKnight2Rectangle1.posX == redQueenSquare.posX) {
                                greyKnight2Rectangle1.posX = -1000;
                                greyKnight2Rectangle1.x1 = -1000;
                                greyKnight2Rectangle1.x2 = -1000;
                                greyKnight2Rectangle2.x1 = -1000;
                                greyKnight2Rectangle2.x2 = -1000;
                                greyKnight2Base.x1 = -1000;
                                greyKnight2Base.x2 = -1000;
                                greyKnight2Ellipse.x1 = -1000;
                                greyKnight2Ellipse.x2 = -1000;
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redQueenSquare.posY + 100 &&
                           redPawnsBase[s].posX == redQueenSquare.posX + 100) {
                            redQueenSquare.failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == redQueenSquare.posY + 100 &&
                           greyPawnsBase[s].posX == redQueenSquare.posX + 100) {
                            redQueenSquare.failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redBishop1Square.posY == redQueenSquare.posY + 100 &&
                       redBishop1Square.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == redQueenSquare.posY + 100 &&
                       redBishop2Square.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == redQueenSquare.posY + 100 &&
                       redRook1Rectangle1.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == redQueenSquare.posY + 100 &&
                       redRook2Rectangle1.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == redQueenSquare.posY + 100 &&
                       redKnight1Rectangle1.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == redQueenSquare.posY + 100 &&
                       redKnight2Rectangle1.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == redQueenSquare.posY + 100 &&
                       redBishop1Square.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == redQueenSquare.posY + 100 &&
                       redBishop2Square.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == redQueenSquare.posY + 100 &&
                       greyRook1Rectangle1.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == redQueenSquare.posY + 100 &&
                       greyRook2Rectangle1.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == redQueenSquare.posY + 100 &&
                       greyKnight1Rectangle1.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == redQueenSquare.posY + 100 &&
                       greyKnight2Rectangle1.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == redQueenSquare.posY + 100 &&
                       greyBishop1Square.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == redQueenSquare.posY + 100 &&
                       greyBishop2Square.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == redQueenSquare.posY + 100 &&
                       greyQueenSquare.posX == redQueenSquare.posX + 100) {
                        redQueenSquare.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        redQueenSquare.posY = redQueenSquare.posY + 100;
                        redQueenSquare.y1 = redQueenSquare.y1 + 100;
                        redQueenSquare.y2 = redQueenSquare.y2 + 100;
                        redQueenRectangle1.y1 = redQueenRectangle1.y1 + 100;
                        redQueenRectangle1.y2 = redQueenRectangle1.y2 + 100;
                        redQueenRectangle2.y1 = redQueenRectangle2.y1 + 100;
                        redQueenRectangle2.y2 = redQueenRectangle2.y2 + 100;
                        redQueenRectangle3.y1 = redQueenRectangle3.y1 + 100;
                        redQueenRectangle3.y2 = redQueenRectangle3.y2 + 100;
                        redQueenEllipse.y1 = redQueenEllipse.y1 + 100;
                        redQueenEllipse.y2 = redQueenEllipse.y2 + 100;
                        redQueenBase.y1 = redQueenBase.y1 + 100;
                        redQueenBase.y2 = redQueenBase.y2 + 100;
                        redQueenSquare.posX = redQueenSquare.posX + 100;
                        redQueenSquare.x1 = redQueenSquare.x1 + 100;
                        redQueenSquare.x2 = redQueenSquare.x2 + 100;
                        redQueenRectangle1.x1 = redQueenRectangle1.x1 + 100;
                        redQueenRectangle1.x2 = redQueenRectangle1.x2 + 100;
                        redQueenRectangle2.x1 = redQueenRectangle2.x1 + 100;
                        redQueenRectangle2.x2 = redQueenRectangle2.x2 + 100;
                        redQueenRectangle3.x1 = redQueenRectangle3.x1 + 100;
                        redQueenRectangle3.x2 = redQueenRectangle3.x2 + 100;
                        redQueenEllipse.x1 = redQueenEllipse.x1 + 100;
                        redQueenEllipse.x2 = redQueenEllipse.x2 + 100;
                        redQueenBase.x1 = redQueenBase.x1 + 100;
                        redQueenBase.x2 = redQueenBase.x2 + 100;
                    }

                    return flag;
                }
            }

            else {

                redQueenSquare.failedpath = TRUE;
                return TRUE;
            }
        }
    }
}

boolean moveRedQueenDiagonallyK(UINT msg, int j, int i, int pos1, int ps1, int pos2, int ps2, int k) {

    for(int p=0; p<8; p++) {
        if(p != k &&
           redQueenSquareK[p].posX == redQueenSquareK[k].posX &&
           redQueenSquareK[p].posY == redQueenSquareK[k].posY) {
            redQueenSquareK[k].failedpath = TRUE;
            return TRUE;
        }
        if(p != k &&
           greyQueenSquareK[p].posX == redQueenSquareK[k].posX &&
           greyQueenSquareK[p].posY == redQueenSquareK[k].posY) {
            redQueenSquareK[k].failedpath = TRUE;
            return TRUE;
        }
    }
    if(redQueenSquare.posX == redQueenSquareK[k].posX &&
       redQueenSquare.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(greyQueenSquare.posX == redQueenSquareK[k].posX &&
       greyQueenSquare.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(greyKnight1Rectangle1.posX == redQueenSquareK[k].posX &&
       greyKnight1Rectangle1.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(greyKnight2Rectangle1.posX == redQueenSquareK[k].posX &&
       greyKnight2Rectangle1.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(greyBishop1Square.posX == redQueenSquareK[k].posX &&
       greyBishop1Square.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(greyBishop2Square.posX == redQueenSquareK[k].posX &&
       greyBishop2Square.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(greyRook1Rectangle1.posX == redQueenSquareK[k].posX &&
       greyRook1Rectangle1.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(greyRook2Rectangle1.posX == redQueenSquareK[k].posX &&
       greyRook2Rectangle1.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(greyQueenSquare.posX == redQueenSquareK[k].posX &&
       greyQueenSquare.posY == redQueenSquareK[k].posY) {
        redQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    for(int g=0; g<8; g++) {
        if(greyPawnsBase[g].posX == redQueenSquareK[k].posX &&
           greyPawnsBase[g].posY == redQueenSquareK[k].posY) {
            redQueenSquareK[k].failedpath = TRUE;
            return TRUE;
        }
    }
    boolean fail = FALSE;
    if(pos1 == ps1) {
        fail = FALSE;
    } else if(pos1 == -ps1) {
        fail = FALSE;
    } else {
        fail = TRUE;
        redQueenSquareK[k].failedpath = fail;
    }
    if(pos1 < 0) {
        if(ps1 < 0) {
            boolean f = FALSE;
            if(pos1 < -100 && ps1 < -100) {
                f = moveRedQueenDiagonallyK(msg, j, i, pos1 + 100, ps1 + 100, pos2, ps2, k);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    redQueenSquareK[k].posY = redQueenSquareK[k].posY - 100;
                    redQueenSquareK[k].posX = redQueenSquareK[k].posX - 100;
                    redQueenSquareK[k].y1 = redQueenSquareK[k].y1 - 100;
                    redQueenSquareK[k].x1 = redQueenSquareK[k].x1 - 100;
                    redQueenSquareK[k].y2 = redQueenSquareK[k].y2 - 100;
                    redQueenSquareK[k].x2 = redQueenSquareK[k].x2 - 100;
                    redQueenRectangle1K[k].y1 = redQueenRectangle1K[k].y1 - 100;
                    redQueenRectangle1K[k].x1 = redQueenRectangle1K[k].x1 - 100;
                    redQueenRectangle1K[k].y2 = redQueenRectangle1K[k].y2 - 100;
                    redQueenRectangle1K[k].x2 = redQueenRectangle1K[k].x2 - 100;
                    redQueenRectangle2K[k].y1 = redQueenRectangle2K[k].y1 - 100;
                    redQueenRectangle2K[k].x1 = redQueenRectangle2K[k].x1 - 100;
                    redQueenRectangle2K[k].y2 = redQueenRectangle2K[k].y2 - 100;
                    redQueenRectangle2K[k].x2 = redQueenRectangle2K[k].x2 - 100;
                    redQueenRectangle3K[k].y1 = redQueenRectangle3K[k].y1 - 100;
                    redQueenRectangle3K[k].x1 = redQueenRectangle3K[k].x1 - 100;
                    redQueenRectangle3K[k].y2 = redQueenRectangle3K[k].y2 - 100;
                    redQueenRectangle3K[k].x2 = redQueenRectangle3K[k].x2 - 100;
                    redQueenEllipseK[k].y1 = redQueenEllipseK[k].y1 - 100;
                    redQueenEllipseK[k].x1 = redQueenEllipseK[k].x1 - 100;
                    redQueenEllipseK[k].y2 = redQueenEllipseK[k].y2 - 100;
                    redQueenEllipseK[k].x2 = redQueenEllipseK[k].x2 - 100;
                    redQueenBaseK[k].y1 = redQueenBaseK[k].y1 - 100;
                    redQueenBaseK[k].x1 = redQueenBaseK[k].x1 - 100;
                    redQueenBaseK[k].y2 = redQueenBaseK[k].y2 - 100;
                    redQueenBaseK[k].x2 = redQueenBaseK[k].x2 - 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            for(int p=0; p<8; p++) {
                                if(p != k &&
                                   redQueenSquareK[p].posX == redQueenSquareK[k].posX &&
                                   redQueenSquareK[p].posY == redQueenSquareK[k].posY) {
                                    redQueenSquareK[k].failedpath = TRUE;
                                    return TRUE;
                                }
                            }
                            if(redQueenSquare.posX == redQueenSquareK[k].posX &&
                               redQueenSquare.posY == redQueenSquareK[k].posY) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redPawnsBase[s].posY == redQueenSquareK[k].posY &&
                               redPawnsBase[s].posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redBishop1Square.posY == redQueenSquareK[k].posY &&
                               redBishop1Square.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redBishop2Square.posY == redQueenSquareK[k].posY &&
                               redBishop2Square.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                               redKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                               redKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook1Rectangle1.posY == redQueenSquareK[k].posY &&
                               redRook1Rectangle1.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook2Rectangle1.posY == redQueenSquareK[k].posY &&
                               redRook2Rectangle1.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKingSquare.posY == redQueenSquareK[k].posY &&
                               redKingSquare.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            for(int r=0; r<8; r++) {
                                if(WM_RBUTTONDOWN == msg || 1 == 1)
                                if(greyQueenSquareK[r].posY == redQueenSquareK[k].posY &&
                                   greyQueenSquareK[r].posX == redQueenSquareK[k].posX) {
                                    greyQueenSquareK[r].posX = -1000;
                                    greyQueenSquareK[r].x1 = -1000;
                                    greyQueenSquareK[r].x2 = -1000;
                                    greyQueenBaseK[r].x1 = -1000;
                                    greyQueenBaseK[r].x2 = -1000;
                                    greyQueenEllipseK[r].x1 = -1000;
                                    greyQueenEllipseK[r].x2 = -1000;
                                    greyQueenRectangle1K[r].x1 = -1000;
                                    greyQueenRectangle1K[r].x2 = -1000;
                                    greyQueenRectangle2K[r].x1 = -1000;
                                    greyQueenRectangle2K[r].x2 = -1000;
                                    greyQueenRectangle3K[r].x1 = -1000;
                                    greyQueenRectangle3K[r].x2 = -1000;
                                }
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyQueenSquare.posY == redQueenSquareK[k].posY &&
                               greyQueenSquare.posX == redQueenSquareK[k].posX) {
                                greyQueenSquare.posX = -1000;
                                greyQueenSquare.x1 = -1000;
                                greyQueenSquare.x2 = -1000;
                                greyQueenBase.x1 = -1000;
                                greyQueenBase.x2 = -1000;
                                greyQueenEllipse.x1 = -1000;
                                greyQueenEllipse.x2 = -1000;
                                greyQueenRectangle1.x1 = -1000;
                                greyQueenRectangle1.x2 = -1000;
                                greyQueenRectangle2.x1 = -1000;
                                greyQueenRectangle2.x2 = -1000;
                                greyQueenRectangle3.x1 = -1000;
                                greyQueenRectangle3.x2 = -1000;
                            }
                            if(greyPawnsBase[s].posY == redQueenSquareK[k].posY &&
                               greyPawnsBase[s].posX == redQueenSquareK[k].posX) {
                                greyPawnsBase[s].posX = -1000;
                                greyPawnsBase[s].x1 = -1000;
                                greyPawnsBase[s].x2 = -1000;
                                greyPawnsEllipse[s].x1 = -1000;
                                greyPawnsEllipse[s].x2 = -1000;
                            }
                            if(greyKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                               greyKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                                greyKnight1Rectangle1.posX = -1000;
                                greyKnight1Rectangle1.x1 = -1000;
                                greyKnight1Rectangle1.x2 = -1000;
                                greyKnight1Rectangle2.x1 = -1000;
                                greyKnight1Rectangle2.x2 = -1000;
                                greyKnight1Base.x1 = -1000;
                                greyKnight1Base.x2 = -1000;
                                greyKnight1Ellipse.x1 = -1000;
                                greyKnight1Ellipse.x2 = -1000;
                            }
                            if(greyKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                               greyKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                                greyKnight2Rectangle1.posX = -1000;
                                greyKnight2Rectangle1.x1 = -1000;
                                greyKnight2Rectangle1.x2 = -1000;
                                greyKnight2Rectangle2.x1 = -1000;
                                greyKnight2Rectangle2.x2 = -1000;
                                greyKnight2Base.x1 = -1000;
                                greyKnight2Base.x2 = -1000;
                                greyKnight2Ellipse.x1 = -1000;
                                greyKnight2Ellipse.x2 = -1000;
                            }
                            if(greyBishop1Square.posY == redQueenSquareK[k].posY &&
                               greyBishop1Square.posX == redQueenSquareK[k].posX) {
                                greyBishop1Square.posX = -1000;
                                greyBishop1Square.x1 = -1000;
                                greyBishop1Square.x2 = -1000;
                                greyBishop1Rectangle.x1 = -1000;
                                greyBishop1Rectangle.x2 = -1000;
                                greyBishop1Base.x1 = -1000;
                                greyBishop1Base.x2 = -1000;
                                greyBishop1Ellipse.x1 = -1000;
                                greyBishop1Ellipse.x2 = -1000;
                            }
                            if(greyBishop2Square.posY == redQueenSquareK[k].posY &&
                               greyBishop2Square.posX == redQueenSquareK[k].posX) {
                                greyBishop2Square.posX = -1000;
                                greyBishop2Square.x1 = -1000;
                                greyBishop2Square.x2 = -1000;
                                greyBishop2Rectangle.x1 = -1000;
                                greyBishop2Rectangle.x2 = -1000;
                                greyBishop2Base.x1 = -1000;
                                greyBishop2Base.x2 = -1000;
                                greyBishop2Ellipse.x1 = -1000;
                                greyBishop2Ellipse.x2 = -1000;
                            }
                            if(greyRook1Rectangle1.posY == redQueenSquareK[k].posY &&
                               greyRook1Rectangle1.posX == redQueenSquareK[k].posX) {
                                greyRook1Rectangle1.posX = -1000;
                                greyRook1Rectangle1.x1 = -1000;
                                greyRook1Rectangle1.x2 = -1000;
                                greyRook1Rectangle2.x1 = -1000;
                                greyRook1Rectangle2.x2 = -1000;
                                greyRook1Base.x1 = -1000;
                                greyRook1Base.x2 = -1000;
                                greyRook1Ellipse.x1 = -1000;
                                greyRook1Ellipse.x2 = -1000;
                            }
                            if(greyRook2Rectangle1.posY == redQueenSquareK[k].posY &&
                               greyRook2Rectangle1.posX == redQueenSquareK[k].posX) {
                                greyRook2Rectangle1.posX = -1000;
                                greyRook2Rectangle1.x1 = -1000;
                                greyRook2Rectangle1.x2 = -1000;
                                greyRook2Rectangle2.x1 = -1000;
                                greyRook2Rectangle2.x2 = -1000;
                                greyRook2Base.x1 = -1000;
                                greyRook2Base.x2 = -1000;
                                greyRook2Ellipse.x1 = -1000;
                                greyRook2Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyBishop1Square.posY == redQueenSquareK[k].posY &&
                               greyBishop1Square.posX == redQueenSquareK[k].posX) {
                                greyBishop1Square.posX = -1000;
                                greyBishop1Square.x1 = -1000;
                                greyBishop1Square.x2 = -1000;
                                greyBishop1Rectangle.x1 = -1000;
                                greyBishop1Rectangle.x2 = -1000;
                                greyBishop1Base.x1 = -1000;
                                greyBishop1Base.x2 = -1000;
                                greyBishop1Ellipse.x1 = -1000;
                                greyBishop1Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyBishop2Square.posY == redQueenSquareK[k].posY &&
                               greyBishop2Square.posX == redQueenSquareK[k].posX) {
                                greyBishop2Square.posX = -1000;
                                greyBishop2Square.x1 = -1000;
                                greyBishop2Square.x2 = -1000;
                                greyBishop2Rectangle.x1 = -1000;
                                greyBishop2Rectangle.x2 = -1000;
                                greyBishop2Base.x1 = -1000;
                                greyBishop2Base.x2 = -1000;
                                greyBishop2Ellipse.x1 = -1000;
                                greyBishop2Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                               greyKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                                greyKnight1Rectangle1.posX = -1000;
                                greyKnight1Rectangle1.x1 = -1000;
                                greyKnight1Rectangle1.x2 = -1000;
                                greyKnight1Rectangle2.x1 = -1000;
                                greyKnight1Rectangle2.x2 = -1000;
                                greyKnight1Base.x1 = -1000;
                                greyKnight1Base.x2 = -1000;
                                greyKnight1Ellipse.x1 = -1000;
                                greyKnight1Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                               greyKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                                greyKnight2Rectangle1.posX = -1000;
                                greyKnight2Rectangle1.x1 = -1000;
                                greyKnight2Rectangle1.x2 = -1000;
                                greyKnight2Rectangle2.x1 = -1000;
                                greyKnight2Rectangle2.x2 = -1000;
                                greyKnight2Base.x1 = -1000;
                                greyKnight2Base.x2 = -1000;
                                greyKnight2Ellipse.x1 = -1000;
                                greyKnight2Ellipse.x2 = -1000;
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redQueenSquareK[k].posY - 100 &&
                           redPawnsBase[s].posX == redQueenSquareK[k].posX - 100) {
                            redQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == redQueenSquareK[k].posY - 100 &&
                           greyPawnsBase[s].posX == redQueenSquareK[k].posX - 100) {
                            redQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                        for(int p=0; p<8; p++) {
                            if(p != k &&
                               redQueenSquareK[p].posX == redQueenSquareK[k].posX - 100 &&
                               redQueenSquareK[p].posY == redQueenSquareK[k].posY - 100) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(p != k &&
                               greyQueenSquareK[p].posX == redQueenSquareK[k].posX - 100 &&
                               greyQueenSquareK[p].posY == redQueenSquareK[k].posY - 100) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                        }
                    }
                    if(redQueenSquare.posX == redQueenSquareK[k].posX - 100 &&
                       redQueenSquare.posY == redQueenSquareK[k].posY - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        return TRUE;
                    }
                    if(greyQueenSquare.posX == redQueenSquareK[k].posX - 100 &&
                       greyQueenSquare.posY == redQueenSquareK[k].posY - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        return TRUE;
                    }
                    if(redBishop1Square.posY == redQueenSquareK[k].posY - 100 &&
                       redBishop1Square.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == redQueenSquareK[k].posY - 100 &&
                       redBishop2Square.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                       redRook1Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                       redRook2Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                       redKnight1Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                       redKnight2Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == redQueenSquareK[k].posY - 100 &&
                       redBishop1Square.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == redQueenSquareK[k].posY - 100 &&
                       redBishop2Square.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                       greyRook1Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                       greyRook2Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                       greyKnight1Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                       greyKnight2Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == redQueenSquareK[k].posY - 100 &&
                       redBishop1Square.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == redQueenSquareK[k].posY - 100 &&
                       redBishop2Square.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                       redRook1Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                       redRook2Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                       redKnight1Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                       redKnight2Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == redQueenSquareK[k].posY - 100 &&
                       redBishop1Square.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == redQueenSquareK[k].posY - 100 &&
                       redBishop2Square.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                       greyRook1Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                       greyRook2Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                       greyKnight1Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                       greyKnight2Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == redQueenSquareK[k].posY + 100 &&
                       greyBishop1Square.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == redQueenSquareK[k].posY + 100 &&
                       greyBishop2Square.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == redQueenSquareK[k].posY + 100 &&
                       greyQueenSquare.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        redQueenSquareK[k].posY = redQueenSquareK[k].posY - 100;
                        redQueenSquareK[k].y1 = redQueenSquareK[k].y1 - 100;
                        redQueenSquareK[k].y2 = redQueenSquareK[k].y2 - 100;
                        redQueenRectangle1K[k].y1 = redQueenRectangle1K[k].y1 - 100;
                        redQueenRectangle1K[k].y2 = redQueenRectangle1K[k].y2 - 100;
                        redQueenRectangle2K[k].y1 = redQueenRectangle2K[k].y1 - 100;
                        redQueenRectangle2K[k].y2 = redQueenRectangle2K[k].y2 - 100;
                        redQueenRectangle3K[k].y1 = redQueenRectangle3K[k].y1 - 100;
                        redQueenRectangle3K[k].y2 = redQueenRectangle3K[k].y2 - 100;
                        redQueenEllipseK[k].y1 = redQueenEllipseK[k].y1 - 100;
                        redQueenEllipseK[k].y2 = redQueenEllipseK[k].y2 - 100;
                        redQueenBaseK[k].y1 = redQueenBaseK[k].y1 - 100;
                        redQueenBaseK[k].y2 = redQueenBaseK[k].y2 - 100;
                        redQueenSquareK[k].posX = redQueenSquareK[k].posX - 100;
                        redQueenSquareK[k].x1 = redQueenSquareK[k].x1 - 100;
                        redQueenSquareK[k].x2 = redQueenSquareK[k].x2 - 100;
                        redQueenRectangle1K[k].x1 = redQueenRectangle1K[k].x1 - 100;
                        redQueenRectangle1K[k].x2 = redQueenRectangle1K[k].x2 - 100;
                        redQueenRectangle2K[k].x1 = redQueenRectangle2K[k].x1 - 100;
                        redQueenRectangle2K[k].x2 = redQueenRectangle2K[k].x2 - 100;
                        redQueenRectangle3K[k].x1 = redQueenRectangle3K[k].x1 - 100;
                        redQueenRectangle3K[k].x2 = redQueenRectangle3K[k].x2 - 100;
                        redQueenEllipseK[k].x1 = redQueenEllipseK[k].x1 - 100;
                        redQueenEllipseK[k].x2 = redQueenEllipseK[k].x2 - 100;
                        redQueenBaseK[k].x1 = redQueenBaseK[k].x1 - 100;
                        redQueenBaseK[k].x2 = redQueenBaseK[k].x2 - 100;
                    }

                    return flag;
                }
            }

            else {

                redQueenSquareK[k].failedpath = TRUE;
                return TRUE;
            }
        }
        if(ps1 > 0) {
            boolean f = FALSE;
            if(pos1 < -100 && ps1 > 100) {
                f = moveRedQueenDiagonallyK(msg, j, i, pos1 + 100, ps1 - 100, pos2, ps2, k);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    redQueenSquareK[k].posY = redQueenSquareK[k].posY - 100;
                    redQueenSquareK[k].posX = redQueenSquareK[k].posX + 100;
                    redQueenSquareK[k].y1 = redQueenSquareK[k].y1 - 100;
                    redQueenSquareK[k].x1 = redQueenSquareK[k].x1 + 100;
                    redQueenSquareK[k].y2 = redQueenSquareK[k].y2 - 100;
                    redQueenSquareK[k].x2 = redQueenSquareK[k].x2 + 100;
                    redQueenRectangle1K[k].y1 = redQueenRectangle1K[k].y1 - 100;
                    redQueenRectangle1K[k].x1 = redQueenRectangle1K[k].x1 + 100;
                    redQueenRectangle1K[k].y2 = redQueenRectangle1K[k].y2 - 100;
                    redQueenRectangle1K[k].x2 = redQueenRectangle1K[k].x2 + 100;
                    redQueenRectangle2K[k].y1 = redQueenRectangle2K[k].y1 - 100;
                    redQueenRectangle2K[k].x1 = redQueenRectangle2K[k].x1 + 100;
                    redQueenRectangle2K[k].y2 = redQueenRectangle2K[k].y2 - 100;
                    redQueenRectangle2K[k].x2 = redQueenRectangle2K[k].x2 + 100;
                    redQueenRectangle3K[k].y1 = redQueenRectangle3K[k].y1 - 100;
                    redQueenRectangle3K[k].x1 = redQueenRectangle3K[k].x1 + 100;
                    redQueenRectangle3K[k].y2 = redQueenRectangle3K[k].y2 - 100;
                    redQueenRectangle3K[k].x2 = redQueenRectangle3K[k].x2 + 100;
                    redQueenEllipseK[k].y1 = redQueenEllipseK[k].y1 - 100;
                    redQueenEllipseK[k].x1 = redQueenEllipseK[k].x1 + 100;
                    redQueenEllipseK[k].y2 = redQueenEllipseK[k].y2 - 100;
                    redQueenEllipseK[k].x2 = redQueenEllipseK[k].x2 + 100;
                    redQueenBaseK[k].y1 = redQueenBaseK[k].y1 - 100;
                    redQueenBaseK[k].x1 = redQueenBaseK[k].x1 + 100;
                    redQueenBaseK[k].y2 = redQueenBaseK[k].y2 - 100;
                    redQueenBaseK[k].x2 = redQueenBaseK[k].x2 + 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            for(int p=0; p<8; p++) {
                                if(p != k &&
                                   redQueenSquareK[p].posX == redQueenSquareK[k].posX &&
                                   redQueenSquareK[p].posY == redQueenSquareK[k].posY) {
                                    redQueenSquareK[k].failedpath = TRUE;
                                    return TRUE;
                                }
                            }
                            if(redQueenSquare.posX == redQueenSquareK[k].posX &&
                               redQueenSquare.posY == redQueenSquareK[k].posY) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redPawnsBase[s].posY == redQueenSquareK[k].posY &&
                               redPawnsBase[s].posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redBishop1Square.posY == redQueenSquareK[k].posY &&
                               redBishop1Square.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redBishop2Square.posY == redQueenSquareK[k].posY &&
                               redBishop2Square.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                               redKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                               redKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook1Rectangle1.posY == redQueenSquareK[k].posY &&
                               redRook1Rectangle1.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook2Rectangle1.posY == redQueenSquareK[k].posY &&
                               redRook2Rectangle1.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKingSquare.posY == redQueenSquareK[k].posY &&
                               redKingSquare.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            for(int r=0; r<8; r++) {
                                if(WM_RBUTTONDOWN == msg || 1 == 1)
                                if(greyQueenSquareK[r].posY == redQueenSquareK[k].posY &&
                                   greyQueenSquareK[r].posX == redQueenSquareK[k].posX) {
                                    greyQueenSquareK[r].posX = -1000;
                                    greyQueenSquareK[r].x1 = -1000;
                                    greyQueenSquareK[r].x2 = -1000;
                                    greyQueenBaseK[r].x1 = -1000;
                                    greyQueenBaseK[r].x2 = -1000;
                                    greyQueenEllipseK[r].x1 = -1000;
                                    greyQueenEllipseK[r].x2 = -1000;
                                    greyQueenRectangle1K[r].x1 = -1000;
                                    greyQueenRectangle1K[r].x2 = -1000;
                                    greyQueenRectangle2K[r].x1 = -1000;
                                    greyQueenRectangle2K[r].x2 = -1000;
                                    greyQueenRectangle3K[r].x1 = -1000;
                                    greyQueenRectangle3K[r].x2 = -1000;
                                }
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyQueenSquare.posY == redQueenSquareK[k].posY &&
                               greyQueenSquare.posX == redQueenSquareK[k].posX) {
                                greyQueenSquare.posX = -1000;
                                greyQueenSquare.x1 = -1000;
                                greyQueenSquare.x2 = -1000;
                                greyQueenBase.x1 = -1000;
                                greyQueenBase.x2 = -1000;
                                greyQueenEllipse.x1 = -1000;
                                greyQueenEllipse.x2 = -1000;
                                greyQueenRectangle1.x1 = -1000;
                                greyQueenRectangle1.x2 = -1000;
                                greyQueenRectangle2.x1 = -1000;
                                greyQueenRectangle2.x2 = -1000;
                                greyQueenRectangle3.x1 = -1000;
                                greyQueenRectangle3.x2 = -1000;
                            }
                            if(greyPawnsBase[s].posY == redQueenSquareK[k].posY &&
                               greyPawnsBase[s].posX == redQueenSquareK[k].posX) {
                                greyPawnsBase[s].posX = -1000;
                                greyPawnsBase[s].x1 = -1000;
                                greyPawnsBase[s].x2 = -1000;
                                greyPawnsEllipse[s].x1 = -1000;
                                greyPawnsEllipse[s].x2 = -1000;
                            }
                            if(greyKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                               greyKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                                greyKnight1Rectangle1.posX = -1000;
                                greyKnight1Rectangle1.x1 = -1000;
                                greyKnight1Rectangle1.x2 = -1000;
                                greyKnight1Rectangle2.x1 = -1000;
                                greyKnight1Rectangle2.x2 = -1000;
                                greyKnight1Base.x1 = -1000;
                                greyKnight1Base.x2 = -1000;
                                greyKnight1Ellipse.x1 = -1000;
                                greyKnight1Ellipse.x2 = -1000;
                            }
                            if(greyKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                               greyKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                                greyKnight2Rectangle1.posX = -1000;
                                greyKnight2Rectangle1.x1 = -1000;
                                greyKnight2Rectangle1.x2 = -1000;
                                greyKnight2Rectangle2.x1 = -1000;
                                greyKnight2Rectangle2.x2 = -1000;
                                greyKnight2Base.x1 = -1000;
                                greyKnight2Base.x2 = -1000;
                                greyKnight2Ellipse.x1 = -1000;
                                greyKnight2Ellipse.x2 = -1000;
                            }
                            if(greyBishop1Square.posY == redQueenSquareK[k].posY &&
                               greyBishop1Square.posX == redQueenSquareK[k].posX) {
                                greyBishop1Square.posX = -1000;
                                greyBishop1Square.x1 = -1000;
                                greyBishop1Square.x2 = -1000;
                                greyBishop1Rectangle.x1 = -1000;
                                greyBishop1Rectangle.x2 = -1000;
                                greyBishop1Base.x1 = -1000;
                                greyBishop1Base.x2 = -1000;
                                greyBishop1Ellipse.x1 = -1000;
                                greyBishop1Ellipse.x2 = -1000;
                            }
                            if(greyBishop2Square.posY == redQueenSquareK[k].posY &&
                               greyBishop2Square.posX == redQueenSquareK[k].posX) {
                                greyBishop2Square.posX = -1000;
                                greyBishop2Square.x1 = -1000;
                                greyBishop2Square.x2 = -1000;
                                greyBishop2Rectangle.x1 = -1000;
                                greyBishop2Rectangle.x2 = -1000;
                                greyBishop2Base.x1 = -1000;
                                greyBishop2Base.x2 = -1000;
                                greyBishop2Ellipse.x1 = -1000;
                                greyBishop2Ellipse.x2 = -1000;
                            }
                            if(greyRook1Rectangle1.posY == redQueenSquareK[k].posY &&
                               greyRook1Rectangle1.posX == redQueenSquareK[k].posX) {
                                greyRook1Rectangle1.posX = -1000;
                                greyRook1Rectangle1.x1 = -1000;
                                greyRook1Rectangle1.x2 = -1000;
                                greyRook1Rectangle2.x1 = -1000;
                                greyRook1Rectangle2.x2 = -1000;
                                greyRook1Base.x1 = -1000;
                                greyRook1Base.x2 = -1000;
                                greyRook1Ellipse.x1 = -1000;
                                greyRook1Ellipse.x2 = -1000;
                            }
                            if(greyRook2Rectangle1.posY == redQueenSquareK[k].posY &&
                               greyRook2Rectangle1.posX == redQueenSquareK[k].posX) {
                                greyRook2Rectangle1.posX = -1000;
                                greyRook2Rectangle1.x1 = -1000;
                                greyRook2Rectangle1.x2 = -1000;
                                greyRook2Rectangle2.x1 = -1000;
                                greyRook2Rectangle2.x2 = -1000;
                                greyRook2Base.x1 = -1000;
                                greyRook2Base.x2 = -1000;
                                greyRook2Ellipse.x1 = -1000;
                                greyRook2Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyBishop1Square.posY == redQueenSquareK[k].posY &&
                               greyBishop1Square.posX == redQueenSquareK[k].posX) {
                                greyBishop1Square.posX = -1000;
                                greyBishop1Square.x1 = -1000;
                                greyBishop1Square.x2 = -1000;
                                greyBishop1Rectangle.x1 = -1000;
                                greyBishop1Rectangle.x2 = -1000;
                                greyBishop1Base.x1 = -1000;
                                greyBishop1Base.x2 = -1000;
                                greyBishop1Ellipse.x1 = -1000;
                                greyBishop1Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyBishop2Square.posY == redQueenSquareK[k].posY &&
                               greyBishop2Square.posX == redQueenSquareK[k].posX) {
                                greyBishop2Square.posX = -1000;
                                greyBishop2Square.x1 = -1000;
                                greyBishop2Square.x2 = -1000;
                                greyBishop2Rectangle.x1 = -1000;
                                greyBishop2Rectangle.x2 = -1000;
                                greyBishop2Base.x1 = -1000;
                                greyBishop2Base.x2 = -1000;
                                greyBishop2Ellipse.x1 = -1000;
                                greyBishop2Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                               greyKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                                greyKnight1Rectangle1.posX = -1000;
                                greyKnight1Rectangle1.x1 = -1000;
                                greyKnight1Rectangle1.x2 = -1000;
                                greyKnight1Rectangle2.x1 = -1000;
                                greyKnight1Rectangle2.x2 = -1000;
                                greyKnight1Base.x1 = -1000;
                                greyKnight1Base.x2 = -1000;
                                greyKnight1Ellipse.x1 = -1000;
                                greyKnight1Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                               greyKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                                greyKnight2Rectangle1.posX = -1000;
                                greyKnight2Rectangle1.x1 = -1000;
                                greyKnight2Rectangle1.x2 = -1000;
                                greyKnight2Rectangle2.x1 = -1000;
                                greyKnight2Rectangle2.x2 = -1000;
                                greyKnight2Base.x1 = -1000;
                                greyKnight2Base.x2 = -1000;
                                greyKnight2Ellipse.x1 = -1000;
                                greyKnight2Ellipse.x2 = -1000;
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        for(int h=0; h<8; h++) {
                            if(h != k &&
                               redQueenSquareK[h].posY == redQueenSquareK[k].posY - 100 &&
                               redQueenSquareK[h].posX == redQueenSquareK[k].posX + 100) {
                                redQueenSquareK[k].failedpath = TRUE;
                                flag = TRUE;
                            }
                        }
                        for(int h=0; h<8; h++) {
                            if(h != k &&
                               greyQueenSquareK[h].posY == redQueenSquareK[k].posY - 100 &&
                               greyQueenSquareK[h].posX == redQueenSquareK[k].posX + 100) {
                                redQueenSquareK[k].failedpath = TRUE;
                                flag = TRUE;
                            }
                        }
                        if(redQueenSquare.posY == redQueenSquareK[k].posY - 100 &&
                           redQueenSquare.posX == redQueenSquareK[k].posX + 100) {
                            redQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(redPawnsBase[s].posY == redQueenSquareK[k].posY - 100 &&
                           redPawnsBase[s].posX == redQueenSquareK[k].posX + 100) {
                            redQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == redQueenSquareK[k].posY - 100 &&
                           greyPawnsBase[s].posX == redQueenSquareK[k].posX + 100) {
                            redQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redBishop1Square.posY == redQueenSquareK[k].posY - 100 &&
                       redBishop1Square.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == redQueenSquareK[k].posY - 100 &&
                       redBishop2Square.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                       redRook1Rectangle1.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                       redRook2Rectangle1.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                       redKnight1Rectangle1.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                       redKnight2Rectangle1.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == redQueenSquareK[k].posY - 100 &&
                       redBishop1Square.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == redQueenSquareK[k].posY - 100 &&
                       redBishop2Square.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                       greyRook1Rectangle1.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                       greyRook2Rectangle1.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                       greyKnight1Rectangle1.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == redQueenSquareK[k].posY - 100 &&
                       greyKnight2Rectangle1.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == redQueenSquareK[k].posY + 100 &&
                       greyBishop1Square.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == redQueenSquareK[k].posY + 100 &&
                       greyBishop2Square.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == redQueenSquareK[k].posY + 100 &&
                       greyQueenSquare.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        redQueenSquareK[k].posY = redQueenSquareK[k].posY - 100;
                        redQueenSquareK[k].y1 = redQueenSquareK[k].y1 - 100;
                        redQueenSquareK[k].y2 = redQueenSquareK[k].y2 - 100;
                        redQueenRectangle1K[k].y1 = redQueenRectangle1K[k].y1 - 100;
                        redQueenRectangle1K[k].y2 = redQueenRectangle1K[k].y2 - 100;
                        redQueenRectangle2K[k].y1 = redQueenRectangle2K[k].y1 - 100;
                        redQueenRectangle2K[k].y2 = redQueenRectangle2K[k].y2 - 100;
                        redQueenRectangle3K[k].y1 = redQueenRectangle3K[k].y1 - 100;
                        redQueenRectangle3K[k].y2 = redQueenRectangle3K[k].y2 - 100;
                        redQueenEllipseK[k].y1 = redQueenEllipseK[k].y1 - 100;
                        redQueenEllipseK[k].y2 = redQueenEllipseK[k].y2 - 100;
                        redQueenBaseK[k].y1 = redQueenBaseK[k].y1 - 100;
                        redQueenBaseK[k].y2 = redQueenBaseK[k].y2 - 100;
                        redQueenSquareK[k].posX = redQueenSquareK[k].posX + 100;
                        redQueenSquareK[k].x1 = redQueenSquareK[k].x1 + 100;
                        redQueenSquareK[k].x2 = redQueenSquareK[k].x2 + 100;
                        redQueenRectangle1K[k].x1 = redQueenRectangle1K[k].x1 + 100;
                        redQueenRectangle1K[k].x2 = redQueenRectangle1K[k].x2 + 100;
                        redQueenRectangle2K[k].x1 = redQueenRectangle2K[k].x1 + 100;
                        redQueenRectangle2K[k].x2 = redQueenRectangle2K[k].x2 + 100;
                        redQueenRectangle3K[k].x1 = redQueenRectangle3K[k].x1 + 100;
                        redQueenRectangle3K[k].x2 = redQueenRectangle3K[k].x2 + 100;
                        redQueenEllipseK[k].x1 = redQueenEllipseK[k].x1 + 100;
                        redQueenEllipseK[k].x2 = redQueenEllipseK[k].x2 + 100;
                        redQueenBaseK[k].x1 = redQueenBaseK[k].x1 + 100;
                        redQueenBaseK[k].x2 = redQueenBaseK[k].x2 + 100;
                    }

                    return flag;
                }
            }

            else {

                redQueenSquareK[k].failedpath = TRUE;
                return TRUE;
            }
        }
    } else if(pos1 > 0) {
        if(ps1 < 0) {
            boolean f = FALSE;
            if(pos1 > 100 && ps1 < -100) {
                f = moveRedQueenDiagonallyK(msg, j, i, pos1 - 100, ps1 + 100, pos2, ps2, k);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    redQueenSquareK[k].posY = redQueenSquareK[k].posY + 100;
                    redQueenSquareK[k].posX = redQueenSquareK[k].posX - 100;
                    redQueenSquareK[k].y1 = redQueenSquareK[k].y1 + 100;
                    redQueenSquareK[k].x1 = redQueenSquareK[k].x1 - 100;
                    redQueenSquareK[k].y2 = redQueenSquareK[k].y2 + 100;
                    redQueenSquareK[k].x2 = redQueenSquareK[k].x2 - 100;
                    redQueenRectangle1K[k].y1 = redQueenRectangle1K[k].y1 + 100;
                    redQueenRectangle1K[k].x1 = redQueenRectangle1K[k].x1 - 100;
                    redQueenRectangle1K[k].y2 = redQueenRectangle1K[k].y2 + 100;
                    redQueenRectangle1K[k].x2 = redQueenRectangle1K[k].x2 - 100;
                    redQueenRectangle2K[k].y1 = redQueenRectangle2K[k].y1 + 100;
                    redQueenRectangle2K[k].x1 = redQueenRectangle2K[k].x1 - 100;
                    redQueenRectangle2K[k].y2 = redQueenRectangle2K[k].y2 + 100;
                    redQueenRectangle2K[k].x2 = redQueenRectangle2K[k].x2 - 100;
                    redQueenRectangle3K[k].y1 = redQueenRectangle3K[k].y1 + 100;
                    redQueenRectangle3K[k].x1 = redQueenRectangle3K[k].x1 - 100;
                    redQueenRectangle3K[k].y2 = redQueenRectangle3K[k].y2 + 100;
                    redQueenRectangle3K[k].x2 = redQueenRectangle3K[k].x2 - 100;
                    redQueenEllipseK[k].y1 = redQueenEllipseK[k].y1 + 100;
                    redQueenEllipseK[k].x1 = redQueenEllipseK[k].x1 - 100;
                    redQueenEllipseK[k].y2 = redQueenEllipseK[k].y2 + 100;
                    redQueenEllipseK[k].x2 = redQueenEllipseK[k].x2 - 100;
                    redQueenBaseK[k].y1 = redQueenBaseK[k].y1 + 100;
                    redQueenBaseK[k].x1 = redQueenBaseK[k].x1 - 100;
                    redQueenBaseK[k].y2 = redQueenBaseK[k].y2 + 100;
                    redQueenBaseK[k].x2 = redQueenBaseK[k].x2 - 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            for(int p=0; p<8; p++) {
                                if(p != k &&
                                   redQueenSquareK[p].posY == redQueenSquareK[k].posY &&
                                   redQueenSquareK[p].posX == redQueenSquareK[k].posX) {
                                    redQueenSquareK[k].failedpath = TRUE;
                                    return TRUE;
                                }
                            }
                            for(int p=0; p<8; p++) {
                                if(redQueenSquareK[p].posY == redQueenSquareK[k].posY &&
                                   redQueenSquareK[p].posX == redQueenSquareK[k].posX) {
                                    redQueenSquareK[k].failedpath = TRUE;
                                    return TRUE;
                                }
                            }
                            if(redQueenSquare.posY == redQueenSquareK[k].posY &&
                               redQueenSquare.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redPawnsBase[s].posY == redQueenSquareK[k].posY &&
                               redPawnsBase[s].posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redBishop1Square.posY == redQueenSquareK[k].posY &&
                               redBishop1Square.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redBishop2Square.posY == redQueenSquareK[k].posY &&
                               redBishop2Square.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                               redKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                               redKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook1Rectangle1.posY == redQueenSquareK[k].posY &&
                               redRook1Rectangle1.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook2Rectangle1.posY == redQueenSquareK[k].posY &&
                               redRook2Rectangle1.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKingSquare.posY == redQueenSquareK[k].posY &&
                               redKingSquare.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            for(int r=0; r<8; r++) {
                                if(WM_RBUTTONDOWN == msg || 1 == 1)
                                if(greyQueenSquareK[r].posY == redQueenSquareK[k].posY &&
                                   greyQueenSquareK[r].posX == redQueenSquareK[k].posX) {
                                    greyQueenSquareK[r].posX = -1000;
                                    greyQueenSquareK[r].x1 = -1000;
                                    greyQueenSquareK[r].x2 = -1000;
                                    greyQueenBaseK[r].x1 = -1000;
                                    greyQueenBaseK[r].x2 = -1000;
                                    greyQueenEllipseK[r].x1 = -1000;
                                    greyQueenEllipseK[r].x2 = -1000;
                                    greyQueenRectangle1K[r].x1 = -1000;
                                    greyQueenRectangle1K[r].x2 = -1000;
                                    greyQueenRectangle2K[r].x1 = -1000;
                                    greyQueenRectangle2K[r].x2 = -1000;
                                    greyQueenRectangle3K[r].x1 = -1000;
                                    greyQueenRectangle3K[r].x2 = -1000;
                                }
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyQueenSquare.posY == redQueenSquareK[k].posY &&
                               greyQueenSquare.posX == redQueenSquareK[k].posX) {
                                greyQueenSquare.posX = -1000;
                                greyQueenSquare.x1 = -1000;
                                greyQueenSquare.x2 = -1000;
                                greyQueenBase.x1 = -1000;
                                greyQueenBase.x2 = -1000;
                                greyQueenEllipse.x1 = -1000;
                                greyQueenEllipse.x2 = -1000;
                                greyQueenRectangle1.x1 = -1000;
                                greyQueenRectangle1.x2 = -1000;
                                greyQueenRectangle2.x1 = -1000;
                                greyQueenRectangle2.x2 = -1000;
                                greyQueenRectangle3.x1 = -1000;
                                greyQueenRectangle3.x2 = -1000;
                            }
                            if(greyPawnsBase[s].posY == redQueenSquareK[k].posY &&
                               greyPawnsBase[s].posX == redQueenSquareK[k].posX) {
                                greyPawnsBase[s].posX = -1000;
                                greyPawnsBase[s].x1 = -1000;
                                greyPawnsBase[s].x2 = -1000;
                                greyPawnsEllipse[s].x1 = -1000;
                                greyPawnsEllipse[s].x2 = -1000;
                            }
                            if(greyKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                               greyKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                                greyKnight1Rectangle1.posX = -1000;
                                greyKnight1Rectangle1.x1 = -1000;
                                greyKnight1Rectangle1.x2 = -1000;
                                greyKnight1Rectangle2.x1 = -1000;
                                greyKnight1Rectangle2.x2 = -1000;
                                greyKnight1Base.x1 = -1000;
                                greyKnight1Base.x2 = -1000;
                                greyKnight1Ellipse.x1 = -1000;
                                greyKnight1Ellipse.x2 = -1000;
                            }
                            if(greyKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                               greyKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                                greyKnight2Rectangle1.posX = -1000;
                                greyKnight2Rectangle1.x1 = -1000;
                                greyKnight2Rectangle1.x2 = -1000;
                                greyKnight2Rectangle2.x1 = -1000;
                                greyKnight2Rectangle2.x2 = -1000;
                                greyKnight2Base.x1 = -1000;
                                greyKnight2Base.x2 = -1000;
                                greyKnight2Ellipse.x1 = -1000;
                                greyKnight2Ellipse.x2 = -1000;
                            }
                            if(greyBishop1Square.posY == redQueenSquareK[k].posY &&
                               greyBishop1Square.posX == redQueenSquareK[k].posX) {
                                greyBishop1Square.posX = -1000;
                                greyBishop1Square.x1 = -1000;
                                greyBishop1Square.x2 = -1000;
                                greyBishop1Rectangle.x1 = -1000;
                                greyBishop1Rectangle.x2 = -1000;
                                greyBishop1Base.x1 = -1000;
                                greyBishop1Base.x2 = -1000;
                                greyBishop1Ellipse.x1 = -1000;
                                greyBishop1Ellipse.x2 = -1000;
                            }
                            if(greyBishop2Square.posY == redQueenSquareK[k].posY &&
                               greyBishop2Square.posX == redQueenSquareK[k].posX) {
                                greyBishop2Square.posX = -1000;
                                greyBishop2Square.x1 = -1000;
                                greyBishop2Square.x2 = -1000;
                                greyBishop2Rectangle.x1 = -1000;
                                greyBishop2Rectangle.x2 = -1000;
                                greyBishop2Base.x1 = -1000;
                                greyBishop2Base.x2 = -1000;
                                greyBishop2Ellipse.x1 = -1000;
                                greyBishop2Ellipse.x2 = -1000;
                            }
                            if(greyRook1Rectangle1.posY == redQueenSquareK[k].posY &&
                               greyRook1Rectangle1.posX == redQueenSquareK[k].posX) {
                                greyRook1Rectangle1.posX = -1000;
                                greyRook1Rectangle1.x1 = -1000;
                                greyRook1Rectangle1.x2 = -1000;
                                greyRook1Rectangle2.x1 = -1000;
                                greyRook1Rectangle2.x2 = -1000;
                                greyRook1Base.x1 = -1000;
                                greyRook1Base.x2 = -1000;
                                greyRook1Ellipse.x1 = -1000;
                                greyRook1Ellipse.x2 = -1000;
                            }
                            if(greyRook2Rectangle1.posY == redQueenSquareK[k].posY &&
                               greyRook2Rectangle1.posX == redQueenSquareK[k].posX) {
                                greyRook2Rectangle1.posX = -1000;
                                greyRook2Rectangle1.x1 = -1000;
                                greyRook2Rectangle1.x2 = -1000;
                                greyRook2Rectangle2.x1 = -1000;
                                greyRook2Rectangle2.x2 = -1000;
                                greyRook2Base.x1 = -1000;
                                greyRook2Base.x2 = -1000;
                                greyRook2Ellipse.x1 = -1000;
                                greyRook2Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyBishop1Square.posY == redQueenSquareK[k].posY &&
                               greyBishop1Square.posX == redQueenSquareK[k].posX) {
                                greyBishop1Square.posX = -1000;
                                greyBishop1Square.x1 = -1000;
                                greyBishop1Square.x2 = -1000;
                                greyBishop1Rectangle.x1 = -1000;
                                greyBishop1Rectangle.x2 = -1000;
                                greyBishop1Base.x1 = -1000;
                                greyBishop1Base.x2 = -1000;
                                greyBishop1Ellipse.x1 = -1000;
                                greyBishop1Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyBishop2Square.posY == redQueenSquareK[k].posY &&
                               greyBishop2Square.posX == redQueenSquareK[k].posX) {
                                greyBishop2Square.posX = -1000;
                                greyBishop2Square.x1 = -1000;
                                greyBishop2Square.x2 = -1000;
                                greyBishop2Rectangle.x1 = -1000;
                                greyBishop2Rectangle.x2 = -1000;
                                greyBishop2Base.x1 = -1000;
                                greyBishop2Base.x2 = -1000;
                                greyBishop2Ellipse.x1 = -1000;
                                greyBishop2Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                               greyKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                                greyKnight1Rectangle1.posX = -1000;
                                greyKnight1Rectangle1.x1 = -1000;
                                greyKnight1Rectangle1.x2 = -1000;
                                greyKnight1Rectangle2.x1 = -1000;
                                greyKnight1Rectangle2.x2 = -1000;
                                greyKnight1Base.x1 = -1000;
                                greyKnight1Base.x2 = -1000;
                                greyKnight1Ellipse.x1 = -1000;
                                greyKnight1Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                               greyKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                                greyKnight2Rectangle1.posX = -1000;
                                greyKnight2Rectangle1.x1 = -1000;
                                greyKnight2Rectangle1.x2 = -1000;
                                greyKnight2Rectangle2.x1 = -1000;
                                greyKnight2Rectangle2.x2 = -1000;
                                greyKnight2Base.x1 = -1000;
                                greyKnight2Base.x2 = -1000;
                                greyKnight2Ellipse.x1 = -1000;
                                greyKnight2Ellipse.x2 = -1000;
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        for(int p=0; p<8; p++) {
                            if(p != k &&
                               redQueenSquareK[p].posY == redQueenSquareK[k].posY + 100 &&
                               redQueenSquareK[p].posX == redQueenSquareK[k].posX - 100) {
                                redQueenSquareK[k].failedpath = TRUE;
                                flag = TRUE;
                            }
                            if(p != k &&
                               greyQueenSquareK[p].posY == redQueenSquareK[k].posY + 100 &&
                               greyQueenSquareK[p].posX == redQueenSquareK[k].posX - 100) {
                                redQueenSquareK[k].failedpath = TRUE;
                                flag = TRUE;
                            }
                        }
                        if(redPawnsBase[s].posY == redQueenSquareK[k].posY + 100 &&
                           redPawnsBase[s].posX == redQueenSquareK[k].posX - 100) {
                            redQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == redQueenSquareK[k].posY + 100 &&
                           greyPawnsBase[s].posX == redQueenSquareK[k].posX - 100) {
                            redQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redQueenSquare.posY == redQueenSquareK[k].posY + 100 &&
                       redQueenSquare.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == redQueenSquareK[k].posY + 100 &&
                       greyQueenSquare.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == redQueenSquareK[k].posY + 100 &&
                       redBishop1Square.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == redQueenSquareK[k].posY + 100 &&
                       redBishop2Square.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == redQueenSquareK[k].posY + 100 &&
                       redRook1Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == redQueenSquareK[k].posY + 100 &&
                       redRook2Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == redQueenSquareK[k].posY + 100 &&
                       redKnight1Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == redQueenSquareK[k].posY + 100 &&
                       redKnight2Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == redQueenSquareK[k].posY + 100 &&
                       redBishop1Square.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == redQueenSquareK[k].posY + 100 &&
                       redBishop2Square.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == redQueenSquareK[k].posY + 100 &&
                       greyRook1Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == redQueenSquareK[k].posY + 100 &&
                       greyRook2Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == redQueenSquareK[k].posY + 100 &&
                       greyKnight1Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == redQueenSquareK[k].posY + 100 &&
                       greyKnight2Rectangle1.posX == redQueenSquareK[k].posX - 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == redQueenSquareK[k].posY + 100 &&
                       greyBishop1Square.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == redQueenSquareK[k].posY + 100 &&
                       greyBishop2Square.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == redQueenSquareK[k].posY + 100 &&
                       greyQueenSquare.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        redQueenSquareK[k].posY = redQueenSquareK[k].posY + 100;
                        redQueenSquareK[k].y1 = redQueenSquareK[k].y1 + 100;
                        redQueenSquareK[k].y2 = redQueenSquareK[k].y2 + 100;
                        redQueenRectangle1K[k].y1 = redQueenRectangle1K[k].y1 + 100;
                        redQueenRectangle1K[k].y2 = redQueenRectangle1K[k].y2 + 100;
                        redQueenRectangle2K[k].y1 = redQueenRectangle2K[k].y1 + 100;
                        redQueenRectangle2K[k].y2 = redQueenRectangle2K[k].y2 + 100;
                        redQueenRectangle3K[k].y1 = redQueenRectangle3K[k].y1 + 100;
                        redQueenRectangle3K[k].y2 = redQueenRectangle3K[k].y2 + 100;
                        redQueenEllipseK[k].y1 = redQueenEllipseK[k].y1 + 100;
                        redQueenEllipseK[k].y2 = redQueenEllipseK[k].y2 + 100;
                        redQueenBaseK[k].y1 = redQueenBaseK[k].y1 + 100;
                        redQueenBaseK[k].y2 = redQueenBaseK[k].y2 + 100;
                        redQueenSquareK[k].posX = redQueenSquareK[k].posX - 100;
                        redQueenSquareK[k].x1 = redQueenSquareK[k].x1 - 100;
                        redQueenSquareK[k].x2 = redQueenSquareK[k].x2 - 100;
                        redQueenRectangle1K[k].x1 = redQueenRectangle1K[k].x1 - 100;
                        redQueenRectangle1K[k].x2 = redQueenRectangle1K[k].x2 - 100;
                        redQueenRectangle2K[k].x1 = redQueenRectangle2K[k].x1 - 100;
                        redQueenRectangle2K[k].x2 = redQueenRectangle2K[k].x2 - 100;
                        redQueenRectangle3K[k].x1 = redQueenRectangle3K[k].x1 - 100;
                        redQueenRectangle3K[k].x2 = redQueenRectangle3K[k].x2 - 100;
                        redQueenEllipseK[k].x1 = redQueenEllipseK[k].x1 - 100;
                        redQueenEllipseK[k].x2 = redQueenEllipseK[k].x2 - 100;
                        redQueenBaseK[k].x1 = redQueenBaseK[k].x1 - 100;
                        redQueenBaseK[k].x2 = redQueenBaseK[k].x2 - 100;
                    }

                    return flag;
                }
            }

            else {

                redQueenSquareK[k].failedpath = TRUE;
                return TRUE;
            }
        }
        if(ps1 > 0) {
            boolean f = FALSE;
            if(pos1 > 100 && ps1 > 100) {
                f = moveRedQueenDiagonallyK(msg, j, i, pos1 - 100, ps1 - 100, pos2, ps2, k);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    redQueenSquareK[k].posY = redQueenSquareK[k].posY + 100;
                    redQueenSquareK[k].posX = redQueenSquareK[k].posX + 100;
                    redQueenSquareK[k].y1 = redQueenSquareK[k].y1 + 100;
                    redQueenSquareK[k].x1 = redQueenSquareK[k].x1 + 100;
                    redQueenSquareK[k].y2 = redQueenSquareK[k].y2 + 100;
                    redQueenSquareK[k].x2 = redQueenSquareK[k].x2 + 100;
                    redQueenRectangle1K[k].y1 = redQueenRectangle1K[k].y1 + 100;
                    redQueenRectangle1K[k].x1 = redQueenRectangle1K[k].x1 + 100;
                    redQueenRectangle1K[k].y2 = redQueenRectangle1K[k].y2 + 100;
                    redQueenRectangle1K[k].x2 = redQueenRectangle1K[k].x2 + 100;
                    redQueenRectangle2K[k].y1 = redQueenRectangle2K[k].y1 + 100;
                    redQueenRectangle2K[k].x1 = redQueenRectangle2K[k].x1 + 100;
                    redQueenRectangle2K[k].y2 = redQueenRectangle2K[k].y2 + 100;
                    redQueenRectangle2K[k].x2 = redQueenRectangle2K[k].x2 + 100;
                    redQueenRectangle3K[k].y1 = redQueenRectangle3K[k].y1 + 100;
                    redQueenRectangle3K[k].x1 = redQueenRectangle3K[k].x1 + 100;
                    redQueenRectangle3K[k].y2 = redQueenRectangle3K[k].y2 + 100;
                    redQueenRectangle3K[k].x2 = redQueenRectangle3K[k].x2 + 100;
                    redQueenEllipseK[k].y1 = redQueenEllipseK[k].y1 + 100;
                    redQueenEllipseK[k].x1 = redQueenEllipseK[k].x1 + 100;
                    redQueenEllipseK[k].y2 = redQueenEllipseK[k].y2 + 100;
                    redQueenEllipseK[k].x2 = redQueenEllipseK[k].x2 + 100;
                    redQueenBaseK[k].y1 = redQueenBaseK[k].y1 + 100;
                    redQueenBaseK[k].x1 = redQueenBaseK[k].x1 + 100;
                    redQueenBaseK[k].y2 = redQueenBaseK[k].y2 + 100;
                    redQueenBaseK[k].x2 = redQueenBaseK[k].x2 + 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            for(int p=0; p<8; p++) {
                                if(p != k &&
                                   redQueenSquareK[p].posY == redQueenSquareK[k].posY &&
                                   redQueenSquareK[p].posX == redQueenSquareK[k].posX) {
                                    redQueenSquareK[k].failedpath = TRUE;
                                    return TRUE;
                                }
                                if(p != k &&
                                   greyQueenSquareK[p].posY == redQueenSquareK[k].posY &&
                                   greyQueenSquareK[p].posX == redQueenSquareK[k].posX) {
                                    redQueenSquareK[k].failedpath = TRUE;
                                    return TRUE;
                                }
                            }
                            if(redQueenSquare.posY == redQueenSquareK[k].posY &&
                               redQueenSquare.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redPawnsBase[s].posY == redQueenSquareK[k].posY &&
                               redPawnsBase[s].posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redBishop1Square.posY == redQueenSquareK[k].posY &&
                               redBishop1Square.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redBishop2Square.posY == redQueenSquareK[k].posY &&
                               redBishop2Square.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                               redKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                               redKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook1Rectangle1.posY == redQueenSquareK[k].posY &&
                               redRook1Rectangle1.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook2Rectangle1.posY == redQueenSquareK[k].posY &&
                               redRook2Rectangle1.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKingSquare.posY == redQueenSquareK[k].posY &&
                               redKingSquare.posX == redQueenSquareK[k].posX) {
                                redQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            for(int r=0; r<8; r++) {
                                if(WM_RBUTTONDOWN == msg || 1 == 1)
                                if(greyQueenSquareK[r].posY == redQueenSquareK[k].posY &&
                                   greyQueenSquareK[r].posX == redQueenSquareK[k].posX) {
                                    greyQueenSquareK[r].posX = -1000;
                                    greyQueenSquareK[r].x1 = -1000;
                                    greyQueenSquareK[r].x2 = -1000;
                                    greyQueenBaseK[r].x1 = -1000;
                                    greyQueenBaseK[r].x2 = -1000;
                                    greyQueenEllipseK[r].x1 = -1000;
                                    greyQueenEllipseK[r].x2 = -1000;
                                    greyQueenRectangle1K[r].x1 = -1000;
                                    greyQueenRectangle1K[r].x2 = -1000;
                                    greyQueenRectangle2K[r].x1 = -1000;
                                    greyQueenRectangle2K[r].x2 = -1000;
                                    greyQueenRectangle3K[r].x1 = -1000;
                                    greyQueenRectangle3K[r].x2 = -1000;
                                }
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyQueenSquare.posY == redQueenSquareK[k].posY &&
                               greyQueenSquare.posX == redQueenSquareK[k].posX) {
                                greyQueenSquare.posX = -1000;
                                greyQueenSquare.x1 = -1000;
                                greyQueenSquare.x2 = -1000;
                                greyQueenBase.x1 = -1000;
                                greyQueenBase.x2 = -1000;
                                greyQueenEllipse.x1 = -1000;
                                greyQueenEllipse.x2 = -1000;
                                greyQueenRectangle1.x1 = -1000;
                                greyQueenRectangle1.x2 = -1000;
                                greyQueenRectangle2.x1 = -1000;
                                greyQueenRectangle2.x2 = -1000;
                                greyQueenRectangle3.x1 = -1000;
                                greyQueenRectangle3.x2 = -1000;
                            }
                            if(greyPawnsBase[s].posY == redQueenSquareK[k].posY &&
                               greyPawnsBase[s].posX == redQueenSquareK[k].posX) {
                                greyPawnsBase[s].posX = -1000;
                                greyPawnsBase[s].x1 = -1000;
                                greyPawnsBase[s].x2 = -1000;
                                greyPawnsEllipse[s].x1 = -1000;
                                greyPawnsEllipse[s].x2 = -1000;
                            }
                            if(greyKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                               greyKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                                greyKnight1Rectangle1.posX = -1000;
                                greyKnight1Rectangle1.x1 = -1000;
                                greyKnight1Rectangle1.x2 = -1000;
                                greyKnight1Rectangle2.x1 = -1000;
                                greyKnight1Rectangle2.x2 = -1000;
                                greyKnight1Base.x1 = -1000;
                                greyKnight1Base.x2 = -1000;
                                greyKnight1Ellipse.x1 = -1000;
                                greyKnight1Ellipse.x2 = -1000;
                            }
                            if(greyKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                               greyKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                                greyKnight2Rectangle1.posX = -1000;
                                greyKnight2Rectangle1.x1 = -1000;
                                greyKnight2Rectangle1.x2 = -1000;
                                greyKnight2Rectangle2.x1 = -1000;
                                greyKnight2Rectangle2.x2 = -1000;
                                greyKnight2Base.x1 = -1000;
                                greyKnight2Base.x2 = -1000;
                                greyKnight2Ellipse.x1 = -1000;
                                greyKnight2Ellipse.x2 = -1000;
                            }
                            if(greyBishop1Square.posY == redQueenSquareK[k].posY &&
                               greyBishop1Square.posX == redQueenSquareK[k].posX) {
                                greyBishop1Square.posX = -1000;
                                greyBishop1Square.x1 = -1000;
                                greyBishop1Square.x2 = -1000;
                                greyBishop1Rectangle.x1 = -1000;
                                greyBishop1Rectangle.x2 = -1000;
                                greyBishop1Base.x1 = -1000;
                                greyBishop1Base.x2 = -1000;
                                greyBishop1Ellipse.x1 = -1000;
                                greyBishop1Ellipse.x2 = -1000;
                            }
                            if(greyBishop2Square.posY == redQueenSquareK[k].posY &&
                               greyBishop2Square.posX == redQueenSquareK[k].posX) {
                                greyBishop2Square.posX = -1000;
                                greyBishop2Square.x1 = -1000;
                                greyBishop2Square.x2 = -1000;
                                greyBishop2Rectangle.x1 = -1000;
                                greyBishop2Rectangle.x2 = -1000;
                                greyBishop2Base.x1 = -1000;
                                greyBishop2Base.x2 = -1000;
                                greyBishop2Ellipse.x1 = -1000;
                                greyBishop2Ellipse.x2 = -1000;
                            }
                            if(greyRook1Rectangle1.posY == redQueenSquareK[k].posY &&
                               greyRook1Rectangle1.posX == redQueenSquareK[k].posX) {
                                greyRook1Rectangle1.posX = -1000;
                                greyRook1Rectangle1.x1 = -1000;
                                greyRook1Rectangle1.x2 = -1000;
                                greyRook1Rectangle2.x1 = -1000;
                                greyRook1Rectangle2.x2 = -1000;
                                greyRook1Base.x1 = -1000;
                                greyRook1Base.x2 = -1000;
                                greyRook1Ellipse.x1 = -1000;
                                greyRook1Ellipse.x2 = -1000;
                            }
                            if(greyRook2Rectangle1.posY == redQueenSquareK[k].posY &&
                               greyRook2Rectangle1.posX == redQueenSquareK[k].posX) {
                                greyRook2Rectangle1.posX = -1000;
                                greyRook2Rectangle1.x1 = -1000;
                                greyRook2Rectangle1.x2 = -1000;
                                greyRook2Rectangle2.x1 = -1000;
                                greyRook2Rectangle2.x2 = -1000;
                                greyRook2Base.x1 = -1000;
                                greyRook2Base.x2 = -1000;
                                greyRook2Ellipse.x1 = -1000;
                                greyRook2Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyBishop1Square.posY == redQueenSquareK[k].posY &&
                               greyBishop1Square.posX == redQueenSquareK[k].posX) {
                                greyBishop1Square.posX = -1000;
                                greyBishop1Square.x1 = -1000;
                                greyBishop1Square.x2 = -1000;
                                greyBishop1Rectangle.x1 = -1000;
                                greyBishop1Rectangle.x2 = -1000;
                                greyBishop1Base.x1 = -1000;
                                greyBishop1Base.x2 = -1000;
                                greyBishop1Ellipse.x1 = -1000;
                                greyBishop1Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyBishop2Square.posY == redQueenSquareK[k].posY &&
                               greyBishop2Square.posX == redQueenSquareK[k].posX) {
                                greyBishop2Square.posX = -1000;
                                greyBishop2Square.x1 = -1000;
                                greyBishop2Square.x2 = -1000;
                                greyBishop2Rectangle.x1 = -1000;
                                greyBishop2Rectangle.x2 = -1000;
                                greyBishop2Base.x1 = -1000;
                                greyBishop2Base.x2 = -1000;
                                greyBishop2Ellipse.x1 = -1000;
                                greyBishop2Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyKnight1Rectangle1.posY == redQueenSquareK[k].posY &&
                               greyKnight1Rectangle1.posX == redQueenSquareK[k].posX) {
                                greyKnight1Rectangle1.posX = -1000;
                                greyKnight1Rectangle1.x1 = -1000;
                                greyKnight1Rectangle1.x2 = -1000;
                                greyKnight1Rectangle2.x1 = -1000;
                                greyKnight1Rectangle2.x2 = -1000;
                                greyKnight1Base.x1 = -1000;
                                greyKnight1Base.x2 = -1000;
                                greyKnight1Ellipse.x1 = -1000;
                                greyKnight1Ellipse.x2 = -1000;
                            }
                            if(WM_RBUTTONDOWN == msg || 1 == 1)
                            if(greyKnight2Rectangle1.posY == redQueenSquareK[k].posY &&
                               greyKnight2Rectangle1.posX == redQueenSquareK[k].posX) {
                                greyKnight2Rectangle1.posX = -1000;
                                greyKnight2Rectangle1.x1 = -1000;
                                greyKnight2Rectangle1.x2 = -1000;
                                greyKnight2Rectangle2.x1 = -1000;
                                greyKnight2Rectangle2.x2 = -1000;
                                greyKnight2Base.x1 = -1000;
                                greyKnight2Base.x2 = -1000;
                                greyKnight2Ellipse.x1 = -1000;
                                greyKnight2Ellipse.x2 = -1000;
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redQueenSquareK[k].posY + 100 &&
                           redPawnsBase[s].posX == redQueenSquareK[k].posX + 100) {
                            redQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == redQueenSquareK[k].posY + 100 &&
                           greyPawnsBase[s].posX == redQueenSquareK[k].posX + 100) {
                            redQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(s != k &&
                           redQueenSquareK[s].posY == redQueenSquareK[k].posY + 100 &&
                           redQueenSquareK[s].posX == redQueenSquareK[k].posX + 100) {
                            redQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(s != k &&
                           greyQueenSquareK[s].posY == redQueenSquareK[k].posY + 100 &&
                           greyQueenSquareK[s].posX == redQueenSquareK[k].posX + 100) {
                            redQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redQueenSquare.posY == redQueenSquareK[k].posY + 100 &&
                       redQueenSquare.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == redQueenSquareK[k].posY + 100 &&
                       greyQueenSquare.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == redQueenSquareK[k].posY + 100 &&
                       redBishop1Square.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == redQueenSquareK[k].posY + 100 &&
                       redBishop2Square.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == redQueenSquareK[k].posY + 100 &&
                       redRook1Rectangle1.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == redQueenSquareK[k].posY + 100 &&
                       redRook2Rectangle1.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == redQueenSquareK[k].posY + 100 &&
                       redKnight1Rectangle1.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == redQueenSquareK[k].posY + 100 &&
                       redKnight2Rectangle1.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == redQueenSquareK[k].posY + 100 &&
                       redBishop1Square.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == redQueenSquareK[k].posY + 100 &&
                       redBishop2Square.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == redQueenSquareK[k].posY + 100 &&
                       greyRook1Rectangle1.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == redQueenSquareK[k].posY + 100 &&
                       greyRook2Rectangle1.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == redQueenSquareK[k].posY + 100 &&
                       greyKnight1Rectangle1.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == redQueenSquareK[k].posY + 100 &&
                       greyKnight2Rectangle1.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == redQueenSquareK[k].posY + 100 &&
                       greyBishop1Square.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == redQueenSquareK[k].posY + 100 &&
                       greyBishop2Square.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == redQueenSquareK[k].posY + 100 &&
                       greyQueenSquare.posX == redQueenSquareK[k].posX + 100) {
                        redQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        redQueenSquareK[k].posY = redQueenSquareK[k].posY + 100;
                        redQueenSquareK[k].y1 = redQueenSquareK[k].y1 + 100;
                        redQueenSquareK[k].y2 = redQueenSquareK[k].y2 + 100;
                        redQueenRectangle1K[k].y1 = redQueenRectangle1K[k].y1 + 100;
                        redQueenRectangle1K[k].y2 = redQueenRectangle1K[k].y2 + 100;
                        redQueenRectangle2K[k].y1 = redQueenRectangle2K[k].y1 + 100;
                        redQueenRectangle2K[k].y2 = redQueenRectangle2K[k].y2 + 100;
                        redQueenRectangle3K[k].y1 = redQueenRectangle3K[k].y1 + 100;
                        redQueenRectangle3K[k].y2 = redQueenRectangle3K[k].y2 + 100;
                        redQueenEllipseK[k].y1 = redQueenEllipseK[k].y1 + 100;
                        redQueenEllipseK[k].y2 = redQueenEllipseK[k].y2 + 100;
                        redQueenBaseK[k].y1 = redQueenBaseK[k].y1 + 100;
                        redQueenBaseK[k].y2 = redQueenBaseK[k].y2 + 100;
                        redQueenSquareK[k].posX = redQueenSquareK[k].posX + 100;
                        redQueenSquareK[k].x1 = redQueenSquareK[k].x1 + 100;
                        redQueenSquareK[k].x2 = redQueenSquareK[k].x2 + 100;
                        redQueenRectangle1K[k].x1 = redQueenRectangle1K[k].x1 + 100;
                        redQueenRectangle1K[k].x2 = redQueenRectangle1K[k].x2 + 100;
                        redQueenRectangle2K[k].x1 = redQueenRectangle2K[k].x1 + 100;
                        redQueenRectangle2K[k].x2 = redQueenRectangle2K[k].x2 + 100;
                        redQueenRectangle3K[k].x1 = redQueenRectangle3K[k].x1 + 100;
                        redQueenRectangle3K[k].x2 = redQueenRectangle3K[k].x2 + 100;
                        redQueenEllipseK[k].x1 = redQueenEllipseK[k].x1 + 100;
                        redQueenEllipseK[k].x2 = redQueenEllipseK[k].x2 + 100;
                        redQueenBaseK[k].x1 = redQueenBaseK[k].x1 + 100;
                        redQueenBaseK[k].x2 = redQueenBaseK[k].x2 + 100;
                    }

                    return flag;
                }
            }

            else {

                redQueenSquareK[k].failedpath = TRUE;
                return TRUE;
            }
        }
    }
}

boolean moveGreyQueenDiagonallyK(UINT msg, int j, int i, int pos1, int ps1, int pos2, int ps2, int k) {

    for(int p=0; p<8; p++) {
        if(p != k &&
           greyQueenSquareK[p].posX == greyQueenSquareK[k].posX &&
           greyQueenSquareK[p].posY == greyQueenSquareK[k].posY) {
            greyQueenSquareK[k].failedpath = TRUE;
            return TRUE;
        }
        if(p != k &&
           greyQueenSquareK[p].posX == greyQueenSquareK[k].posX &&
           greyQueenSquareK[p].posY == greyQueenSquareK[k].posY) {
            greyQueenSquareK[k].failedpath = TRUE;
            return TRUE;
        }
    }
    if(redQueenSquare.posX == greyQueenSquareK[k].posX &&
       redQueenSquare.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(greyQueenSquare.posX == greyQueenSquareK[k].posX &&
       greyQueenSquare.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(redKnight1Rectangle1.posX == greyQueenSquareK[k].posX &&
       redKnight1Rectangle1.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(redKnight2Rectangle1.posX == greyQueenSquareK[k].posX &&
       redKnight2Rectangle1.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(redBishop1Square.posX == greyQueenSquareK[k].posX &&
       redBishop1Square.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(redBishop2Square.posX == greyQueenSquareK[k].posX &&
       redBishop2Square.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(redRook1Rectangle1.posX == greyQueenSquareK[k].posX &&
       redRook1Rectangle1.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(redRook2Rectangle1.posX == greyQueenSquareK[k].posX &&
       redRook2Rectangle1.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    if(redQueenSquare.posX == greyQueenSquareK[k].posX &&
       redQueenSquare.posY == greyQueenSquareK[k].posY) {
        greyQueenSquareK[k].failedpath = TRUE;
        return TRUE;
    }
    for(int g=0; g<8; g++) {
        if(redPawnsBase[g].posX == greyQueenSquareK[k].posX &&
           redPawnsBase[g].posY == greyQueenSquareK[k].posY) {
            greyQueenSquareK[k].failedpath = TRUE;
            return TRUE;
        }
    }
    boolean fail = FALSE;
    if(pos1 == ps1) {
        fail = FALSE;
    } else if(pos1 == -ps1) {
        fail = FALSE;
    } else {
        fail = TRUE;
        greyQueenSquareK[k].failedpath = fail;
    }
    if(pos1 < 0) {
        if(ps1 < 0) {
            boolean f = FALSE;
            if(pos1 < -100 && ps1 < -100) {
                f = moveGreyQueenDiagonallyK(msg, j, i, pos1 + 100, ps1 + 100, pos2, ps2, k);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    greyQueenSquareK[k].posY = greyQueenSquareK[k].posY - 100;
                    greyQueenSquareK[k].posX = greyQueenSquareK[k].posX - 100;
                    greyQueenSquareK[k].y1 = greyQueenSquareK[k].y1 - 100;
                    greyQueenSquareK[k].x1 = greyQueenSquareK[k].x1 - 100;
                    greyQueenSquareK[k].y2 = greyQueenSquareK[k].y2 - 100;
                    greyQueenSquareK[k].x2 = greyQueenSquareK[k].x2 - 100;
                    greyQueenRectangle1K[k].y1 = greyQueenRectangle1K[k].y1 - 100;
                    greyQueenRectangle1K[k].x1 = greyQueenRectangle1K[k].x1 - 100;
                    greyQueenRectangle1K[k].y2 = greyQueenRectangle1K[k].y2 - 100;
                    greyQueenRectangle1K[k].x2 = greyQueenRectangle1K[k].x2 - 100;
                    greyQueenRectangle2K[k].y1 = greyQueenRectangle2K[k].y1 - 100;
                    greyQueenRectangle2K[k].x1 = greyQueenRectangle2K[k].x1 - 100;
                    greyQueenRectangle2K[k].y2 = greyQueenRectangle2K[k].y2 - 100;
                    greyQueenRectangle2K[k].x2 = greyQueenRectangle2K[k].x2 - 100;
                    greyQueenRectangle3K[k].y1 = greyQueenRectangle3K[k].y1 - 100;
                    greyQueenRectangle3K[k].x1 = greyQueenRectangle3K[k].x1 - 100;
                    greyQueenRectangle3K[k].y2 = greyQueenRectangle3K[k].y2 - 100;
                    greyQueenRectangle3K[k].x2 = greyQueenRectangle3K[k].x2 - 100;
                    greyQueenEllipseK[k].y1 = greyQueenEllipseK[k].y1 - 100;
                    greyQueenEllipseK[k].x1 = greyQueenEllipseK[k].x1 - 100;
                    greyQueenEllipseK[k].y2 = greyQueenEllipseK[k].y2 - 100;
                    greyQueenEllipseK[k].x2 = greyQueenEllipseK[k].x2 - 100;
                    greyQueenBaseK[k].y1 = greyQueenBaseK[k].y1 - 100;
                    greyQueenBaseK[k].x1 = greyQueenBaseK[k].x1 - 100;
                    greyQueenBaseK[k].y2 = greyQueenBaseK[k].y2 - 100;
                    greyQueenBaseK[k].x2 = greyQueenBaseK[k].x2 - 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            for(int p=0; p<8; p++) {
                                if(p != k &&
                                   greyQueenSquareK[p].posX == greyQueenSquareK[k].posX &&
                                   greyQueenSquareK[p].posY == greyQueenSquareK[k].posY) {
                                    greyQueenSquareK[k].failedpath = TRUE;
                                    return TRUE;
                                }
                            }
                            if(greyQueenSquare.posX == greyQueenSquareK[k].posX &&
                               greyQueenSquare.posY == greyQueenSquareK[k].posY) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyPawnsBase[s].posY == greyQueenSquareK[k].posY &&
                               greyPawnsBase[s].posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop1Square.posY == greyQueenSquareK[k].posY &&
                               greyBishop1Square.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop2Square.posY == greyQueenSquareK[k].posY &&
                               greyBishop2Square.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                               greyKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                               greyKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook1Rectangle1.posY == greyQueenSquareK[k].posY &&
                               greyRook1Rectangle1.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook2Rectangle1.posY == greyQueenSquareK[k].posY &&
                               greyRook2Rectangle1.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKingSquare.posY == greyQueenSquareK[k].posY &&
                               greyKingSquare.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            for(int r=0; r<8; r++) {
                                if(redQueenSquareK[r].posY == greyQueenSquareK[k].posY &&
                                   redQueenSquareK[r].posX == greyQueenSquareK[k].posX) {
                                    redQueenSquareK[r].posX = -1000;
                                    redQueenSquareK[r].x1 = -1000;
                                    redQueenSquareK[r].x2 = -1000;
                                    redQueenBaseK[r].x1 = -1000;
                                    redQueenBaseK[r].x2 = -1000;
                                    redQueenEllipseK[r].x1 = -1000;
                                    redQueenEllipseK[r].x2 = -1000;
                                    redQueenRectangle1K[r].x1 = -1000;
                                    redQueenRectangle1K[r].x2 = -1000;
                                    redQueenRectangle2K[r].x1 = -1000;
                                    redQueenRectangle2K[r].x2 = -1000;
                                    redQueenRectangle3K[r].x1 = -1000;
                                    redQueenRectangle3K[r].x2 = -1000;
                                }
                            }
                            if(redQueenSquare.posY == greyQueenSquareK[k].posY &&
                               redQueenSquare.posX == greyQueenSquareK[k].posX) {
                                redQueenSquare.posX = -1000;
                                redQueenSquare.x1 = -1000;
                                redQueenSquare.x2 = -1000;
                                redQueenBase.x1 = -1000;
                                redQueenBase.x2 = -1000;
                                redQueenEllipse.x1 = -1000;
                                redQueenEllipse.x2 = -1000;
                                redQueenRectangle1.x1 = -1000;
                                redQueenRectangle1.x2 = -1000;
                                redQueenRectangle2.x1 = -1000;
                                redQueenRectangle2.x2 = -1000;
                                redQueenRectangle3.x1 = -1000;
                                redQueenRectangle3.x2 = -1000;
                            }
                            if(redPawnsBase[s].posY == greyQueenSquareK[k].posY &&
                               redPawnsBase[s].posX == greyQueenSquareK[k].posX) {
                                redPawnsBase[s].posX = -1000;
                                redPawnsBase[s].x1 = -1000;
                                redPawnsBase[s].x2 = -1000;
                                redPawnsEllipse[s].x1 = -1000;
                                redPawnsEllipse[s].x2 = -1000;
                            }
                            if(redKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                               redKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                                redKnight1Rectangle1.posX = -1000;
                                redKnight1Rectangle1.x1 = -1000;
                                redKnight1Rectangle1.x2 = -1000;
                                redKnight1Rectangle2.x1 = -1000;
                                redKnight1Rectangle2.x2 = -1000;
                                redKnight1Base.x1 = -1000;
                                redKnight1Base.x2 = -1000;
                                redKnight1Ellipse.x1 = -1000;
                                redKnight1Ellipse.x2 = -1000;
                            }
                            if(redKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                               redKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                                redKnight2Rectangle1.posX = -1000;
                                redKnight2Rectangle1.x1 = -1000;
                                redKnight2Rectangle1.x2 = -1000;
                                redKnight2Rectangle2.x1 = -1000;
                                redKnight2Rectangle2.x2 = -1000;
                                redKnight2Base.x1 = -1000;
                                redKnight2Base.x2 = -1000;
                                redKnight2Ellipse.x1 = -1000;
                                redKnight2Ellipse.x2 = -1000;
                            }
                            if(redBishop1Square.posY == greyQueenSquareK[k].posY &&
                               redBishop1Square.posX == greyQueenSquareK[k].posX) {
                                redBishop1Square.posX = -1000;
                                redBishop1Square.x1 = -1000;
                                redBishop1Square.x2 = -1000;
                                redBishop1Rectangle.x1 = -1000;
                                redBishop1Rectangle.x2 = -1000;
                                redBishop1Base.x1 = -1000;
                                redBishop1Base.x2 = -1000;
                                redBishop1Ellipse.x1 = -1000;
                                redBishop1Ellipse.x2 = -1000;
                            }
                            if(redBishop2Square.posY == greyQueenSquareK[k].posY &&
                               redBishop2Square.posX == greyQueenSquareK[k].posX) {
                                redBishop2Square.posX = -1000;
                                redBishop2Square.x1 = -1000;
                                redBishop2Square.x2 = -1000;
                                redBishop2Rectangle.x1 = -1000;
                                redBishop2Rectangle.x2 = -1000;
                                redBishop2Base.x1 = -1000;
                                redBishop2Base.x2 = -1000;
                                redBishop2Ellipse.x1 = -1000;
                                redBishop2Ellipse.x2 = -1000;
                            }
                            if(redRook1Rectangle1.posY == greyQueenSquareK[k].posY &&
                               redRook1Rectangle1.posX == greyQueenSquareK[k].posX) {
                                redRook1Rectangle1.posX = -1000;
                                redRook1Rectangle1.x1 = -1000;
                                redRook1Rectangle1.x2 = -1000;
                                redRook1Rectangle2.x1 = -1000;
                                redRook1Rectangle2.x2 = -1000;
                                redRook1Base.x1 = -1000;
                                redRook1Base.x2 = -1000;
                                redRook1Ellipse.x1 = -1000;
                                redRook1Ellipse.x2 = -1000;
                            }
                            if(redRook2Rectangle1.posY == greyQueenSquareK[k].posY &&
                               redRook2Rectangle1.posX == greyQueenSquareK[k].posX) {
                                redRook2Rectangle1.posX = -1000;
                                redRook2Rectangle1.x1 = -1000;
                                redRook2Rectangle1.x2 = -1000;
                                redRook2Rectangle2.x1 = -1000;
                                redRook2Rectangle2.x2 = -1000;
                                redRook2Base.x1 = -1000;
                                redRook2Base.x2 = -1000;
                                redRook2Ellipse.x1 = -1000;
                                redRook2Ellipse.x2 = -1000;
                            }
                            if(redBishop1Square.posY == greyQueenSquareK[k].posY &&
                               redBishop1Square.posX == greyQueenSquareK[k].posX) {
                                redBishop1Square.posX = -1000;
                                redBishop1Square.x1 = -1000;
                                redBishop1Square.x2 = -1000;
                                redBishop1Rectangle.x1 = -1000;
                                redBishop1Rectangle.x2 = -1000;
                                redBishop1Base.x1 = -1000;
                                redBishop1Base.x2 = -1000;
                                redBishop1Ellipse.x1 = -1000;
                                redBishop1Ellipse.x2 = -1000;
                            }
                            if(redBishop2Square.posY == greyQueenSquareK[k].posY &&
                               redBishop2Square.posX == greyQueenSquareK[k].posX) {
                                redBishop2Square.posX = -1000;
                                redBishop2Square.x1 = -1000;
                                redBishop2Square.x2 = -1000;
                                redBishop2Rectangle.x1 = -1000;
                                redBishop2Rectangle.x2 = -1000;
                                redBishop2Base.x1 = -1000;
                                redBishop2Base.x2 = -1000;
                                redBishop2Ellipse.x1 = -1000;
                                redBishop2Ellipse.x2 = -1000;
                            }
                            if(redKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                               redKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                                redKnight1Rectangle1.posX = -1000;
                                redKnight1Rectangle1.x1 = -1000;
                                redKnight1Rectangle1.x2 = -1000;
                                redKnight1Rectangle2.x1 = -1000;
                                redKnight1Rectangle2.x2 = -1000;
                                redKnight1Base.x1 = -1000;
                                redKnight1Base.x2 = -1000;
                                redKnight1Ellipse.x1 = -1000;
                                redKnight1Ellipse.x2 = -1000;
                            }
                            if(redKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                               redKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                                redKnight2Rectangle1.posX = -1000;
                                redKnight2Rectangle1.x1 = -1000;
                                redKnight2Rectangle1.x2 = -1000;
                                redKnight2Rectangle2.x1 = -1000;
                                redKnight2Rectangle2.x2 = -1000;
                                redKnight2Base.x1 = -1000;
                                redKnight2Base.x2 = -1000;
                                redKnight2Ellipse.x1 = -1000;
                                redKnight2Ellipse.x2 = -1000;
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == greyQueenSquareK[k].posY - 100 &&
                           redPawnsBase[s].posX == greyQueenSquareK[k].posX - 100) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == greyQueenSquareK[k].posY - 100 &&
                           greyPawnsBase[s].posX == greyQueenSquareK[k].posX - 100) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                        for(int p=0; p<8; p++) {
                            if(p != k &&
                               greyQueenSquareK[p].posX == greyQueenSquareK[k].posX - 100 &&
                               greyQueenSquareK[p].posY == greyQueenSquareK[k].posY - 100) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(p != k &&
                               greyQueenSquareK[p].posX == greyQueenSquareK[k].posX - 100 &&
                               greyQueenSquareK[p].posY == greyQueenSquareK[k].posY - 100) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                        }
                    }
                    if(redQueenSquare.posX == greyQueenSquareK[k].posX - 100 &&
                       redQueenSquare.posY == greyQueenSquareK[k].posY - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        return TRUE;
                    }
                    if(greyQueenSquare.posX == greyQueenSquareK[k].posX - 100 &&
                       greyQueenSquare.posY == greyQueenSquareK[k].posY - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        return TRUE;
                    }
                    if(redBishop1Square.posY == greyQueenSquareK[k].posY - 100 &&
                       redBishop1Square.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyQueenSquareK[k].posY - 100 &&
                       redBishop2Square.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                       redRook1Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                       redRook2Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                       redKnight1Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                       redKnight2Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == greyQueenSquareK[k].posY - 100 &&
                       redBishop1Square.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyQueenSquareK[k].posY - 100 &&
                       redBishop2Square.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                       greyRook1Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                       greyRook2Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                       greyKnight1Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                       greyKnight2Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == greyQueenSquareK[k].posY - 100 &&
                       redBishop1Square.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyQueenSquareK[k].posY - 100 &&
                       redBishop2Square.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                       redRook1Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                       redRook2Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                       redKnight1Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                       redKnight2Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == greyQueenSquareK[k].posY - 100 &&
                       redBishop1Square.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyQueenSquareK[k].posY - 100 &&
                       redBishop2Square.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                       greyRook1Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                       greyRook2Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                       greyKnight1Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                       greyKnight2Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == greyQueenSquareK[k].posY + 100 &&
                       greyBishop1Square.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == greyQueenSquareK[k].posY + 100 &&
                       greyBishop2Square.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == greyQueenSquareK[k].posY + 100 &&
                       greyQueenSquare.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        greyQueenSquareK[k].posY = greyQueenSquareK[k].posY - 100;
                        greyQueenSquareK[k].y1 = greyQueenSquareK[k].y1 - 100;
                        greyQueenSquareK[k].y2 = greyQueenSquareK[k].y2 - 100;
                        greyQueenRectangle1K[k].y1 = greyQueenRectangle1K[k].y1 - 100;
                        greyQueenRectangle1K[k].y2 = greyQueenRectangle1K[k].y2 - 100;
                        greyQueenRectangle2K[k].y1 = greyQueenRectangle2K[k].y1 - 100;
                        greyQueenRectangle2K[k].y2 = greyQueenRectangle2K[k].y2 - 100;
                        greyQueenRectangle3K[k].y1 = greyQueenRectangle3K[k].y1 - 100;
                        greyQueenRectangle3K[k].y2 = greyQueenRectangle3K[k].y2 - 100;
                        greyQueenEllipseK[k].y1 = greyQueenEllipseK[k].y1 - 100;
                        greyQueenEllipseK[k].y2 = greyQueenEllipseK[k].y2 - 100;
                        greyQueenBaseK[k].y1 = greyQueenBaseK[k].y1 - 100;
                        greyQueenBaseK[k].y2 = greyQueenBaseK[k].y2 - 100;
                        greyQueenSquareK[k].posX = greyQueenSquareK[k].posX - 100;
                        greyQueenSquareK[k].x1 = greyQueenSquareK[k].x1 - 100;
                        greyQueenSquareK[k].x2 = greyQueenSquareK[k].x2 - 100;
                        greyQueenRectangle1K[k].x1 = greyQueenRectangle1K[k].x1 - 100;
                        greyQueenRectangle1K[k].x2 = greyQueenRectangle1K[k].x2 - 100;
                        greyQueenRectangle2K[k].x1 = greyQueenRectangle2K[k].x1 - 100;
                        greyQueenRectangle2K[k].x2 = greyQueenRectangle2K[k].x2 - 100;
                        greyQueenRectangle3K[k].x1 = greyQueenRectangle3K[k].x1 - 100;
                        greyQueenRectangle3K[k].x2 = greyQueenRectangle3K[k].x2 - 100;
                        greyQueenEllipseK[k].x1 = greyQueenEllipseK[k].x1 - 100;
                        greyQueenEllipseK[k].x2 = greyQueenEllipseK[k].x2 - 100;
                        greyQueenBaseK[k].x1 = greyQueenBaseK[k].x1 - 100;
                        greyQueenBaseK[k].x2 = greyQueenBaseK[k].x2 - 100;
                    }

                    return flag;
                }
            }

            else {

                greyQueenSquareK[k].failedpath = TRUE;
                return TRUE;
            }
        }
        if(ps1 > 0) {
            boolean f = FALSE;
            if(pos1 < -100 && ps1 > 100) {
                f = moveGreyQueenDiagonallyK(msg, j, i, pos1 + 100, ps1 - 100, pos2, ps2, k);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    greyQueenSquareK[k].posY = greyQueenSquareK[k].posY - 100;
                    greyQueenSquareK[k].posX = greyQueenSquareK[k].posX + 100;
                    greyQueenSquareK[k].y1 = greyQueenSquareK[k].y1 - 100;
                    greyQueenSquareK[k].x1 = greyQueenSquareK[k].x1 + 100;
                    greyQueenSquareK[k].y2 = greyQueenSquareK[k].y2 - 100;
                    greyQueenSquareK[k].x2 = greyQueenSquareK[k].x2 + 100;
                    greyQueenRectangle1K[k].y1 = greyQueenRectangle1K[k].y1 - 100;
                    greyQueenRectangle1K[k].x1 = greyQueenRectangle1K[k].x1 + 100;
                    greyQueenRectangle1K[k].y2 = greyQueenRectangle1K[k].y2 - 100;
                    greyQueenRectangle1K[k].x2 = greyQueenRectangle1K[k].x2 + 100;
                    greyQueenRectangle2K[k].y1 = greyQueenRectangle2K[k].y1 - 100;
                    greyQueenRectangle2K[k].x1 = greyQueenRectangle2K[k].x1 + 100;
                    greyQueenRectangle2K[k].y2 = greyQueenRectangle2K[k].y2 - 100;
                    greyQueenRectangle2K[k].x2 = greyQueenRectangle2K[k].x2 + 100;
                    greyQueenRectangle3K[k].y1 = greyQueenRectangle3K[k].y1 - 100;
                    greyQueenRectangle3K[k].x1 = greyQueenRectangle3K[k].x1 + 100;
                    greyQueenRectangle3K[k].y2 = greyQueenRectangle3K[k].y2 - 100;
                    greyQueenRectangle3K[k].x2 = greyQueenRectangle3K[k].x2 + 100;
                    greyQueenEllipseK[k].y1 = greyQueenEllipseK[k].y1 - 100;
                    greyQueenEllipseK[k].x1 = greyQueenEllipseK[k].x1 + 100;
                    greyQueenEllipseK[k].y2 = greyQueenEllipseK[k].y2 - 100;
                    greyQueenEllipseK[k].x2 = greyQueenEllipseK[k].x2 + 100;
                    greyQueenBaseK[k].y1 = greyQueenBaseK[k].y1 - 100;
                    greyQueenBaseK[k].x1 = greyQueenBaseK[k].x1 + 100;
                    greyQueenBaseK[k].y2 = greyQueenBaseK[k].y2 - 100;
                    greyQueenBaseK[k].x2 = greyQueenBaseK[k].x2 + 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            for(int p=0; p<8; p++) {
                                if(p != k &&
                                   greyQueenSquareK[p].posX == greyQueenSquareK[k].posX &&
                                   greyQueenSquareK[p].posY == greyQueenSquareK[k].posY) {
                                    greyQueenSquareK[k].failedpath = TRUE;
                                    return TRUE;
                                }
                            }
                            if(greyQueenSquare.posX == greyQueenSquareK[k].posX &&
                               greyQueenSquare.posY == greyQueenSquareK[k].posY) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyPawnsBase[s].posY == greyQueenSquareK[k].posY &&
                               greyPawnsBase[s].posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop1Square.posY == greyQueenSquareK[k].posY &&
                               greyBishop1Square.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop2Square.posY == greyQueenSquareK[k].posY &&
                               greyBishop2Square.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                               greyKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                               greyKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook1Rectangle1.posY == greyQueenSquareK[k].posY &&
                               greyRook1Rectangle1.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook2Rectangle1.posY == greyQueenSquareK[k].posY &&
                               greyRook2Rectangle1.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKingSquare.posY == greyQueenSquareK[k].posY &&
                               greyKingSquare.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            for(int r=0; r<8; r++) {
                                if(redQueenSquareK[r].posY == greyQueenSquareK[k].posY &&
                                   redQueenSquareK[r].posX == greyQueenSquareK[k].posX) {
                                    redQueenSquareK[r].posX = -1000;
                                    redQueenSquareK[r].x1 = -1000;
                                    redQueenSquareK[r].x2 = -1000;
                                    redQueenBaseK[r].x1 = -1000;
                                    redQueenBaseK[r].x2 = -1000;
                                    redQueenEllipseK[r].x1 = -1000;
                                    redQueenEllipseK[r].x2 = -1000;
                                    redQueenRectangle1K[r].x1 = -1000;
                                    redQueenRectangle1K[r].x2 = -1000;
                                    redQueenRectangle2K[r].x1 = -1000;
                                    redQueenRectangle2K[r].x2 = -1000;
                                    redQueenRectangle3K[r].x1 = -1000;
                                    redQueenRectangle3K[r].x2 = -1000;
                                }
                            }
                            if(redQueenSquare.posY == greyQueenSquareK[k].posY &&
                               redQueenSquare.posX == greyQueenSquareK[k].posX) {
                                redQueenSquare.posX = -1000;
                                redQueenSquare.x1 = -1000;
                                redQueenSquare.x2 = -1000;
                                redQueenBase.x1 = -1000;
                                redQueenBase.x2 = -1000;
                                redQueenEllipse.x1 = -1000;
                                redQueenEllipse.x2 = -1000;
                                redQueenRectangle1.x1 = -1000;
                                redQueenRectangle1.x2 = -1000;
                                redQueenRectangle2.x1 = -1000;
                                redQueenRectangle2.x2 = -1000;
                                redQueenRectangle3.x1 = -1000;
                                redQueenRectangle3.x2 = -1000;
                            }
                            if(redPawnsBase[s].posY == greyQueenSquareK[k].posY &&
                               redPawnsBase[s].posX == greyQueenSquareK[k].posX) {
                                redPawnsBase[s].posX = -1000;
                                redPawnsBase[s].x1 = -1000;
                                redPawnsBase[s].x2 = -1000;
                                redPawnsEllipse[s].x1 = -1000;
                                redPawnsEllipse[s].x2 = -1000;
                            }
                            if(redKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                               redKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                                redKnight1Rectangle1.posX = -1000;
                                redKnight1Rectangle1.x1 = -1000;
                                redKnight1Rectangle1.x2 = -1000;
                                redKnight1Rectangle2.x1 = -1000;
                                redKnight1Rectangle2.x2 = -1000;
                                redKnight1Base.x1 = -1000;
                                redKnight1Base.x2 = -1000;
                                redKnight1Ellipse.x1 = -1000;
                                redKnight1Ellipse.x2 = -1000;
                            }
                            if(redKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                               redKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                                redKnight2Rectangle1.posX = -1000;
                                redKnight2Rectangle1.x1 = -1000;
                                redKnight2Rectangle1.x2 = -1000;
                                redKnight2Rectangle2.x1 = -1000;
                                redKnight2Rectangle2.x2 = -1000;
                                redKnight2Base.x1 = -1000;
                                redKnight2Base.x2 = -1000;
                                redKnight2Ellipse.x1 = -1000;
                                redKnight2Ellipse.x2 = -1000;
                            }
                            if(redBishop1Square.posY == greyQueenSquareK[k].posY &&
                               redBishop1Square.posX == greyQueenSquareK[k].posX) {
                                redBishop1Square.posX = -1000;
                                redBishop1Square.x1 = -1000;
                                redBishop1Square.x2 = -1000;
                                redBishop1Rectangle.x1 = -1000;
                                redBishop1Rectangle.x2 = -1000;
                                redBishop1Base.x1 = -1000;
                                redBishop1Base.x2 = -1000;
                                redBishop1Ellipse.x1 = -1000;
                                redBishop1Ellipse.x2 = -1000;
                            }
                            if(redBishop2Square.posY == greyQueenSquareK[k].posY &&
                               redBishop2Square.posX == greyQueenSquareK[k].posX) {
                                redBishop2Square.posX = -1000;
                                redBishop2Square.x1 = -1000;
                                redBishop2Square.x2 = -1000;
                                redBishop2Rectangle.x1 = -1000;
                                redBishop2Rectangle.x2 = -1000;
                                redBishop2Base.x1 = -1000;
                                redBishop2Base.x2 = -1000;
                                redBishop2Ellipse.x1 = -1000;
                                redBishop2Ellipse.x2 = -1000;
                            }
                            if(redRook1Rectangle1.posY == greyQueenSquareK[k].posY &&
                               redRook1Rectangle1.posX == greyQueenSquareK[k].posX) {
                                redRook1Rectangle1.posX = -1000;
                                redRook1Rectangle1.x1 = -1000;
                                redRook1Rectangle1.x2 = -1000;
                                redRook1Rectangle2.x1 = -1000;
                                redRook1Rectangle2.x2 = -1000;
                                redRook1Base.x1 = -1000;
                                redRook1Base.x2 = -1000;
                                redRook1Ellipse.x1 = -1000;
                                redRook1Ellipse.x2 = -1000;
                            }
                            if(redRook2Rectangle1.posY == greyQueenSquareK[k].posY &&
                               redRook2Rectangle1.posX == greyQueenSquareK[k].posX) {
                                redRook2Rectangle1.posX = -1000;
                                redRook2Rectangle1.x1 = -1000;
                                redRook2Rectangle1.x2 = -1000;
                                redRook2Rectangle2.x1 = -1000;
                                redRook2Rectangle2.x2 = -1000;
                                redRook2Base.x1 = -1000;
                                redRook2Base.x2 = -1000;
                                redRook2Ellipse.x1 = -1000;
                                redRook2Ellipse.x2 = -1000;
                            }
                            if(redBishop1Square.posY == greyQueenSquareK[k].posY &&
                               redBishop1Square.posX == greyQueenSquareK[k].posX) {
                                redBishop1Square.posX = -1000;
                                redBishop1Square.x1 = -1000;
                                redBishop1Square.x2 = -1000;
                                redBishop1Rectangle.x1 = -1000;
                                redBishop1Rectangle.x2 = -1000;
                                redBishop1Base.x1 = -1000;
                                redBishop1Base.x2 = -1000;
                                redBishop1Ellipse.x1 = -1000;
                                redBishop1Ellipse.x2 = -1000;
                            }
                            if(redBishop2Square.posY == greyQueenSquareK[k].posY &&
                               redBishop2Square.posX == greyQueenSquareK[k].posX) {
                                redBishop2Square.posX = -1000;
                                redBishop2Square.x1 = -1000;
                                redBishop2Square.x2 = -1000;
                                redBishop2Rectangle.x1 = -1000;
                                redBishop2Rectangle.x2 = -1000;
                                redBishop2Base.x1 = -1000;
                                redBishop2Base.x2 = -1000;
                                redBishop2Ellipse.x1 = -1000;
                                redBishop2Ellipse.x2 = -1000;
                            }
                            if(redKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                               redKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                                redKnight1Rectangle1.posX = -1000;
                                redKnight1Rectangle1.x1 = -1000;
                                redKnight1Rectangle1.x2 = -1000;
                                redKnight1Rectangle2.x1 = -1000;
                                redKnight1Rectangle2.x2 = -1000;
                                redKnight1Base.x1 = -1000;
                                redKnight1Base.x2 = -1000;
                                redKnight1Ellipse.x1 = -1000;
                                redKnight1Ellipse.x2 = -1000;
                            }
                            if(redKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                               redKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                                redKnight2Rectangle1.posX = -1000;
                                redKnight2Rectangle1.x1 = -1000;
                                redKnight2Rectangle1.x2 = -1000;
                                redKnight2Rectangle2.x1 = -1000;
                                redKnight2Rectangle2.x2 = -1000;
                                redKnight2Base.x1 = -1000;
                                redKnight2Base.x2 = -1000;
                                redKnight2Ellipse.x1 = -1000;
                                redKnight2Ellipse.x2 = -1000;
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        for(int h=0; h<8; h++) {
                            if(h != k &&
                               greyQueenSquareK[h].posY == greyQueenSquareK[k].posY - 100 &&
                               greyQueenSquareK[h].posX == greyQueenSquareK[k].posX + 100) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                flag = TRUE;
                            }
                        }
                        for(int h=0; h<8; h++) {
                            if(h != k &&
                               greyQueenSquareK[h].posY == greyQueenSquareK[k].posY - 100 &&
                               greyQueenSquareK[h].posX == greyQueenSquareK[k].posX + 100) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                flag = TRUE;
                            }
                        }
                        if(redQueenSquare.posY == greyQueenSquareK[k].posY - 100 &&
                           redQueenSquare.posX == greyQueenSquareK[k].posX + 100) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(redPawnsBase[s].posY == greyQueenSquareK[k].posY - 100 &&
                           redPawnsBase[s].posX == greyQueenSquareK[k].posX + 100) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == greyQueenSquareK[k].posY - 100 &&
                           greyPawnsBase[s].posX == greyQueenSquareK[k].posX + 100) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redBishop1Square.posY == greyQueenSquareK[k].posY - 100 &&
                       redBishop1Square.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyQueenSquareK[k].posY - 100 &&
                       redBishop2Square.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                       redRook1Rectangle1.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                       redRook2Rectangle1.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                       redKnight1Rectangle1.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                       redKnight2Rectangle1.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == greyQueenSquareK[k].posY - 100 &&
                       redBishop1Square.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyQueenSquareK[k].posY - 100 &&
                       redBishop2Square.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                       greyRook1Rectangle1.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                       greyRook2Rectangle1.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                       greyKnight1Rectangle1.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == greyQueenSquareK[k].posY - 100 &&
                       greyKnight2Rectangle1.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == greyQueenSquareK[k].posY + 100 &&
                       greyBishop1Square.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == greyQueenSquareK[k].posY + 100 &&
                       greyBishop2Square.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == greyQueenSquareK[k].posY + 100 &&
                       greyQueenSquare.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        greyQueenSquareK[k].posY = greyQueenSquareK[k].posY - 100;
                        greyQueenSquareK[k].y1 = greyQueenSquareK[k].y1 - 100;
                        greyQueenSquareK[k].y2 = greyQueenSquareK[k].y2 - 100;
                        greyQueenRectangle1K[k].y1 = greyQueenRectangle1K[k].y1 - 100;
                        greyQueenRectangle1K[k].y2 = greyQueenRectangle1K[k].y2 - 100;
                        greyQueenRectangle2K[k].y1 = greyQueenRectangle2K[k].y1 - 100;
                        greyQueenRectangle2K[k].y2 = greyQueenRectangle2K[k].y2 - 100;
                        greyQueenRectangle3K[k].y1 = greyQueenRectangle3K[k].y1 - 100;
                        greyQueenRectangle3K[k].y2 = greyQueenRectangle3K[k].y2 - 100;
                        greyQueenEllipseK[k].y1 = greyQueenEllipseK[k].y1 - 100;
                        greyQueenEllipseK[k].y2 = greyQueenEllipseK[k].y2 - 100;
                        greyQueenBaseK[k].y1 = greyQueenBaseK[k].y1 - 100;
                        greyQueenBaseK[k].y2 = greyQueenBaseK[k].y2 - 100;
                        greyQueenSquareK[k].posX = greyQueenSquareK[k].posX + 100;
                        greyQueenSquareK[k].x1 = greyQueenSquareK[k].x1 + 100;
                        greyQueenSquareK[k].x2 = greyQueenSquareK[k].x2 + 100;
                        greyQueenRectangle1K[k].x1 = greyQueenRectangle1K[k].x1 + 100;
                        greyQueenRectangle1K[k].x2 = greyQueenRectangle1K[k].x2 + 100;
                        greyQueenRectangle2K[k].x1 = greyQueenRectangle2K[k].x1 + 100;
                        greyQueenRectangle2K[k].x2 = greyQueenRectangle2K[k].x2 + 100;
                        greyQueenRectangle3K[k].x1 = greyQueenRectangle3K[k].x1 + 100;
                        greyQueenRectangle3K[k].x2 = greyQueenRectangle3K[k].x2 + 100;
                        greyQueenEllipseK[k].x1 = greyQueenEllipseK[k].x1 + 100;
                        greyQueenEllipseK[k].x2 = greyQueenEllipseK[k].x2 + 100;
                        greyQueenBaseK[k].x1 = greyQueenBaseK[k].x1 + 100;
                        greyQueenBaseK[k].x2 = greyQueenBaseK[k].x2 + 100;
                    }

                    return flag;
                }
            }

            else {

                greyQueenSquareK[k].failedpath = TRUE;
                return TRUE;
            }
        }
    } else if(pos1 > 0) {
        if(ps1 < 0) {
            boolean f = FALSE;
            if(pos1 > 100 && ps1 < -100) {
                f = moveGreyQueenDiagonallyK(msg, j, i, pos1 - 100, ps1 + 100, pos2, ps2, k);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    greyQueenSquareK[k].posY = greyQueenSquareK[k].posY + 100;
                    greyQueenSquareK[k].posX = greyQueenSquareK[k].posX - 100;
                    greyQueenSquareK[k].y1 = greyQueenSquareK[k].y1 + 100;
                    greyQueenSquareK[k].x1 = greyQueenSquareK[k].x1 - 100;
                    greyQueenSquareK[k].y2 = greyQueenSquareK[k].y2 + 100;
                    greyQueenSquareK[k].x2 = greyQueenSquareK[k].x2 - 100;
                    greyQueenRectangle1K[k].y1 = greyQueenRectangle1K[k].y1 + 100;
                    greyQueenRectangle1K[k].x1 = greyQueenRectangle1K[k].x1 - 100;
                    greyQueenRectangle1K[k].y2 = greyQueenRectangle1K[k].y2 + 100;
                    greyQueenRectangle1K[k].x2 = greyQueenRectangle1K[k].x2 - 100;
                    greyQueenRectangle2K[k].y1 = greyQueenRectangle2K[k].y1 + 100;
                    greyQueenRectangle2K[k].x1 = greyQueenRectangle2K[k].x1 - 100;
                    greyQueenRectangle2K[k].y2 = greyQueenRectangle2K[k].y2 + 100;
                    greyQueenRectangle2K[k].x2 = greyQueenRectangle2K[k].x2 - 100;
                    greyQueenRectangle3K[k].y1 = greyQueenRectangle3K[k].y1 + 100;
                    greyQueenRectangle3K[k].x1 = greyQueenRectangle3K[k].x1 - 100;
                    greyQueenRectangle3K[k].y2 = greyQueenRectangle3K[k].y2 + 100;
                    greyQueenRectangle3K[k].x2 = greyQueenRectangle3K[k].x2 - 100;
                    greyQueenEllipseK[k].y1 = greyQueenEllipseK[k].y1 + 100;
                    greyQueenEllipseK[k].x1 = greyQueenEllipseK[k].x1 - 100;
                    greyQueenEllipseK[k].y2 = greyQueenEllipseK[k].y2 + 100;
                    greyQueenEllipseK[k].x2 = greyQueenEllipseK[k].x2 - 100;
                    greyQueenBaseK[k].y1 = greyQueenBaseK[k].y1 + 100;
                    greyQueenBaseK[k].x1 = greyQueenBaseK[k].x1 - 100;
                    greyQueenBaseK[k].y2 = greyQueenBaseK[k].y2 + 100;
                    greyQueenBaseK[k].x2 = greyQueenBaseK[k].x2 - 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            for(int p=0; p<8; p++) {
                                if(p != k &&
                                   greyQueenSquareK[p].posY == greyQueenSquareK[k].posY &&
                                   greyQueenSquareK[p].posX == greyQueenSquareK[k].posX) {
                                    greyQueenSquareK[k].failedpath = TRUE;
                                    return TRUE;
                                }
                            }
                            for(int p=0; p<8; p++) {
                                if(greyQueenSquareK[p].posY == greyQueenSquareK[k].posY &&
                                   greyQueenSquareK[p].posX == greyQueenSquareK[k].posX) {
                                    greyQueenSquareK[k].failedpath = TRUE;
                                    return TRUE;
                                }
                            }
                            if(greyQueenSquare.posY == greyQueenSquareK[k].posY &&
                               greyQueenSquare.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyPawnsBase[s].posY == greyQueenSquareK[k].posY &&
                               greyPawnsBase[s].posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop1Square.posY == greyQueenSquareK[k].posY &&
                               greyBishop1Square.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop2Square.posY == greyQueenSquareK[k].posY &&
                               greyBishop2Square.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                               greyKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                               greyKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook1Rectangle1.posY == greyQueenSquareK[k].posY &&
                               greyRook1Rectangle1.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook2Rectangle1.posY == greyQueenSquareK[k].posY &&
                               greyRook2Rectangle1.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKingSquare.posY == greyQueenSquareK[k].posY &&
                               greyKingSquare.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            for(int r=0; r<8; r++) {
                                if(redQueenSquareK[r].posY == greyQueenSquareK[k].posY &&
                                   redQueenSquareK[r].posX == greyQueenSquareK[k].posX) {
                                    redQueenSquareK[r].posX = -1000;
                                    redQueenSquareK[r].x1 = -1000;
                                    redQueenSquareK[r].x2 = -1000;
                                    redQueenBaseK[r].x1 = -1000;
                                    redQueenBaseK[r].x2 = -1000;
                                    redQueenEllipseK[r].x1 = -1000;
                                    redQueenEllipseK[r].x2 = -1000;
                                    redQueenRectangle1K[r].x1 = -1000;
                                    redQueenRectangle1K[r].x2 = -1000;
                                    redQueenRectangle2K[r].x1 = -1000;
                                    redQueenRectangle2K[r].x2 = -1000;
                                    redQueenRectangle3K[r].x1 = -1000;
                                    redQueenRectangle3K[r].x2 = -1000;
                                }
                            }
                            if(redQueenSquare.posY == greyQueenSquareK[k].posY &&
                               redQueenSquare.posX == greyQueenSquareK[k].posX) {
                                redQueenSquare.posX = -1000;
                                redQueenSquare.x1 = -1000;
                                redQueenSquare.x2 = -1000;
                                redQueenBase.x1 = -1000;
                                redQueenBase.x2 = -1000;
                                redQueenEllipse.x1 = -1000;
                                redQueenEllipse.x2 = -1000;
                                redQueenRectangle1.x1 = -1000;
                                redQueenRectangle1.x2 = -1000;
                                redQueenRectangle2.x1 = -1000;
                                redQueenRectangle2.x2 = -1000;
                                redQueenRectangle3.x1 = -1000;
                                redQueenRectangle3.x2 = -1000;
                            }
                            if(redPawnsBase[s].posY == greyQueenSquareK[k].posY &&
                               redPawnsBase[s].posX == greyQueenSquareK[k].posX) {
                                redPawnsBase[s].posX = -1000;
                                redPawnsBase[s].x1 = -1000;
                                redPawnsBase[s].x2 = -1000;
                                redPawnsEllipse[s].x1 = -1000;
                                redPawnsEllipse[s].x2 = -1000;
                            }
                            if(redKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                               redKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                                redKnight1Rectangle1.posX = -1000;
                                redKnight1Rectangle1.x1 = -1000;
                                redKnight1Rectangle1.x2 = -1000;
                                redKnight1Rectangle2.x1 = -1000;
                                redKnight1Rectangle2.x2 = -1000;
                                redKnight1Base.x1 = -1000;
                                redKnight1Base.x2 = -1000;
                                redKnight1Ellipse.x1 = -1000;
                                redKnight1Ellipse.x2 = -1000;
                            }
                            if(redKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                               redKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                                redKnight2Rectangle1.posX = -1000;
                                redKnight2Rectangle1.x1 = -1000;
                                redKnight2Rectangle1.x2 = -1000;
                                redKnight2Rectangle2.x1 = -1000;
                                redKnight2Rectangle2.x2 = -1000;
                                redKnight2Base.x1 = -1000;
                                redKnight2Base.x2 = -1000;
                                redKnight2Ellipse.x1 = -1000;
                                redKnight2Ellipse.x2 = -1000;
                            }
                            if(redBishop1Square.posY == greyQueenSquareK[k].posY &&
                               redBishop1Square.posX == greyQueenSquareK[k].posX) {
                                redBishop1Square.posX = -1000;
                                redBishop1Square.x1 = -1000;
                                redBishop1Square.x2 = -1000;
                                redBishop1Rectangle.x1 = -1000;
                                redBishop1Rectangle.x2 = -1000;
                                redBishop1Base.x1 = -1000;
                                redBishop1Base.x2 = -1000;
                                redBishop1Ellipse.x1 = -1000;
                                redBishop1Ellipse.x2 = -1000;
                            }
                            if(redBishop2Square.posY == greyQueenSquareK[k].posY &&
                               redBishop2Square.posX == greyQueenSquareK[k].posX) {
                                redBishop2Square.posX = -1000;
                                redBishop2Square.x1 = -1000;
                                redBishop2Square.x2 = -1000;
                                redBishop2Rectangle.x1 = -1000;
                                redBishop2Rectangle.x2 = -1000;
                                redBishop2Base.x1 = -1000;
                                redBishop2Base.x2 = -1000;
                                redBishop2Ellipse.x1 = -1000;
                                redBishop2Ellipse.x2 = -1000;
                            }
                            if(redRook1Rectangle1.posY == greyQueenSquareK[k].posY &&
                               redRook1Rectangle1.posX == greyQueenSquareK[k].posX) {
                                redRook1Rectangle1.posX = -1000;
                                redRook1Rectangle1.x1 = -1000;
                                redRook1Rectangle1.x2 = -1000;
                                redRook1Rectangle2.x1 = -1000;
                                redRook1Rectangle2.x2 = -1000;
                                redRook1Base.x1 = -1000;
                                redRook1Base.x2 = -1000;
                                redRook1Ellipse.x1 = -1000;
                                redRook1Ellipse.x2 = -1000;
                            }
                            if(redRook2Rectangle1.posY == greyQueenSquareK[k].posY &&
                               redRook2Rectangle1.posX == greyQueenSquareK[k].posX) {
                                redRook2Rectangle1.posX = -1000;
                                redRook2Rectangle1.x1 = -1000;
                                redRook2Rectangle1.x2 = -1000;
                                redRook2Rectangle2.x1 = -1000;
                                redRook2Rectangle2.x2 = -1000;
                                redRook2Base.x1 = -1000;
                                redRook2Base.x2 = -1000;
                                redRook2Ellipse.x1 = -1000;
                                redRook2Ellipse.x2 = -1000;
                            }
                            if(redBishop1Square.posY == greyQueenSquareK[k].posY &&
                               redBishop1Square.posX == greyQueenSquareK[k].posX) {
                                redBishop1Square.posX = -1000;
                                redBishop1Square.x1 = -1000;
                                redBishop1Square.x2 = -1000;
                                redBishop1Rectangle.x1 = -1000;
                                redBishop1Rectangle.x2 = -1000;
                                redBishop1Base.x1 = -1000;
                                redBishop1Base.x2 = -1000;
                                redBishop1Ellipse.x1 = -1000;
                                redBishop1Ellipse.x2 = -1000;
                            }
                            if(redBishop2Square.posY == greyQueenSquareK[k].posY &&
                               redBishop2Square.posX == greyQueenSquareK[k].posX) {
                                redBishop2Square.posX = -1000;
                                redBishop2Square.x1 = -1000;
                                redBishop2Square.x2 = -1000;
                                redBishop2Rectangle.x1 = -1000;
                                redBishop2Rectangle.x2 = -1000;
                                redBishop2Base.x1 = -1000;
                                redBishop2Base.x2 = -1000;
                                redBishop2Ellipse.x1 = -1000;
                                redBishop2Ellipse.x2 = -1000;
                            }
                            if(redKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                               redKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                                redKnight1Rectangle1.posX = -1000;
                                redKnight1Rectangle1.x1 = -1000;
                                redKnight1Rectangle1.x2 = -1000;
                                redKnight1Rectangle2.x1 = -1000;
                                redKnight1Rectangle2.x2 = -1000;
                                redKnight1Base.x1 = -1000;
                                redKnight1Base.x2 = -1000;
                                redKnight1Ellipse.x1 = -1000;
                                redKnight1Ellipse.x2 = -1000;
                            }
                            if(redKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                               redKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                                redKnight2Rectangle1.posX = -1000;
                                redKnight2Rectangle1.x1 = -1000;
                                redKnight2Rectangle1.x2 = -1000;
                                redKnight2Rectangle2.x1 = -1000;
                                redKnight2Rectangle2.x2 = -1000;
                                redKnight2Base.x1 = -1000;
                                redKnight2Base.x2 = -1000;
                                redKnight2Ellipse.x1 = -1000;
                                redKnight2Ellipse.x2 = -1000;
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        for(int p=0; p<8; p++) {
                            if(p != k &&
                               greyQueenSquareK[p].posY == greyQueenSquareK[k].posY + 100 &&
                               greyQueenSquareK[p].posX == greyQueenSquareK[k].posX - 100) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                flag = TRUE;
                            }
                            if(p != k &&
                               greyQueenSquareK[p].posY == greyQueenSquareK[k].posY + 100 &&
                               greyQueenSquareK[p].posX == greyQueenSquareK[k].posX - 100) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                flag = TRUE;
                            }
                        }
                        if(redPawnsBase[s].posY == greyQueenSquareK[k].posY + 100 &&
                           redPawnsBase[s].posX == greyQueenSquareK[k].posX - 100) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == greyQueenSquareK[k].posY + 100 &&
                           greyPawnsBase[s].posX == greyQueenSquareK[k].posX - 100) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redQueenSquare.posY == greyQueenSquareK[k].posY + 100 &&
                       redQueenSquare.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == greyQueenSquareK[k].posY + 100 &&
                       greyQueenSquare.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == greyQueenSquareK[k].posY + 100 &&
                       redBishop1Square.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyQueenSquareK[k].posY + 100 &&
                       redBishop2Square.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == greyQueenSquareK[k].posY + 100 &&
                       redRook1Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == greyQueenSquareK[k].posY + 100 &&
                       redRook2Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == greyQueenSquareK[k].posY + 100 &&
                       redKnight1Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == greyQueenSquareK[k].posY + 100 &&
                       redKnight2Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == greyQueenSquareK[k].posY + 100 &&
                       redBishop1Square.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyQueenSquareK[k].posY + 100 &&
                       redBishop2Square.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == greyQueenSquareK[k].posY + 100 &&
                       greyRook1Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == greyQueenSquareK[k].posY + 100 &&
                       greyRook2Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == greyQueenSquareK[k].posY + 100 &&
                       greyKnight1Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == greyQueenSquareK[k].posY + 100 &&
                       greyKnight2Rectangle1.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == greyQueenSquareK[k].posY + 100 &&
                       greyBishop1Square.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == greyQueenSquareK[k].posY + 100 &&
                       greyBishop2Square.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == greyQueenSquareK[k].posY + 100 &&
                       greyQueenSquare.posX == greyQueenSquareK[k].posX - 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        greyQueenSquareK[k].posY = greyQueenSquareK[k].posY + 100;
                        greyQueenSquareK[k].y1 = greyQueenSquareK[k].y1 + 100;
                        greyQueenSquareK[k].y2 = greyQueenSquareK[k].y2 + 100;
                        greyQueenRectangle1K[k].y1 = greyQueenRectangle1K[k].y1 + 100;
                        greyQueenRectangle1K[k].y2 = greyQueenRectangle1K[k].y2 + 100;
                        greyQueenRectangle2K[k].y1 = greyQueenRectangle2K[k].y1 + 100;
                        greyQueenRectangle2K[k].y2 = greyQueenRectangle2K[k].y2 + 100;
                        greyQueenRectangle3K[k].y1 = greyQueenRectangle3K[k].y1 + 100;
                        greyQueenRectangle3K[k].y2 = greyQueenRectangle3K[k].y2 + 100;
                        greyQueenEllipseK[k].y1 = greyQueenEllipseK[k].y1 + 100;
                        greyQueenEllipseK[k].y2 = greyQueenEllipseK[k].y2 + 100;
                        greyQueenBaseK[k].y1 = greyQueenBaseK[k].y1 + 100;
                        greyQueenBaseK[k].y2 = greyQueenBaseK[k].y2 + 100;
                        greyQueenSquareK[k].posX = greyQueenSquareK[k].posX - 100;
                        greyQueenSquareK[k].x1 = greyQueenSquareK[k].x1 - 100;
                        greyQueenSquareK[k].x2 = greyQueenSquareK[k].x2 - 100;
                        greyQueenRectangle1K[k].x1 = greyQueenRectangle1K[k].x1 - 100;
                        greyQueenRectangle1K[k].x2 = greyQueenRectangle1K[k].x2 - 100;
                        greyQueenRectangle2K[k].x1 = greyQueenRectangle2K[k].x1 - 100;
                        greyQueenRectangle2K[k].x2 = greyQueenRectangle2K[k].x2 - 100;
                        greyQueenRectangle3K[k].x1 = greyQueenRectangle3K[k].x1 - 100;
                        greyQueenRectangle3K[k].x2 = greyQueenRectangle3K[k].x2 - 100;
                        greyQueenEllipseK[k].x1 = greyQueenEllipseK[k].x1 - 100;
                        greyQueenEllipseK[k].x2 = greyQueenEllipseK[k].x2 - 100;
                        greyQueenBaseK[k].x1 = greyQueenBaseK[k].x1 - 100;
                        greyQueenBaseK[k].x2 = greyQueenBaseK[k].x2 - 100;
                    }

                    return flag;
                }
            }

            else {

                greyQueenSquareK[k].failedpath = TRUE;
                return TRUE;
            }
        }
        if(ps1 > 0) {
            boolean f = FALSE;
            if(pos1 > 100 && ps1 > 100) {
                f = moveGreyQueenDiagonallyK(msg, j, i, pos1 - 100, ps1 - 100, pos2, ps2, k);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    greyQueenSquareK[k].posY = greyQueenSquareK[k].posY + 100;
                    greyQueenSquareK[k].posX = greyQueenSquareK[k].posX + 100;
                    greyQueenSquareK[k].y1 = greyQueenSquareK[k].y1 + 100;
                    greyQueenSquareK[k].x1 = greyQueenSquareK[k].x1 + 100;
                    greyQueenSquareK[k].y2 = greyQueenSquareK[k].y2 + 100;
                    greyQueenSquareK[k].x2 = greyQueenSquareK[k].x2 + 100;
                    greyQueenRectangle1K[k].y1 = greyQueenRectangle1K[k].y1 + 100;
                    greyQueenRectangle1K[k].x1 = greyQueenRectangle1K[k].x1 + 100;
                    greyQueenRectangle1K[k].y2 = greyQueenRectangle1K[k].y2 + 100;
                    greyQueenRectangle1K[k].x2 = greyQueenRectangle1K[k].x2 + 100;
                    greyQueenRectangle2K[k].y1 = greyQueenRectangle2K[k].y1 + 100;
                    greyQueenRectangle2K[k].x1 = greyQueenRectangle2K[k].x1 + 100;
                    greyQueenRectangle2K[k].y2 = greyQueenRectangle2K[k].y2 + 100;
                    greyQueenRectangle2K[k].x2 = greyQueenRectangle2K[k].x2 + 100;
                    greyQueenRectangle3K[k].y1 = greyQueenRectangle3K[k].y1 + 100;
                    greyQueenRectangle3K[k].x1 = greyQueenRectangle3K[k].x1 + 100;
                    greyQueenRectangle3K[k].y2 = greyQueenRectangle3K[k].y2 + 100;
                    greyQueenRectangle3K[k].x2 = greyQueenRectangle3K[k].x2 + 100;
                    greyQueenEllipseK[k].y1 = greyQueenEllipseK[k].y1 + 100;
                    greyQueenEllipseK[k].x1 = greyQueenEllipseK[k].x1 + 100;
                    greyQueenEllipseK[k].y2 = greyQueenEllipseK[k].y2 + 100;
                    greyQueenEllipseK[k].x2 = greyQueenEllipseK[k].x2 + 100;
                    greyQueenBaseK[k].y1 = greyQueenBaseK[k].y1 + 100;
                    greyQueenBaseK[k].x1 = greyQueenBaseK[k].x1 + 100;
                    greyQueenBaseK[k].y2 = greyQueenBaseK[k].y2 + 100;
                    greyQueenBaseK[k].x2 = greyQueenBaseK[k].x2 + 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            for(int p=0; p<8; p++) {
                                if(p != k &&
                                   greyQueenSquareK[p].posY == greyQueenSquareK[k].posY &&
                                   greyQueenSquareK[p].posX == greyQueenSquareK[k].posX) {
                                    greyQueenSquareK[k].failedpath = TRUE;
                                    return TRUE;
                                }
                                if(p != k &&
                                   greyQueenSquareK[p].posY == greyQueenSquareK[k].posY &&
                                   greyQueenSquareK[p].posX == greyQueenSquareK[k].posX) {
                                    greyQueenSquareK[k].failedpath = TRUE;
                                    return TRUE;
                                }
                            }
                            if(greyQueenSquare.posY == greyQueenSquareK[k].posY &&
                               greyQueenSquare.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyPawnsBase[s].posY == greyQueenSquareK[k].posY &&
                               greyPawnsBase[s].posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop1Square.posY == greyQueenSquareK[k].posY &&
                               greyBishop1Square.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop2Square.posY == greyQueenSquareK[k].posY &&
                               greyBishop2Square.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                               greyKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                               greyKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook1Rectangle1.posY == greyQueenSquareK[k].posY &&
                               greyRook1Rectangle1.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook2Rectangle1.posY == greyQueenSquareK[k].posY &&
                               greyRook2Rectangle1.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKingSquare.posY == greyQueenSquareK[k].posY &&
                               greyKingSquare.posX == greyQueenSquareK[k].posX) {
                                greyQueenSquareK[k].failedpath = TRUE;
                                return TRUE;
                            }
                            for(int r=0; r<8; r++) {
                                if(redQueenSquareK[r].posY == greyQueenSquareK[k].posY &&
                                   redQueenSquareK[r].posX == greyQueenSquareK[k].posX) {
                                    redQueenSquareK[r].posX = -1000;
                                    redQueenSquareK[r].x1 = -1000;
                                    redQueenSquareK[r].x2 = -1000;
                                    redQueenBaseK[r].x1 = -1000;
                                    redQueenBaseK[r].x2 = -1000;
                                    redQueenEllipseK[r].x1 = -1000;
                                    redQueenEllipseK[r].x2 = -1000;
                                    redQueenRectangle1K[r].x1 = -1000;
                                    redQueenRectangle1K[r].x2 = -1000;
                                    redQueenRectangle2K[r].x1 = -1000;
                                    redQueenRectangle2K[r].x2 = -1000;
                                    redQueenRectangle3K[r].x1 = -1000;
                                    redQueenRectangle3K[r].x2 = -1000;
                                }
                            }
                            if(redQueenSquare.posY == greyQueenSquareK[k].posY &&
                               redQueenSquare.posX == greyQueenSquareK[k].posX) {
                                redQueenSquare.posX = -1000;
                                redQueenSquare.x1 = -1000;
                                redQueenSquare.x2 = -1000;
                                redQueenBase.x1 = -1000;
                                redQueenBase.x2 = -1000;
                                redQueenEllipse.x1 = -1000;
                                redQueenEllipse.x2 = -1000;
                                redQueenRectangle1.x1 = -1000;
                                redQueenRectangle1.x2 = -1000;
                                redQueenRectangle2.x1 = -1000;
                                redQueenRectangle2.x2 = -1000;
                                redQueenRectangle3.x1 = -1000;
                                redQueenRectangle3.x2 = -1000;
                            }
                            if(redPawnsBase[s].posY == greyQueenSquareK[k].posY &&
                               redPawnsBase[s].posX == greyQueenSquareK[k].posX) {
                                redPawnsBase[s].posX = -1000;
                                redPawnsBase[s].x1 = -1000;
                                redPawnsBase[s].x2 = -1000;
                                redPawnsEllipse[s].x1 = -1000;
                                redPawnsEllipse[s].x2 = -1000;
                            }
                            if(redKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                               redKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                                redKnight1Rectangle1.posX = -1000;
                                redKnight1Rectangle1.x1 = -1000;
                                redKnight1Rectangle1.x2 = -1000;
                                redKnight1Rectangle2.x1 = -1000;
                                redKnight1Rectangle2.x2 = -1000;
                                redKnight1Base.x1 = -1000;
                                redKnight1Base.x2 = -1000;
                                redKnight1Ellipse.x1 = -1000;
                                redKnight1Ellipse.x2 = -1000;
                            }
                            if(redKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                               redKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                                redKnight2Rectangle1.posX = -1000;
                                redKnight2Rectangle1.x1 = -1000;
                                redKnight2Rectangle1.x2 = -1000;
                                redKnight2Rectangle2.x1 = -1000;
                                redKnight2Rectangle2.x2 = -1000;
                                redKnight2Base.x1 = -1000;
                                redKnight2Base.x2 = -1000;
                                redKnight2Ellipse.x1 = -1000;
                                redKnight2Ellipse.x2 = -1000;
                            }
                            if(redBishop1Square.posY == greyQueenSquareK[k].posY &&
                               redBishop1Square.posX == greyQueenSquareK[k].posX) {
                                redBishop1Square.posX = -1000;
                                redBishop1Square.x1 = -1000;
                                redBishop1Square.x2 = -1000;
                                redBishop1Rectangle.x1 = -1000;
                                redBishop1Rectangle.x2 = -1000;
                                redBishop1Base.x1 = -1000;
                                redBishop1Base.x2 = -1000;
                                redBishop1Ellipse.x1 = -1000;
                                redBishop1Ellipse.x2 = -1000;
                            }
                            if(redBishop2Square.posY == greyQueenSquareK[k].posY &&
                               redBishop2Square.posX == greyQueenSquareK[k].posX) {
                                redBishop2Square.posX = -1000;
                                redBishop2Square.x1 = -1000;
                                redBishop2Square.x2 = -1000;
                                redBishop2Rectangle.x1 = -1000;
                                redBishop2Rectangle.x2 = -1000;
                                redBishop2Base.x1 = -1000;
                                redBishop2Base.x2 = -1000;
                                redBishop2Ellipse.x1 = -1000;
                                redBishop2Ellipse.x2 = -1000;
                            }
                            if(redRook1Rectangle1.posY == greyQueenSquareK[k].posY &&
                               redRook1Rectangle1.posX == greyQueenSquareK[k].posX) {
                                redRook1Rectangle1.posX = -1000;
                                redRook1Rectangle1.x1 = -1000;
                                redRook1Rectangle1.x2 = -1000;
                                redRook1Rectangle2.x1 = -1000;
                                redRook1Rectangle2.x2 = -1000;
                                redRook1Base.x1 = -1000;
                                redRook1Base.x2 = -1000;
                                redRook1Ellipse.x1 = -1000;
                                redRook1Ellipse.x2 = -1000;
                            }
                            if(redRook2Rectangle1.posY == greyQueenSquareK[k].posY &&
                               redRook2Rectangle1.posX == greyQueenSquareK[k].posX) {
                                redRook2Rectangle1.posX = -1000;
                                redRook2Rectangle1.x1 = -1000;
                                redRook2Rectangle1.x2 = -1000;
                                redRook2Rectangle2.x1 = -1000;
                                redRook2Rectangle2.x2 = -1000;
                                redRook2Base.x1 = -1000;
                                redRook2Base.x2 = -1000;
                                redRook2Ellipse.x1 = -1000;
                                redRook2Ellipse.x2 = -1000;
                            }
                            if(redBishop1Square.posY == greyQueenSquareK[k].posY &&
                               redBishop1Square.posX == greyQueenSquareK[k].posX) {
                                redBishop1Square.posX = -1000;
                                redBishop1Square.x1 = -1000;
                                redBishop1Square.x2 = -1000;
                                redBishop1Rectangle.x1 = -1000;
                                redBishop1Rectangle.x2 = -1000;
                                redBishop1Base.x1 = -1000;
                                redBishop1Base.x2 = -1000;
                                redBishop1Ellipse.x1 = -1000;
                                redBishop1Ellipse.x2 = -1000;
                            }
                            if(redBishop2Square.posY == greyQueenSquareK[k].posY &&
                               redBishop2Square.posX == greyQueenSquareK[k].posX) {
                                redBishop2Square.posX = -1000;
                                redBishop2Square.x1 = -1000;
                                redBishop2Square.x2 = -1000;
                                redBishop2Rectangle.x1 = -1000;
                                redBishop2Rectangle.x2 = -1000;
                                redBishop2Base.x1 = -1000;
                                redBishop2Base.x2 = -1000;
                                redBishop2Ellipse.x1 = -1000;
                                redBishop2Ellipse.x2 = -1000;
                            }
                            if(redKnight1Rectangle1.posY == greyQueenSquareK[k].posY &&
                               redKnight1Rectangle1.posX == greyQueenSquareK[k].posX) {
                                redKnight1Rectangle1.posX = -1000;
                                redKnight1Rectangle1.x1 = -1000;
                                redKnight1Rectangle1.x2 = -1000;
                                redKnight1Rectangle2.x1 = -1000;
                                redKnight1Rectangle2.x2 = -1000;
                                redKnight1Base.x1 = -1000;
                                redKnight1Base.x2 = -1000;
                                redKnight1Ellipse.x1 = -1000;
                                redKnight1Ellipse.x2 = -1000;
                            }
                            if(redKnight2Rectangle1.posY == greyQueenSquareK[k].posY &&
                               redKnight2Rectangle1.posX == greyQueenSquareK[k].posX) {
                                redKnight2Rectangle1.posX = -1000;
                                redKnight2Rectangle1.x1 = -1000;
                                redKnight2Rectangle1.x2 = -1000;
                                redKnight2Rectangle2.x1 = -1000;
                                redKnight2Rectangle2.x2 = -1000;
                                redKnight2Base.x1 = -1000;
                                redKnight2Base.x2 = -1000;
                                redKnight2Ellipse.x1 = -1000;
                                redKnight2Ellipse.x2 = -1000;
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == greyQueenSquareK[k].posY + 100 &&
                           redPawnsBase[s].posX == greyQueenSquareK[k].posX + 100) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == greyQueenSquareK[k].posY + 100 &&
                           greyPawnsBase[s].posX == greyQueenSquareK[k].posX + 100) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(s != k &&
                           greyQueenSquareK[s].posY == greyQueenSquareK[k].posY + 100 &&
                           greyQueenSquareK[s].posX == greyQueenSquareK[k].posX + 100) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(s != k &&
                           greyQueenSquareK[s].posY == greyQueenSquareK[k].posY + 100 &&
                           greyQueenSquareK[s].posX == greyQueenSquareK[k].posX + 100) {
                            greyQueenSquareK[k].failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redQueenSquare.posY == greyQueenSquareK[k].posY + 100 &&
                       redQueenSquare.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == greyQueenSquareK[k].posY + 100 &&
                       greyQueenSquare.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == greyQueenSquareK[k].posY + 100 &&
                       redBishop1Square.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyQueenSquareK[k].posY + 100 &&
                       redBishop2Square.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == greyQueenSquareK[k].posY + 100 &&
                       redRook1Rectangle1.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == greyQueenSquareK[k].posY + 100 &&
                       redRook2Rectangle1.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == greyQueenSquareK[k].posY + 100 &&
                       redKnight1Rectangle1.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == greyQueenSquareK[k].posY + 100 &&
                       redKnight2Rectangle1.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == greyQueenSquareK[k].posY + 100 &&
                       redBishop1Square.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyQueenSquareK[k].posY + 100 &&
                       redBishop2Square.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == greyQueenSquareK[k].posY + 100 &&
                       greyRook1Rectangle1.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == greyQueenSquareK[k].posY + 100 &&
                       greyRook2Rectangle1.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == greyQueenSquareK[k].posY + 100 &&
                       greyKnight1Rectangle1.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == greyQueenSquareK[k].posY + 100 &&
                       greyKnight2Rectangle1.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == greyQueenSquareK[k].posY + 100 &&
                       greyBishop1Square.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == greyQueenSquareK[k].posY + 100 &&
                       greyBishop2Square.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == greyQueenSquareK[k].posY + 100 &&
                       greyQueenSquare.posX == greyQueenSquareK[k].posX + 100) {
                        greyQueenSquareK[k].failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        greyQueenSquareK[k].posY = greyQueenSquareK[k].posY + 100;
                        greyQueenSquareK[k].y1 = greyQueenSquareK[k].y1 + 100;
                        greyQueenSquareK[k].y2 = greyQueenSquareK[k].y2 + 100;
                        greyQueenRectangle1K[k].y1 = greyQueenRectangle1K[k].y1 + 100;
                        greyQueenRectangle1K[k].y2 = greyQueenRectangle1K[k].y2 + 100;
                        greyQueenRectangle2K[k].y1 = greyQueenRectangle2K[k].y1 + 100;
                        greyQueenRectangle2K[k].y2 = greyQueenRectangle2K[k].y2 + 100;
                        greyQueenRectangle3K[k].y1 = greyQueenRectangle3K[k].y1 + 100;
                        greyQueenRectangle3K[k].y2 = greyQueenRectangle3K[k].y2 + 100;
                        greyQueenEllipseK[k].y1 = greyQueenEllipseK[k].y1 + 100;
                        greyQueenEllipseK[k].y2 = greyQueenEllipseK[k].y2 + 100;
                        greyQueenBaseK[k].y1 = greyQueenBaseK[k].y1 + 100;
                        greyQueenBaseK[k].y2 = greyQueenBaseK[k].y2 + 100;
                        greyQueenSquareK[k].posX = greyQueenSquareK[k].posX + 100;
                        greyQueenSquareK[k].x1 = greyQueenSquareK[k].x1 + 100;
                        greyQueenSquareK[k].x2 = greyQueenSquareK[k].x2 + 100;
                        greyQueenRectangle1K[k].x1 = greyQueenRectangle1K[k].x1 + 100;
                        greyQueenRectangle1K[k].x2 = greyQueenRectangle1K[k].x2 + 100;
                        greyQueenRectangle2K[k].x1 = greyQueenRectangle2K[k].x1 + 100;
                        greyQueenRectangle2K[k].x2 = greyQueenRectangle2K[k].x2 + 100;
                        greyQueenRectangle3K[k].x1 = greyQueenRectangle3K[k].x1 + 100;
                        greyQueenRectangle3K[k].x2 = greyQueenRectangle3K[k].x2 + 100;
                        greyQueenEllipseK[k].x1 = greyQueenEllipseK[k].x1 + 100;
                        greyQueenEllipseK[k].x2 = greyQueenEllipseK[k].x2 + 100;
                        greyQueenBaseK[k].x1 = greyQueenBaseK[k].x1 + 100;
                        greyQueenBaseK[k].x2 = greyQueenBaseK[k].x2 + 100;
                    }

                    return flag;
                }
            }

            else {

                greyQueenSquareK[k].failedpath = TRUE;
                return TRUE;
            }
        }
    }
}

boolean moveGreyBishop1(UINT msg, int j, int i, int pos1, int ps1, int pos2, int ps2) {

    if(redKnight1Rectangle1.posX == greyBishop1Square.posX &&
       redKnight1Rectangle1.posY == greyBishop1Square.posY) {
        greyBishop1Square.failedpath = TRUE;
        return TRUE;
    }
    if(redKnight2Rectangle1.posX == greyBishop1Square.posX &&
       redKnight2Rectangle1.posY == greyBishop1Square.posY) {
        greyBishop1Square.failedpath = TRUE;
        return TRUE;
    }
    if(redBishop1Square.posX == greyBishop1Square.posX &&
       redBishop1Square.posY == greyBishop1Square.posY) {
        greyBishop1Square.failedpath = TRUE;
        return TRUE;
    }
    if(redBishop2Square.posX == greyBishop1Square.posX &&
       redBishop2Square.posY == greyBishop1Square.posY) {
        greyBishop1Square.failedpath = TRUE;
        return TRUE;
    }
    if(redRook1Rectangle1.posX == greyBishop1Square.posX &&
       redRook1Rectangle1.posY == greyBishop1Square.posY) {
        greyBishop1Square.failedpath = TRUE;
        return TRUE;
    }
    if(redRook2Rectangle1.posX == greyBishop1Square.posX &&
       redRook2Rectangle1.posY == greyBishop1Square.posY) {
        greyBishop1Square.failedpath = TRUE;
        return TRUE;
    }
    if(redQueenSquare.posX == greyBishop1Square.posX &&
       redQueenSquare.posY == greyBishop1Square.posY) {
        greyBishop1Square.failedpath = TRUE;
        return TRUE;
    }
    for(int g=0; g<8; g++) {
        if(redPawnsBase[g].posX == greyBishop1Square.posX &&
           redPawnsBase[g].posY == greyBishop1Square.posY) {
            greyBishop1Square.failedpath = TRUE;
            return TRUE;
        }
    }
    boolean fail = FALSE;
    if(pos1 == ps1) {
        fail = FALSE;
    } else if(pos1 == -ps1) {
        fail = FALSE;
    } else {
        fail = TRUE;
        greyBishop1Square.failedpath = fail;
    }
    if(pos1 < 0) {
        if(ps1 < 0) {
            boolean f = FALSE;
            if(pos1 < -100 && ps1 < -100) {
                f = moveGreyBishop1(msg, j, i, pos1 + 100, ps1 + 100, pos2, ps2);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    greyBishop1Square.posY = greyBishop1Square.posY - 100;
                    greyBishop1Square.posX = greyBishop1Square.posX - 100;
                    greyBishop1Square.y1 = greyBishop1Square.y1 - 100;
                    greyBishop1Square.x1 = greyBishop1Square.x1 - 100;
                    greyBishop1Square.y2 = greyBishop1Square.y2 - 100;
                    greyBishop1Square.x2 = greyBishop1Square.x2 - 100;
                    greyBishop1Rectangle.y1 = greyBishop1Rectangle.y1 - 100;
                    greyBishop1Rectangle.x1 = greyBishop1Rectangle.x1 - 100;
                    greyBishop1Rectangle.y2 = greyBishop1Rectangle.y2 - 100;
                    greyBishop1Rectangle.x2 = greyBishop1Rectangle.x2 - 100;
                    greyBishop1Ellipse.y1 = greyBishop1Ellipse.y1 - 100;
                    greyBishop1Ellipse.x1 = greyBishop1Ellipse.x1 - 100;
                    greyBishop1Ellipse.y2 = greyBishop1Ellipse.y2 - 100;
                    greyBishop1Ellipse.x2 = greyBishop1Ellipse.x2 - 100;
                    greyBishop1Base.y1 = greyBishop1Base.y1 - 100;
                    greyBishop1Base.x1 = greyBishop1Base.x1 - 100;
                    greyBishop1Base.y2 = greyBishop1Base.y2 - 100;
                    greyBishop1Base.x2 = greyBishop1Base.x2 - 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            if(greyPawnsBase[s].posY == greyBishop1Square.posY &&
                               greyPawnsBase[s].posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop2Square.posY == greyBishop1Square.posY &&
                               greyBishop2Square.posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight1Rectangle1.posY == greyBishop1Square.posY &&
                               greyKnight1Rectangle1.posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight2Rectangle1.posY == greyBishop1Square.posY &&
                               greyKnight2Rectangle1.posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook1Rectangle1.posY == greyBishop1Square.posY &&
                               greyRook1Rectangle1.posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook2Rectangle1.posY == greyBishop1Square.posY &&
                               greyRook2Rectangle1.posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKingSquare.posY == greyBishop1Square.posY &&
                               greyKingSquare.posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redPawnsBase[s].posY == greyBishop1Square.posY &&
                               redPawnsBase[s].posX == greyBishop1Square.posX) {
                                redPawnsBase[s].posX = -1000;
                                redPawnsBase[s].x1 = -1000;
                                redPawnsBase[s].x2 = -1000;
                                redPawnsEllipse[s].x1 = -1000;
                                redPawnsEllipse[s].x2 = -1000;
                            }
                            for(int z=0; z<8; z++) {
                                if(redQueenSquareK[z].posY == greyBishop1Square.posY &&
                                   redQueenSquareK[z].posX == greyBishop1Square.posX) {
                                    redQueenSquareK[z].posX = -1000;
                                    redQueenSquareK[z].x1 = -1000;
                                    redQueenSquareK[z].x2 = -1000;
                                    redQueenBaseK[z].x1 = -1000;
                                    redQueenBaseK[z].x2 = -1000;
                                    redQueenEllipseK[z].x1 = -1000;
                                    redQueenEllipseK[z].x2 = -1000;
                                    redQueenRectangle1K[z].x1 = -1000;
                                    redQueenRectangle1K[z].x2 = -1000;
                                    redQueenRectangle2K[z].x1 = -1000;
                                    redQueenRectangle2K[z].x2 = -1000;
                                    redQueenRectangle3K[z].x1 = -1000;
                                    redQueenRectangle3K[z].x2 = -1000;
                                }
                            }
                            if(redQueenSquare.posY == greyBishop1Square.posY &&
                               redQueenSquare.posX == greyBishop1Square.posX) {
                                redQueenSquare.posX = -1000;
                                redQueenSquare.x1 = -1000;
                                redQueenSquare.x2 = -1000;
                                redQueenBase.x1 = -1000;
                                redQueenBase.x2 = -1000;
                                redQueenEllipse.x1 = -1000;
                                redQueenEllipse.x2 = -1000;
                                redQueenRectangle1.x1 = -1000;
                                redQueenRectangle1.x2 = -1000;
                                redQueenRectangle2.x1 = -1000;
                                redQueenRectangle2.x2 = -1000;
                                redQueenRectangle3.x1 = -1000;
                                redQueenRectangle3.x2 = -1000;
                            }
                            if(redKnight1Rectangle1.posY == greyBishop1Square.posY &&
                               redKnight1Rectangle1.posX == greyBishop1Square.posX) {
                                redKnight1Rectangle1.posX = -1000;
                                redKnight1Rectangle1.x1 = -1000;
                                redKnight1Rectangle1.x2 = -1000;
                                redKnight1Rectangle2.x1 = -1000;
                                redKnight1Rectangle2.x2 = -1000;
                                redKnight1Base.x1 = -1000;
                                redKnight1Base.x2 = -1000;
                                redKnight1Ellipse.x1 = -1000;
                                redKnight1Ellipse.x2 = -1000;
                            }
                            if(redKnight2Rectangle1.posY == greyBishop1Square.posY &&
                               redKnight2Rectangle1.posX == greyBishop1Square.posX) {
                                redKnight2Rectangle1.posX = -1000;
                                redKnight2Rectangle1.x1 = -1000;
                                redKnight2Rectangle1.x2 = -1000;
                                redKnight2Rectangle2.x1 = -1000;
                                redKnight2Rectangle2.x2 = -1000;
                                redKnight2Base.x1 = -1000;
                                redKnight2Base.x2 = -1000;
                                redKnight2Ellipse.x1 = -1000;
                                redKnight2Ellipse.x2 = -1000;
                            }
                            if(redBishop2Square.posY == greyBishop1Square.posY &&
                               redBishop2Square.posX == greyBishop1Square.posX) {
                                redBishop2Square.posX = -1000;
                                redBishop2Square.x1 = -1000;
                                redBishop2Square.x2 = -1000;
                                redBishop2Rectangle.x1 = -1000;
                                redBishop2Rectangle.x2 = -1000;
                                redBishop2Base.x1 = -1000;
                                redBishop2Base.x2 = -1000;
                                redBishop2Ellipse.x1 = -1000;
                                redBishop2Ellipse.x2 = -1000;
                            }
                            if(redRook1Rectangle1.posY == greyBishop1Square.posY &&
                               redRook1Rectangle1.posX == greyBishop1Square.posX) {
                                redRook1Rectangle1.posX = -1000;
                                redRook1Rectangle1.x1 = -1000;
                                redRook1Rectangle1.x2 = -1000;
                                redRook1Rectangle2.x1 = -1000;
                                redRook1Rectangle2.x2 = -1000;
                                redRook1Base.x1 = -1000;
                                redRook1Base.x2 = -1000;
                                redRook1Ellipse.x1 = -1000;
                                redRook1Ellipse.x2 = -1000;
                            }
                            if(redRook2Rectangle1.posY == greyBishop1Square.posY &&
                               redRook2Rectangle1.posX == greyBishop1Square.posX) {
                                redRook2Rectangle1.posX = -1000;
                                redRook2Rectangle1.x1 = -1000;
                                redRook2Rectangle1.x2 = -1000;
                                redRook2Rectangle2.x1 = -1000;
                                redRook2Rectangle2.x2 = -1000;
                                redRook2Base.x1 = -1000;
                                redRook2Base.x2 = -1000;
                                redRook2Ellipse.x1 = -1000;
                                redRook2Ellipse.x2 = -1000;
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == greyBishop1Square.posY - 100 &&
                           redPawnsBase[s].posX == greyBishop1Square.posX - 100) {
                            greyBishop1Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == greyBishop1Square.posY - 100 &&
                           greyPawnsBase[s].posX == greyBishop1Square.posX - 100) {
                            greyBishop1Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redQueenSquare.posY == greyBishop1Square.posY - 100 &&
                       redQueenSquare.posX == greyBishop1Square.posX - 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyBishop1Square.posY - 100 &&
                       redBishop2Square.posX == greyBishop1Square.posX - 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == greyBishop1Square.posY - 100 &&
                       redBishop1Square.posX == greyBishop1Square.posX - 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == greyBishop1Square.posY - 100 &&
                       redRook1Rectangle1.posX == greyBishop1Square.posX - 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == greyBishop1Square.posY - 100 &&
                       redRook2Rectangle1.posX == greyBishop1Square.posX - 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == greyBishop1Square.posY - 100 &&
                       redKnight1Rectangle1.posX == greyBishop1Square.posX - 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == greyBishop1Square.posY - 100 &&
                       redKnight2Rectangle1.posX == greyBishop1Square.posX - 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == greyBishop1Square.posY - 100 &&
                       greyBishop2Square.posX == greyBishop1Square.posX - 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == greyBishop1Square.posY - 100 &&
                       greyRook1Rectangle1.posX == greyBishop1Square.posX - 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == greyBishop1Square.posY - 100 &&
                       greyRook2Rectangle1.posX == greyBishop1Square.posX - 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == greyBishop1Square.posY - 100 &&
                       greyKnight1Rectangle1.posX == greyBishop1Square.posX - 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == greyBishop1Square.posY - 100 &&
                       greyKnight2Rectangle1.posX == greyBishop1Square.posX - 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        greyBishop1Square.posY = greyBishop1Square.posY - 100;
                        greyBishop1Square.posX = greyBishop1Square.posX - 100;
                        greyBishop1Square.y1 = greyBishop1Square.y1 - 100;
                        greyBishop1Square.x1 = greyBishop1Square.x1 - 100;
                        greyBishop1Square.y2 = greyBishop1Square.y2 - 100;
                        greyBishop1Square.x2 = greyBishop1Square.x2 - 100;
                        greyBishop1Rectangle.y1 = greyBishop1Rectangle.y1 - 100;
                        greyBishop1Rectangle.x1 = greyBishop1Rectangle.x1 - 100;
                        greyBishop1Rectangle.y2 = greyBishop1Rectangle.y2 - 100;
                        greyBishop1Rectangle.x2 = greyBishop1Rectangle.x2 - 100;
                        greyBishop1Ellipse.y1 = greyBishop1Ellipse.y1 - 100;
                        greyBishop1Ellipse.x1 = greyBishop1Ellipse.x1 - 100;
                        greyBishop1Ellipse.y2 = greyBishop1Ellipse.y2 - 100;
                        greyBishop1Ellipse.x2 = greyBishop1Ellipse.x2 - 100;
                        greyBishop1Base.y1 = greyBishop1Base.y1 - 100;
                        greyBishop1Base.x1 = greyBishop1Base.x1 - 100;
                        greyBishop1Base.y2 = greyBishop1Base.y2 - 100;
                        greyBishop1Base.x2 = greyBishop1Base.x2 - 100;
                    }

                    return flag;
                }
            }

            else {

                greyBishop1Square.failedpath = TRUE;
                return TRUE;
            }
        }
        if(ps1 > 0) {
            boolean f = FALSE;
            if(pos1 < -100 && ps1 > 100) {
                f = moveGreyBishop1(msg, j, i, pos1 + 100, ps1 - 100, pos2, ps2);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    greyBishop1Square.posY = greyBishop1Square.posY - 100;
                    greyBishop1Square.posX = greyBishop1Square.posX + 100;
                    greyBishop1Square.y1 = greyBishop1Square.y1 - 100;
                    greyBishop1Square.x1 = greyBishop1Square.x1 + 100;
                    greyBishop1Square.y2 = greyBishop1Square.y2 - 100;
                    greyBishop1Square.x2 = greyBishop1Square.x2 + 100;
                    greyBishop1Rectangle.y1 = greyBishop1Rectangle.y1 - 100;
                    greyBishop1Rectangle.x1 = greyBishop1Rectangle.x1 + 100;
                    greyBishop1Rectangle.y2 = greyBishop1Rectangle.y2 - 100;
                    greyBishop1Rectangle.x2 = greyBishop1Rectangle.x2 + 100;
                    greyBishop1Ellipse.y1 = greyBishop1Ellipse.y1 - 100;
                    greyBishop1Ellipse.x1 = greyBishop1Ellipse.x1 + 100;
                    greyBishop1Ellipse.y2 = greyBishop1Ellipse.y2 - 100;
                    greyBishop1Ellipse.x2 = greyBishop1Ellipse.x2 + 100;
                    greyBishop1Base.y1 = greyBishop1Base.y1 - 100;
                    greyBishop1Base.x1 = greyBishop1Base.x1 + 100;
                    greyBishop1Base.y2 = greyBishop1Base.y2 - 100;
                    greyBishop1Base.x2 = greyBishop1Base.x2 + 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            if(greyPawnsBase[s].posY == greyBishop1Square.posY &&
                               greyPawnsBase[s].posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop2Square.posY == greyBishop1Square.posY &&
                               greyBishop2Square.posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight1Rectangle1.posY == greyBishop1Square.posY &&
                               greyKnight1Rectangle1.posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight2Rectangle1.posY == greyBishop1Square.posY &&
                               greyKnight2Rectangle1.posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook1Rectangle1.posY == greyBishop1Square.posY &&
                               greyRook1Rectangle1.posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook2Rectangle1.posY == greyBishop1Square.posY &&
                               greyRook2Rectangle1.posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKingSquare.posY == greyBishop1Square.posY &&
                               greyKingSquare.posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redPawnsBase[s].posY == greyBishop1Square.posY &&
                               redPawnsBase[s].posX == greyBishop1Square.posX) {
                                redPawnsBase[s].posX = -1000;
                                redPawnsBase[s].x1 = -1000;
                                redPawnsBase[s].x2 = -1000;
                                redPawnsEllipse[s].x1 = -1000;
                                redPawnsEllipse[s].x2 = -1000;
                            }
                            for(int z=0; z<8; z++) {
                                if(redQueenSquareK[z].posY == greyBishop1Square.posY &&
                                   redQueenSquareK[z].posX == greyBishop1Square.posX) {
                                    redQueenSquareK[z].posX = -1000;
                                    redQueenSquareK[z].x1 = -1000;
                                    redQueenSquareK[z].x2 = -1000;
                                    redQueenBaseK[z].x1 = -1000;
                                    redQueenBaseK[z].x2 = -1000;
                                    redQueenEllipseK[z].x1 = -1000;
                                    redQueenEllipseK[z].x2 = -1000;
                                    redQueenRectangle1K[z].x1 = -1000;
                                    redQueenRectangle1K[z].x2 = -1000;
                                    redQueenRectangle2K[z].x1 = -1000;
                                    redQueenRectangle2K[z].x2 = -1000;
                                    redQueenRectangle3K[z].x1 = -1000;
                                    redQueenRectangle3K[z].x2 = -1000;
                                }
                            }
                            if(redQueenSquare.posY == greyBishop1Square.posY &&
                               redQueenSquare.posX == greyBishop1Square.posX) {
                                redQueenSquare.posX = -1000;
                                redQueenSquare.x1 = -1000;
                                redQueenSquare.x2 = -1000;
                                redQueenBase.x1 = -1000;
                                redQueenBase.x2 = -1000;
                                redQueenEllipse.x1 = -1000;
                                redQueenEllipse.x2 = -1000;
                                redQueenRectangle1.x1 = -1000;
                                redQueenRectangle1.x2 = -1000;
                                redQueenRectangle2.x1 = -1000;
                                redQueenRectangle2.x2 = -1000;
                                redQueenRectangle3.x1 = -1000;
                                redQueenRectangle3.x2 = -1000;
                            }
                            if(redKnight1Rectangle1.posY == greyBishop1Square.posY &&
                               redKnight1Rectangle1.posX == greyBishop1Square.posX) {
                                redKnight1Rectangle1.posX = -1000;
                                redKnight1Rectangle1.x1 = -1000;
                                redKnight1Rectangle1.x2 = -1000;
                                redKnight1Rectangle2.x1 = -1000;
                                redKnight1Rectangle2.x2 = -1000;
                                redKnight1Base.x1 = -1000;
                                redKnight1Base.x2 = -1000;
                                redKnight1Ellipse.x1 = -1000;
                                redKnight1Ellipse.x2 = -1000;
                            }
                            if(redKnight2Rectangle1.posY == greyBishop1Square.posY &&
                               redKnight2Rectangle1.posX == greyBishop1Square.posX) {
                                redKnight2Rectangle1.posX = -1000;
                                redKnight2Rectangle1.x1 = -1000;
                                redKnight2Rectangle1.x2 = -1000;
                                redKnight2Rectangle2.x1 = -1000;
                                redKnight2Rectangle2.x2 = -1000;
                                redKnight2Base.x1 = -1000;
                                redKnight2Base.x2 = -1000;
                                redKnight2Ellipse.x1 = -1000;
                                redKnight2Ellipse.x2 = -1000;
                            }
                            if(redBishop2Square.posY == greyBishop1Square.posY &&
                               redBishop2Square.posX == greyBishop1Square.posX) {
                                redBishop2Square.posX = -1000;
                                redBishop2Square.x1 = -1000;
                                redBishop2Square.x2 = -1000;
                                redBishop2Rectangle.x1 = -1000;
                                redBishop2Rectangle.x2 = -1000;
                                redBishop2Base.x1 = -1000;
                                redBishop2Base.x2 = -1000;
                                redBishop2Ellipse.x1 = -1000;
                                redBishop2Ellipse.x2 = -1000;
                            }
                            if(redRook1Rectangle1.posY == greyBishop1Square.posY &&
                               redRook1Rectangle1.posX == greyBishop1Square.posX) {
                                redRook1Rectangle1.posX = -1000;
                                redRook1Rectangle1.x1 = -1000;
                                redRook1Rectangle1.x2 = -1000;
                                redRook1Rectangle2.x1 = -1000;
                                redRook1Rectangle2.x2 = -1000;
                                redRook1Base.x1 = -1000;
                                redRook1Base.x2 = -1000;
                                redRook1Ellipse.x1 = -1000;
                                redRook1Ellipse.x2 = -1000;
                            }
                            if(redRook2Rectangle1.posY == greyBishop1Square.posY &&
                               redRook2Rectangle1.posX == greyBishop1Square.posX) {
                                redRook2Rectangle1.posX = -1000;
                                redRook2Rectangle1.x1 = -1000;
                                redRook2Rectangle1.x2 = -1000;
                                redRook2Rectangle2.x1 = -1000;
                                redRook2Rectangle2.x2 = -1000;
                                redRook2Base.x1 = -1000;
                                redRook2Base.x2 = -1000;
                                redRook2Ellipse.x1 = -1000;
                                redRook2Ellipse.x2 = -1000;
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == greyBishop1Square.posY - 100 &&
                           redPawnsBase[s].posX == greyBishop1Square.posX + 100) {
                            greyBishop1Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == greyBishop1Square.posY - 100 &&
                           greyPawnsBase[s].posX == greyBishop1Square.posX + 100) {
                            greyBishop1Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redQueenSquare.posY == greyBishop1Square.posY - 100 &&
                       redQueenSquare.posX == greyBishop1Square.posX + 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyBishop1Square.posY - 100 &&
                       redBishop2Square.posX == greyBishop1Square.posX + 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == greyBishop1Square.posY - 100 &&
                       redBishop1Square.posX == greyBishop1Square.posX + 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == greyBishop1Square.posY - 100 &&
                       redRook1Rectangle1.posX == greyBishop1Square.posX + 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == greyBishop1Square.posY - 100 &&
                       redRook2Rectangle1.posX == greyBishop1Square.posX + 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == greyBishop1Square.posY - 100 &&
                       redKnight1Rectangle1.posX == greyBishop1Square.posX + 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == greyBishop1Square.posY - 100 &&
                       redKnight2Rectangle1.posX == greyBishop1Square.posX + 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == greyBishop1Square.posY - 100 &&
                       greyBishop2Square.posX == greyBishop1Square.posX + 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == greyBishop1Square.posY - 100 &&
                       greyRook1Rectangle1.posX == greyBishop1Square.posX + 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == greyBishop1Square.posY - 100 &&
                       greyRook2Rectangle1.posX == greyBishop1Square.posX + 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == greyBishop1Square.posY - 100 &&
                       greyKnight1Rectangle1.posX == greyBishop1Square.posX + 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == greyBishop1Square.posY - 100 &&
                       greyKnight2Rectangle1.posX == greyBishop1Square.posX + 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        greyBishop1Square.posY = greyBishop1Square.posY - 100;
                        greyBishop1Square.posX = greyBishop1Square.posX + 100;
                        greyBishop1Square.y1 = greyBishop1Square.y1 - 100;
                        greyBishop1Square.x1 = greyBishop1Square.x1 + 100;
                        greyBishop1Square.y2 = greyBishop1Square.y2 - 100;
                        greyBishop1Square.x2 = greyBishop1Square.x2 + 100;
                        greyBishop1Rectangle.y1 = greyBishop1Rectangle.y1 - 100;
                        greyBishop1Rectangle.x1 = greyBishop1Rectangle.x1 + 100;
                        greyBishop1Rectangle.y2 = greyBishop1Rectangle.y2 - 100;
                        greyBishop1Rectangle.x2 = greyBishop1Rectangle.x2 + 100;
                        greyBishop1Ellipse.y1 = greyBishop1Ellipse.y1 - 100;
                        greyBishop1Ellipse.x1 = greyBishop1Ellipse.x1 + 100;
                        greyBishop1Ellipse.y2 = greyBishop1Ellipse.y2 - 100;
                        greyBishop1Ellipse.x2 = greyBishop1Ellipse.x2 + 100;
                        greyBishop1Base.y1 = greyBishop1Base.y1 - 100;
                        greyBishop1Base.x1 = greyBishop1Base.x1 + 100;
                        greyBishop1Base.y2 = greyBishop1Base.y2 - 100;
                        greyBishop1Base.x2 = greyBishop1Base.x2 + 100;
                    }

                    return flag;
                }
            }

            else {

                greyBishop1Square.failedpath = TRUE;
                return TRUE;
            }
        }
    } else if(pos1 > 0) {
        if(ps1 < 0) {
            boolean f = FALSE;
            if(pos1 > 100 && ps1 < -100) {
                f = moveGreyBishop1(msg, j, i, pos1 - 100, ps1 + 100, pos2, ps2);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    greyBishop1Square.posY = greyBishop1Square.posY + 100;
                    greyBishop1Square.posX = greyBishop1Square.posX - 100;
                    greyBishop1Square.y1 = greyBishop1Square.y1 + 100;
                    greyBishop1Square.x1 = greyBishop1Square.x1 - 100;
                    greyBishop1Square.y2 = greyBishop1Square.y2 + 100;
                    greyBishop1Square.x2 = greyBishop1Square.x2 - 100;
                    greyBishop1Rectangle.y1 = greyBishop1Rectangle.y1 + 100;
                    greyBishop1Rectangle.x1 = greyBishop1Rectangle.x1 - 100;
                    greyBishop1Rectangle.y2 = greyBishop1Rectangle.y2 + 100;
                    greyBishop1Rectangle.x2 = greyBishop1Rectangle.x2 - 100;
                    greyBishop1Ellipse.y1 = greyBishop1Ellipse.y1 + 100;
                    greyBishop1Ellipse.x1 = greyBishop1Ellipse.x1 - 100;
                    greyBishop1Ellipse.y2 = greyBishop1Ellipse.y2 + 100;
                    greyBishop1Ellipse.x2 = greyBishop1Ellipse.x2 - 100;
                    greyBishop1Base.y1 = greyBishop1Base.y1 + 100;
                    greyBishop1Base.x1 = greyBishop1Base.x1 - 100;
                    greyBishop1Base.y2 = greyBishop1Base.y2 + 100;
                    greyBishop1Base.x2 = greyBishop1Base.x2 - 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            if(greyPawnsBase[s].posY == greyBishop1Square.posY &&
                               greyPawnsBase[s].posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop2Square.posY == greyBishop1Square.posY &&
                               greyBishop2Square.posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight1Rectangle1.posY == greyBishop1Square.posY &&
                               greyKnight1Rectangle1.posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight2Rectangle1.posY == greyBishop1Square.posY &&
                               greyKnight2Rectangle1.posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook1Rectangle1.posY == greyBishop1Square.posY &&
                               greyRook1Rectangle1.posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook2Rectangle1.posY == greyBishop1Square.posY &&
                               greyRook2Rectangle1.posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKingSquare.posY == greyBishop1Square.posY &&
                               greyKingSquare.posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redPawnsBase[s].posY == greyBishop1Square.posY &&
                               redPawnsBase[s].posX == greyBishop1Square.posX) {
                                redPawnsBase[s].posX = -1000;
                                redPawnsBase[s].x1 = -1000;
                                redPawnsBase[s].x2 = -1000;
                                redPawnsEllipse[s].x1 = -1000;
                                redPawnsEllipse[s].x2 = -1000;
                            }
                            for(int z=0; z<8; z++) {
                                if(redQueenSquareK[z].posY == greyBishop1Square.posY &&
                                   redQueenSquareK[z].posX == greyBishop1Square.posX) {
                                    redQueenSquareK[z].posX = -1000;
                                    redQueenSquareK[z].x1 = -1000;
                                    redQueenSquareK[z].x2 = -1000;
                                    redQueenBaseK[z].x1 = -1000;
                                    redQueenBaseK[z].x2 = -1000;
                                    redQueenEllipseK[z].x1 = -1000;
                                    redQueenEllipseK[z].x2 = -1000;
                                    redQueenRectangle1K[z].x1 = -1000;
                                    redQueenRectangle1K[z].x2 = -1000;
                                    redQueenRectangle2K[z].x1 = -1000;
                                    redQueenRectangle2K[z].x2 = -1000;
                                    redQueenRectangle3K[z].x1 = -1000;
                                    redQueenRectangle3K[z].x2 = -1000;
                                }
                            }
                            if(redQueenSquare.posY == greyBishop1Square.posY &&
                               redQueenSquare.posX == greyBishop1Square.posX) {
                                redQueenSquare.posX = -1000;
                                redQueenSquare.x1 = -1000;
                                redQueenSquare.x2 = -1000;
                                redQueenBase.x1 = -1000;
                                redQueenBase.x2 = -1000;
                                redQueenEllipse.x1 = -1000;
                                redQueenEllipse.x2 = -1000;
                                redQueenRectangle1.x1 = -1000;
                                redQueenRectangle1.x2 = -1000;
                                redQueenRectangle2.x1 = -1000;
                                redQueenRectangle2.x2 = -1000;
                                redQueenRectangle3.x1 = -1000;
                                redQueenRectangle3.x2 = -1000;
                            }
                            if(redKnight1Rectangle1.posY == greyBishop1Square.posY &&
                               redKnight1Rectangle1.posX == greyBishop1Square.posX) {
                                redKnight1Rectangle1.posX = -1000;
                                redKnight1Rectangle1.x1 = -1000;
                                redKnight1Rectangle1.x2 = -1000;
                                redKnight1Rectangle2.x1 = -1000;
                                redKnight1Rectangle2.x2 = -1000;
                                redKnight1Base.x1 = -1000;
                                redKnight1Base.x2 = -1000;
                                redKnight1Ellipse.x1 = -1000;
                                redKnight1Ellipse.x2 = -1000;
                            }
                            if(redKnight2Rectangle1.posY == greyBishop1Square.posY &&
                               redKnight2Rectangle1.posX == greyBishop1Square.posX) {
                                redKnight2Rectangle1.posX = -1000;
                                redKnight2Rectangle1.x1 = -1000;
                                redKnight2Rectangle1.x2 = -1000;
                                redKnight2Rectangle2.x1 = -1000;
                                redKnight2Rectangle2.x2 = -1000;
                                redKnight2Base.x1 = -1000;
                                redKnight2Base.x2 = -1000;
                                redKnight2Ellipse.x1 = -1000;
                                redKnight2Ellipse.x2 = -1000;
                            }
                            if(redBishop2Square.posY == greyBishop1Square.posY &&
                               redBishop2Square.posX == greyBishop1Square.posX) {
                                redBishop2Square.posX = -1000;
                                redBishop2Square.x1 = -1000;
                                redBishop2Square.x2 = -1000;
                                redBishop2Rectangle.x1 = -1000;
                                redBishop2Rectangle.x2 = -1000;
                                redBishop2Base.x1 = -1000;
                                redBishop2Base.x2 = -1000;
                                redBishop2Ellipse.x1 = -1000;
                                redBishop2Ellipse.x2 = -1000;
                            }
                            if(redRook1Rectangle1.posY == greyBishop1Square.posY &&
                               redRook1Rectangle1.posX == greyBishop1Square.posX) {
                                redRook1Rectangle1.posX = -1000;
                                redRook1Rectangle1.x1 = -1000;
                                redRook1Rectangle1.x2 = -1000;
                                redRook1Rectangle2.x1 = -1000;
                                redRook1Rectangle2.x2 = -1000;
                                redRook1Base.x1 = -1000;
                                redRook1Base.x2 = -1000;
                                redRook1Ellipse.x1 = -1000;
                                redRook1Ellipse.x2 = -1000;
                            }
                            if(redRook2Rectangle1.posY == greyBishop1Square.posY &&
                               redRook2Rectangle1.posX == greyBishop1Square.posX) {
                                redRook2Rectangle1.posX = -1000;
                                redRook2Rectangle1.x1 = -1000;
                                redRook2Rectangle1.x2 = -1000;
                                redRook2Rectangle2.x1 = -1000;
                                redRook2Rectangle2.x2 = -1000;
                                redRook2Base.x1 = -1000;
                                redRook2Base.x2 = -1000;
                                redRook2Ellipse.x1 = -1000;
                                redRook2Ellipse.x2 = -1000;
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == greyBishop1Square.posY + 100 &&
                           redPawnsBase[s].posX == greyBishop1Square.posX - 100) {
                            greyBishop1Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == greyBishop1Square.posY + 100 &&
                           greyPawnsBase[s].posX == greyBishop1Square.posX - 100) {
                            greyBishop1Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redQueenSquare.posY == greyBishop1Square.posY + 100 &&
                       redQueenSquare.posX == greyBishop1Square.posX - 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == greyBishop1Square.posY + 100 &&
                       redBishop1Square.posX == greyBishop1Square.posX - 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyBishop1Square.posY + 100 &&
                       redBishop2Square.posX == greyBishop1Square.posX - 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == greyBishop1Square.posY + 100 &&
                       redRook1Rectangle1.posX == greyBishop1Square.posX - 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == greyBishop1Square.posY + 100 &&
                       redRook2Rectangle1.posX == greyBishop1Square.posX - 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == greyBishop1Square.posY + 100 &&
                       redKnight1Rectangle1.posX == greyBishop1Square.posX - 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == greyBishop1Square.posY + 100 &&
                       redKnight2Rectangle1.posX == greyBishop1Square.posX - 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == greyBishop1Square.posY + 100 &&
                       greyBishop2Square.posX == greyBishop1Square.posX - 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == greyBishop1Square.posY + 100 &&
                       greyRook1Rectangle1.posX == greyBishop1Square.posX - 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == greyBishop1Square.posY + 100 &&
                       greyRook2Rectangle1.posX == greyBishop1Square.posX - 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == greyBishop1Square.posY + 100 &&
                       greyKnight1Rectangle1.posX == greyBishop1Square.posX - 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == greyBishop1Square.posY + 100 &&
                       greyKnight2Rectangle1.posX == greyBishop1Square.posX - 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        greyBishop1Square.posY = greyBishop1Square.posY + 100;
                        greyBishop1Square.posX = greyBishop1Square.posX - 100;
                        greyBishop1Square.y1 = greyBishop1Square.y1 + 100;
                        greyBishop1Square.x1 = greyBishop1Square.x1 - 100;
                        greyBishop1Square.y2 = greyBishop1Square.y2 + 100;
                        greyBishop1Square.x2 = greyBishop1Square.x2 - 100;
                        greyBishop1Rectangle.y1 = greyBishop1Rectangle.y1 + 100;
                        greyBishop1Rectangle.x1 = greyBishop1Rectangle.x1 - 100;
                        greyBishop1Rectangle.y2 = greyBishop1Rectangle.y2 + 100;
                        greyBishop1Rectangle.x2 = greyBishop1Rectangle.x2 - 100;
                        greyBishop1Ellipse.y1 = greyBishop1Ellipse.y1 + 100;
                        greyBishop1Ellipse.x1 = greyBishop1Ellipse.x1 - 100;
                        greyBishop1Ellipse.y2 = greyBishop1Ellipse.y2 + 100;
                        greyBishop1Ellipse.x2 = greyBishop1Ellipse.x2 - 100;
                        greyBishop1Base.y1 = greyBishop1Base.y1 + 100;
                        greyBishop1Base.x1 = greyBishop1Base.x1 - 100;
                        greyBishop1Base.y2 = greyBishop1Base.y2 + 100;
                        greyBishop1Base.x2 = greyBishop1Base.x2 - 100;
                    }

                    return flag;
                }
            }

            else {

                greyBishop1Square.failedpath = TRUE;
                return TRUE;
            }
        }
        if(ps1 > 0) {
            boolean f = FALSE;
            if(pos1 > 100 && ps1 > 100) {
                f = moveGreyBishop1(msg, j, i, pos1 - 100, ps1 - 100, pos2, ps2);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    greyBishop1Square.posY = greyBishop1Square.posY + 100;
                    greyBishop1Square.posX = greyBishop1Square.posX + 100;
                    greyBishop1Square.y1 = greyBishop1Square.y1 + 100;
                    greyBishop1Square.x1 = greyBishop1Square.x1 + 100;
                    greyBishop1Square.y2 = greyBishop1Square.y2 + 100;
                    greyBishop1Square.x2 = greyBishop1Square.x2 + 100;
                    greyBishop1Rectangle.y1 = greyBishop1Rectangle.y1 + 100;
                    greyBishop1Rectangle.x1 = greyBishop1Rectangle.x1 + 100;
                    greyBishop1Rectangle.y2 = greyBishop1Rectangle.y2 + 100;
                    greyBishop1Rectangle.x2 = greyBishop1Rectangle.x2 + 100;
                    greyBishop1Ellipse.y1 = greyBishop1Ellipse.y1 + 100;
                    greyBishop1Ellipse.x1 = greyBishop1Ellipse.x1 + 100;
                    greyBishop1Ellipse.y2 = greyBishop1Ellipse.y2 + 100;
                    greyBishop1Ellipse.x2 = greyBishop1Ellipse.x2 + 100;
                    greyBishop1Base.y1 = greyBishop1Base.y1 + 100;
                    greyBishop1Base.x1 = greyBishop1Base.x1 + 100;
                    greyBishop1Base.y2 = greyBishop1Base.y2 + 100;
                    greyBishop1Base.x2 = greyBishop1Base.x2 + 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            if(greyPawnsBase[s].posY == greyBishop1Square.posY &&
                               greyPawnsBase[s].posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop2Square.posY == greyBishop1Square.posY &&
                               greyBishop2Square.posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight1Rectangle1.posY == greyBishop1Square.posY &&
                               greyKnight1Rectangle1.posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight2Rectangle1.posY == greyBishop1Square.posY &&
                               greyKnight2Rectangle1.posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook1Rectangle1.posY == greyBishop1Square.posY &&
                               greyRook1Rectangle1.posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook2Rectangle1.posY == greyBishop1Square.posY &&
                               greyRook2Rectangle1.posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKingSquare.posY == greyBishop1Square.posY &&
                               greyKingSquare.posX == greyBishop1Square.posX) {
                                greyBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redPawnsBase[s].posY == greyBishop1Square.posY &&
                               redPawnsBase[s].posX == greyBishop1Square.posX) {
                                redPawnsBase[s].posX = -1000;
                                redPawnsBase[s].x1 = -1000;
                                redPawnsBase[s].x2 = -1000;
                                redPawnsEllipse[s].x1 = -1000;
                                redPawnsEllipse[s].x2 = -1000;
                            }
                            for(int z=0; z<8; z++) {
                                if(redQueenSquareK[z].posY == greyBishop1Square.posY &&
                                   redQueenSquareK[z].posX == greyBishop1Square.posX) {
                                    redQueenSquareK[z].posX = -1000;
                                    redQueenSquareK[z].x1 = -1000;
                                    redQueenSquareK[z].x2 = -1000;
                                    redQueenBaseK[z].x1 = -1000;
                                    redQueenBaseK[z].x2 = -1000;
                                    redQueenEllipseK[z].x1 = -1000;
                                    redQueenEllipseK[z].x2 = -1000;
                                    redQueenRectangle1K[z].x1 = -1000;
                                    redQueenRectangle1K[z].x2 = -1000;
                                    redQueenRectangle2K[z].x1 = -1000;
                                    redQueenRectangle2K[z].x2 = -1000;
                                    redQueenRectangle3K[z].x1 = -1000;
                                    redQueenRectangle3K[z].x2 = -1000;
                                }
                            }
                            if(redQueenSquare.posY == greyBishop1Square.posY &&
                               redQueenSquare.posX == greyBishop1Square.posX) {
                                redQueenSquare.posX = -1000;
                                redQueenSquare.x1 = -1000;
                                redQueenSquare.x2 = -1000;
                                redQueenBase.x1 = -1000;
                                redQueenBase.x2 = -1000;
                                redQueenEllipse.x1 = -1000;
                                redQueenEllipse.x2 = -1000;
                                redQueenRectangle1.x1 = -1000;
                                redQueenRectangle1.x2 = -1000;
                                redQueenRectangle2.x1 = -1000;
                                redQueenRectangle2.x2 = -1000;
                                redQueenRectangle3.x1 = -1000;
                                redQueenRectangle3.x2 = -1000;
                            }
                            if(redKnight1Rectangle1.posY == greyBishop1Square.posY &&
                               redKnight1Rectangle1.posX == greyBishop1Square.posX) {
                                redKnight1Rectangle1.posX = -1000;
                                redKnight1Rectangle1.x1 = -1000;
                                redKnight1Rectangle1.x2 = -1000;
                                redKnight1Rectangle2.x1 = -1000;
                                redKnight1Rectangle2.x2 = -1000;
                                redKnight1Base.x1 = -1000;
                                redKnight1Base.x2 = -1000;
                                redKnight1Ellipse.x1 = -1000;
                                redKnight1Ellipse.x2 = -1000;
                            }
                            if(redKnight2Rectangle1.posY == greyBishop1Square.posY &&
                               redKnight2Rectangle1.posX == greyBishop1Square.posX) {
                                redKnight2Rectangle1.posX = -1000;
                                redKnight2Rectangle1.x1 = -1000;
                                redKnight2Rectangle1.x2 = -1000;
                                redKnight2Rectangle2.x1 = -1000;
                                redKnight2Rectangle2.x2 = -1000;
                                redKnight2Base.x1 = -1000;
                                redKnight2Base.x2 = -1000;
                                redKnight2Ellipse.x1 = -1000;
                                redKnight2Ellipse.x2 = -1000;
                            }
                            if(redBishop2Square.posY == greyBishop1Square.posY &&
                               redBishop2Square.posX == greyBishop1Square.posX) {
                                redBishop2Square.posX = -1000;
                                redBishop2Square.x1 = -1000;
                                redBishop2Square.x2 = -1000;
                                redBishop2Rectangle.x1 = -1000;
                                redBishop2Rectangle.x2 = -1000;
                                redBishop2Base.x1 = -1000;
                                redBishop2Base.x2 = -1000;
                                redBishop2Ellipse.x1 = -1000;
                                redBishop2Ellipse.x2 = -1000;
                            }
                            if(redRook1Rectangle1.posY == greyBishop1Square.posY &&
                               redRook1Rectangle1.posX == greyBishop1Square.posX) {
                                redRook1Rectangle1.posX = -1000;
                                redRook1Rectangle1.x1 = -1000;
                                redRook1Rectangle1.x2 = -1000;
                                redRook1Rectangle2.x1 = -1000;
                                redRook1Rectangle2.x2 = -1000;
                                redRook1Base.x1 = -1000;
                                redRook1Base.x2 = -1000;
                                redRook1Ellipse.x1 = -1000;
                                redRook1Ellipse.x2 = -1000;
                            }
                            if(redRook2Rectangle1.posY == greyBishop1Square.posY &&
                               redRook2Rectangle1.posX == greyBishop1Square.posX) {
                                redRook2Rectangle1.posX = -1000;
                                redRook2Rectangle1.x1 = -1000;
                                redRook2Rectangle1.x2 = -1000;
                                redRook2Rectangle2.x1 = -1000;
                                redRook2Rectangle2.x2 = -1000;
                                redRook2Base.x1 = -1000;
                                redRook2Base.x2 = -1000;
                                redRook2Ellipse.x1 = -1000;
                                redRook2Ellipse.x2 = -1000;
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == greyBishop1Square.posY + 100 &&
                           redPawnsBase[s].posX == greyBishop1Square.posX + 100) {
                            greyBishop1Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == greyBishop1Square.posY + 100 &&
                           greyPawnsBase[s].posX == greyBishop1Square.posX + 100) {
                            greyBishop1Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redQueenSquare.posY == greyBishop1Square.posY + 100 &&
                       redQueenSquare.posX == greyBishop1Square.posX + 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == greyBishop1Square.posY + 100 &&
                       redBishop1Square.posX == greyBishop1Square.posX + 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyBishop1Square.posY + 100 &&
                       redBishop2Square.posX == greyBishop1Square.posX + 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == greyBishop1Square.posY + 100 &&
                       redRook1Rectangle1.posX == greyBishop1Square.posX + 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == greyBishop1Square.posY + 100 &&
                       redRook2Rectangle1.posX == greyBishop1Square.posX + 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == greyBishop1Square.posY + 100 &&
                       redKnight1Rectangle1.posX == greyBishop1Square.posX + 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == greyBishop1Square.posY + 100 &&
                       redKnight2Rectangle1.posX == greyBishop1Square.posX + 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == greyBishop1Square.posY + 100 &&
                       greyBishop2Square.posX == greyBishop1Square.posX + 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == greyBishop1Square.posY + 100 &&
                       greyRook1Rectangle1.posX == greyBishop1Square.posX + 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == greyBishop1Square.posY + 100 &&
                       greyRook2Rectangle1.posX == greyBishop1Square.posX + 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == greyBishop1Square.posY + 100 &&
                       greyKnight1Rectangle1.posX == greyBishop1Square.posX + 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == greyBishop1Square.posY + 100 &&
                       greyKnight2Rectangle1.posX == greyBishop1Square.posX + 100) {
                        greyBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        greyBishop1Square.posY = greyBishop1Square.posY + 100;
                        greyBishop1Square.posX = greyBishop1Square.posX + 100;
                        greyBishop1Square.y1 = greyBishop1Square.y1 + 100;
                        greyBishop1Square.x1 = greyBishop1Square.x1 + 100;
                        greyBishop1Square.y2 = greyBishop1Square.y2 + 100;
                        greyBishop1Square.x2 = greyBishop1Square.x2 + 100;
                        greyBishop1Rectangle.y1 = greyBishop1Rectangle.y1 + 100;
                        greyBishop1Rectangle.x1 = greyBishop1Rectangle.x1 + 100;
                        greyBishop1Rectangle.y2 = greyBishop1Rectangle.y2 + 100;
                        greyBishop1Rectangle.x2 = greyBishop1Rectangle.x2 + 100;
                        greyBishop1Ellipse.y1 = greyBishop1Ellipse.y1 + 100;
                        greyBishop1Ellipse.x1 = greyBishop1Ellipse.x1 + 100;
                        greyBishop1Ellipse.y2 = greyBishop1Ellipse.y2 + 100;
                        greyBishop1Ellipse.x2 = greyBishop1Ellipse.x2 + 100;
                        greyBishop1Base.y1 = greyBishop1Base.y1 + 100;
                        greyBishop1Base.x1 = greyBishop1Base.x1 + 100;
                        greyBishop1Base.y2 = greyBishop1Base.y2 + 100;
                        greyBishop1Base.x2 = greyBishop1Base.x2 + 100;
                    }

                    return flag;
                }
            }

            else {

                greyBishop1Square.failedpath = TRUE;
                return TRUE;
            }
        }
    }
}

boolean moveGreyBishop2(UINT msg, int j, int i, int pos1, int ps1, int pos2, int ps2) {

    if(redKnight1Rectangle1.posX == greyBishop2Square.posX &&
       redKnight1Rectangle1.posY == greyBishop2Square.posY) {
        greyBishop2Square.failedpath = TRUE;
        return TRUE;
    }
    if(redKnight2Rectangle1.posX == greyBishop2Square.posX &&
       redKnight2Rectangle1.posY == greyBishop2Square.posY) {
        greyBishop2Square.failedpath = TRUE;
        return TRUE;
    }
    if(redBishop1Square.posX == greyBishop2Square.posX &&
       redBishop1Square.posY == greyBishop2Square.posY) {
        greyBishop2Square.failedpath = TRUE;
        return TRUE;
    }
    if(redBishop2Square.posX == greyBishop2Square.posX &&
       redBishop2Square.posY == greyBishop2Square.posY) {
        greyBishop2Square.failedpath = TRUE;
        return TRUE;
    }
    if(redRook1Rectangle1.posX == greyBishop2Square.posX &&
       redRook1Rectangle1.posY == greyBishop2Square.posY) {
        greyBishop2Square.failedpath = TRUE;
        return TRUE;
    }
    if(redRook2Rectangle1.posX == greyBishop2Square.posX &&
       redRook2Rectangle1.posY == greyBishop2Square.posY) {
        greyBishop2Square.failedpath = TRUE;
        return TRUE;
    }
    if(redQueenSquare.posX == greyBishop2Square.posX &&
       redQueenSquare.posY == greyBishop2Square.posY) {
        greyBishop2Square.failedpath = TRUE;
        return TRUE;
    }
    for(int g=0; g<8; g++) {
        if(redPawnsBase[g].posX == greyBishop2Square.posX &&
           redPawnsBase[g].posY == greyBishop2Square.posY) {
            greyBishop2Square.failedpath = TRUE;
            return TRUE;
        }
    }
    boolean fail = FALSE;
    if(pos1 == ps1) {
        fail = FALSE;
    } else if(pos1 == -ps1) {
        fail = FALSE;
    } else {
        fail = TRUE;
        greyBishop2Square.failedpath = fail;
    }
    if(pos1 < 0) {
        if(ps1 < 0) {
            boolean f = FALSE;
            if(pos1 < -100 && ps1 < -100) {
                f = moveGreyBishop2(msg, j, i, pos1 + 100, ps1 + 100, pos2, ps2);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    greyBishop2Square.posY = greyBishop2Square.posY - 100;
                    greyBishop2Square.posX = greyBishop2Square.posX - 100;
                    greyBishop2Square.y1 = greyBishop2Square.y1 - 100;
                    greyBishop2Square.x1 = greyBishop2Square.x1 - 100;
                    greyBishop2Square.y2 = greyBishop2Square.y2 - 100;
                    greyBishop2Square.x2 = greyBishop2Square.x2 - 100;
                    greyBishop2Rectangle.y1 = greyBishop2Rectangle.y1 - 100;
                    greyBishop2Rectangle.x1 = greyBishop2Rectangle.x1 - 100;
                    greyBishop2Rectangle.y2 = greyBishop2Rectangle.y2 - 100;
                    greyBishop2Rectangle.x2 = greyBishop2Rectangle.x2 - 100;
                    greyBishop2Ellipse.y1 = greyBishop2Ellipse.y1 - 100;
                    greyBishop2Ellipse.x1 = greyBishop2Ellipse.x1 - 100;
                    greyBishop2Ellipse.y2 = greyBishop2Ellipse.y2 - 100;
                    greyBishop2Ellipse.x2 = greyBishop2Ellipse.x2 - 100;
                    greyBishop2Base.y1 = greyBishop2Base.y1 - 100;
                    greyBishop2Base.x1 = greyBishop2Base.x1 - 100;
                    greyBishop2Base.y2 = greyBishop2Base.y2 - 100;
                    greyBishop2Base.x2 = greyBishop2Base.x2 - 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            if(greyPawnsBase[s].posY == greyBishop2Square.posY &&
                               greyPawnsBase[s].posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop1Square.posY == greyBishop2Square.posY &&
                               greyBishop1Square.posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight1Rectangle1.posY == greyBishop2Square.posY &&
                               greyKnight1Rectangle1.posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight2Rectangle1.posY == greyBishop2Square.posY &&
                               greyKnight2Rectangle1.posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook1Rectangle1.posY == greyBishop2Square.posY &&
                               greyRook1Rectangle1.posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook2Rectangle1.posY == greyBishop2Square.posY &&
                               greyRook2Rectangle1.posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKingSquare.posY == greyBishop2Square.posY &&
                               greyKingSquare.posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(j != -666) {
                                if(redPawnsBase[s].posY == greyBishop2Square.posY &&
                                   redPawnsBase[s].posX == greyBishop2Square.posX) {
                                    redPawnsBase[s].posX = -1000;
                                    redPawnsBase[s].x1 = -1000;
                                    redPawnsBase[s].x2 = -1000;
                                    redPawnsEllipse[s].x1 = -1000;
                                    redPawnsEllipse[s].x2 = -1000;
                                }
                                for(int z=0; z<8; z++) {
                                    if(redQueenSquareK[z].posY == greyBishop2Square.posY &&
                                       redQueenSquareK[z].posX == greyBishop2Square.posX) {
                                        redQueenSquareK[z].posX = -1000;
                                        redQueenSquareK[z].x1 = -1000;
                                        redQueenSquareK[z].x2 = -1000;
                                        redQueenBaseK[z].x1 = -1000;
                                        redQueenBaseK[z].x2 = -1000;
                                        redQueenEllipseK[z].x1 = -1000;
                                        redQueenEllipseK[z].x2 = -1000;
                                        redQueenRectangle1K[z].x1 = -1000;
                                        redQueenRectangle1K[z].x2 = -1000;
                                        redQueenRectangle2K[z].x1 = -1000;
                                        redQueenRectangle2K[z].x2 = -1000;
                                        redQueenRectangle3K[z].x1 = -1000;
                                        redQueenRectangle3K[z].x2 = -1000;
                                    }
                                }
                                if(redQueenSquare.posY == greyBishop2Square.posY &&
                                   redQueenSquare.posX == greyBishop2Square.posX) {
                                    redQueenSquare.posX = -1000;
                                    redQueenSquare.x1 = -1000;
                                    redQueenSquare.x2 = -1000;
                                    redQueenBase.x1 = -1000;
                                    redQueenBase.x2 = -1000;
                                    redQueenEllipse.x1 = -1000;
                                    redQueenEllipse.x2 = -1000;
                                    redQueenRectangle1.x1 = -1000;
                                    redQueenRectangle1.x2 = -1000;
                                    redQueenRectangle2.x1 = -1000;
                                    redQueenRectangle2.x2 = -1000;
                                    redQueenRectangle3.x1 = -1000;
                                    redQueenRectangle3.x2 = -1000;
                                }
                                if(redKnight1Rectangle1.posY == greyBishop2Square.posY &&
                                   redKnight1Rectangle1.posX == greyBishop2Square.posX) {
                                    redKnight1Rectangle1.posX = -1000;
                                    redKnight1Rectangle1.x1 = -1000;
                                    redKnight1Rectangle1.x2 = -1000;
                                    redKnight1Rectangle2.x1 = -1000;
                                    redKnight1Rectangle2.x2 = -1000;
                                    redKnight1Base.x1 = -1000;
                                    redKnight1Base.x2 = -1000;
                                    redKnight1Ellipse.x1 = -1000;
                                    redKnight1Ellipse.x2 = -1000;
                                }
                                if(redKnight2Rectangle1.posY == greyBishop2Square.posY &&
                                   redKnight2Rectangle1.posX == greyBishop2Square.posX) {
                                    redKnight2Rectangle1.posX = -1000;
                                    redKnight2Rectangle1.x1 = -1000;
                                    redKnight2Rectangle1.x2 = -1000;
                                    redKnight2Rectangle2.x1 = -1000;
                                    redKnight2Rectangle2.x2 = -1000;
                                    redKnight2Base.x1 = -1000;
                                    redKnight2Base.x2 = -1000;
                                    redKnight2Ellipse.x1 = -1000;
                                    redKnight2Ellipse.x2 = -1000;
                                }
                                if(redBishop2Square.posY == greyBishop2Square.posY &&
                                   redBishop2Square.posX == greyBishop2Square.posX) {
                                    redBishop2Square.posX = -1000;
                                    redBishop2Square.x1 = -1000;
                                    redBishop2Square.x2 = -1000;
                                    redBishop2Rectangle.x1 = -1000;
                                    redBishop2Rectangle.x2 = -1000;
                                    redBishop2Base.x1 = -1000;
                                    redBishop2Base.x2 = -1000;
                                    redBishop2Ellipse.x1 = -1000;
                                    redBishop2Ellipse.x2 = -1000;
                                }
                                if(redRook1Rectangle1.posY == greyBishop2Square.posY &&
                                   redRook1Rectangle1.posX == greyBishop2Square.posX) {
                                    redRook1Rectangle1.posX = -1000;
                                    redRook1Rectangle1.x1 = -1000;
                                    redRook1Rectangle1.x2 = -1000;
                                    redRook1Rectangle2.x1 = -1000;
                                    redRook1Rectangle2.x2 = -1000;
                                    redRook1Base.x1 = -1000;
                                    redRook1Base.x2 = -1000;
                                    redRook1Ellipse.x1 = -1000;
                                    redRook1Ellipse.x2 = -1000;
                                }
                                if(redRook2Rectangle1.posY == greyBishop2Square.posY &&
                                   redRook2Rectangle1.posX == greyBishop2Square.posX) {
                                    redRook2Rectangle1.posX = -1000;
                                    redRook2Rectangle1.x1 = -1000;
                                    redRook2Rectangle1.x2 = -1000;
                                    redRook2Rectangle2.x1 = -1000;
                                    redRook2Rectangle2.x2 = -1000;
                                    redRook2Base.x1 = -1000;
                                    redRook2Base.x2 = -1000;
                                    redRook2Ellipse.x1 = -1000;
                                    redRook2Ellipse.x2 = -1000;
                                }
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == greyBishop2Square.posY - 100 &&
                           redPawnsBase[s].posX == greyBishop2Square.posX - 100) {
                            greyBishop2Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == greyBishop2Square.posY - 100 &&
                           greyPawnsBase[s].posX == greyBishop2Square.posX - 100) {
                            greyBishop2Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redQueenSquare.posY == greyBishop2Square.posY - 100 &&
                       redQueenSquare.posX == greyBishop2Square.posX - 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyBishop2Square.posY - 100 &&
                       redBishop2Square.posX == greyBishop2Square.posX - 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == greyBishop2Square.posY - 100 &&
                       redBishop1Square.posX == greyBishop2Square.posX - 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == greyBishop2Square.posY - 100 &&
                       redRook1Rectangle1.posX == greyBishop2Square.posX - 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == greyBishop2Square.posY - 100 &&
                       redRook2Rectangle1.posX == greyBishop2Square.posX - 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == greyBishop2Square.posY - 100 &&
                       redKnight1Rectangle1.posX == greyBishop2Square.posX - 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == greyBishop2Square.posY - 100 &&
                       redKnight2Rectangle1.posX == greyBishop2Square.posX - 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == greyBishop2Square.posY - 100 &&
                       greyBishop1Square.posX == greyBishop2Square.posX - 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == greyBishop2Square.posY - 100 &&
                       greyRook1Rectangle1.posX == greyBishop2Square.posX - 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == greyBishop2Square.posY - 100 &&
                       greyRook2Rectangle1.posX == greyBishop2Square.posX - 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == greyBishop2Square.posY - 100 &&
                       greyKnight1Rectangle1.posX == greyBishop2Square.posX - 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == greyBishop2Square.posY - 100 &&
                       greyKnight2Rectangle1.posX == greyBishop2Square.posX - 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        greyBishop2Square.posY = greyBishop2Square.posY - 100;
                        greyBishop2Square.posX = greyBishop2Square.posX - 100;
                        greyBishop2Square.y1 = greyBishop2Square.y1 - 100;
                        greyBishop2Square.x1 = greyBishop2Square.x1 - 100;
                        greyBishop2Square.y2 = greyBishop2Square.y2 - 100;
                        greyBishop2Square.x2 = greyBishop2Square.x2 - 100;
                        greyBishop2Rectangle.y1 = greyBishop2Rectangle.y1 - 100;
                        greyBishop2Rectangle.x1 = greyBishop2Rectangle.x1 - 100;
                        greyBishop2Rectangle.y2 = greyBishop2Rectangle.y2 - 100;
                        greyBishop2Rectangle.x2 = greyBishop2Rectangle.x2 - 100;
                        greyBishop2Ellipse.y1 = greyBishop2Ellipse.y1 - 100;
                        greyBishop2Ellipse.x1 = greyBishop2Ellipse.x1 - 100;
                        greyBishop2Ellipse.y2 = greyBishop2Ellipse.y2 - 100;
                        greyBishop2Ellipse.x2 = greyBishop2Ellipse.x2 - 100;
                        greyBishop2Base.y1 = greyBishop2Base.y1 - 100;
                        greyBishop2Base.x1 = greyBishop2Base.x1 - 100;
                        greyBishop2Base.y2 = greyBishop2Base.y2 - 100;
                        greyBishop2Base.x2 = greyBishop2Base.x2 - 100;
                    }

                    return flag;
                }
            }

            else {

                greyBishop2Square.failedpath = TRUE;
                return TRUE;
            }
        }
        if(ps1 > 0) {
            boolean f = FALSE;
            if(pos1 < -100 && ps1 > 100) {
                f = moveGreyBishop2(msg, j, i, pos1 + 100, ps1 - 100, pos2, ps2);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    greyBishop2Square.posY = greyBishop2Square.posY - 100;
                    greyBishop2Square.posX = greyBishop2Square.posX + 100;
                    greyBishop2Square.y1 = greyBishop2Square.y1 - 100;
                    greyBishop2Square.x1 = greyBishop2Square.x1 + 100;
                    greyBishop2Square.y2 = greyBishop2Square.y2 - 100;
                    greyBishop2Square.x2 = greyBishop2Square.x2 + 100;
                    greyBishop2Rectangle.y1 = greyBishop2Rectangle.y1 - 100;
                    greyBishop2Rectangle.x1 = greyBishop2Rectangle.x1 + 100;
                    greyBishop2Rectangle.y2 = greyBishop2Rectangle.y2 - 100;
                    greyBishop2Rectangle.x2 = greyBishop2Rectangle.x2 + 100;
                    greyBishop2Ellipse.y1 = greyBishop2Ellipse.y1 - 100;
                    greyBishop2Ellipse.x1 = greyBishop2Ellipse.x1 + 100;
                    greyBishop2Ellipse.y2 = greyBishop2Ellipse.y2 - 100;
                    greyBishop2Ellipse.x2 = greyBishop2Ellipse.x2 + 100;
                    greyBishop2Base.y1 = greyBishop2Base.y1 - 100;
                    greyBishop2Base.x1 = greyBishop2Base.x1 + 100;
                    greyBishop2Base.y2 = greyBishop2Base.y2 - 100;
                    greyBishop2Base.x2 = greyBishop2Base.x2 + 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            if(greyPawnsBase[s].posY == greyBishop2Square.posY &&
                               greyPawnsBase[s].posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop1Square.posY == greyBishop2Square.posY &&
                               greyBishop1Square.posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight1Rectangle1.posY == greyBishop2Square.posY &&
                               greyKnight1Rectangle1.posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight2Rectangle1.posY == greyBishop2Square.posY &&
                               greyKnight2Rectangle1.posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook1Rectangle1.posY == greyBishop2Square.posY &&
                               greyRook1Rectangle1.posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook2Rectangle1.posY == greyBishop2Square.posY &&
                               greyRook2Rectangle1.posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKingSquare.posY == greyBishop2Square.posY &&
                               greyKingSquare.posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(j != -666) {
                                if(redPawnsBase[s].posY == greyBishop2Square.posY &&
                                   redPawnsBase[s].posX == greyBishop2Square.posX) {
                                    redPawnsBase[s].posX = -1000;
                                    redPawnsBase[s].x1 = -1000;
                                    redPawnsBase[s].x2 = -1000;
                                    redPawnsEllipse[s].x1 = -1000;
                                    redPawnsEllipse[s].x2 = -1000;
                                }
                                for(int z=0; z<8; z++) {
                                    if(redQueenSquareK[z].posY == greyBishop2Square.posY &&
                                       redQueenSquareK[z].posX == greyBishop2Square.posX) {
                                        redQueenSquareK[z].posX = -1000;
                                        redQueenSquareK[z].x1 = -1000;
                                        redQueenSquareK[z].x2 = -1000;
                                        redQueenBaseK[z].x1 = -1000;
                                        redQueenBaseK[z].x2 = -1000;
                                        redQueenEllipseK[z].x1 = -1000;
                                        redQueenEllipseK[z].x2 = -1000;
                                        redQueenRectangle1K[z].x1 = -1000;
                                        redQueenRectangle1K[z].x2 = -1000;
                                        redQueenRectangle2K[z].x1 = -1000;
                                        redQueenRectangle2K[z].x2 = -1000;
                                        redQueenRectangle3K[z].x1 = -1000;
                                        redQueenRectangle3K[z].x2 = -1000;
                                    }
                                }
                                if(redQueenSquare.posY == greyBishop2Square.posY &&
                                   redQueenSquare.posX == greyBishop2Square.posX) {
                                    redQueenSquare.posX = -1000;
                                    redQueenSquare.x1 = -1000;
                                    redQueenSquare.x2 = -1000;
                                    redQueenBase.x1 = -1000;
                                    redQueenBase.x2 = -1000;
                                    redQueenEllipse.x1 = -1000;
                                    redQueenEllipse.x2 = -1000;
                                    redQueenRectangle1.x1 = -1000;
                                    redQueenRectangle1.x2 = -1000;
                                    redQueenRectangle2.x1 = -1000;
                                    redQueenRectangle2.x2 = -1000;
                                    redQueenRectangle3.x1 = -1000;
                                    redQueenRectangle3.x2 = -1000;
                                }
                                if(redKnight1Rectangle1.posY == greyBishop2Square.posY &&
                                   redKnight1Rectangle1.posX == greyBishop2Square.posX) {
                                    redKnight1Rectangle1.posX = -1000;
                                    redKnight1Rectangle1.x1 = -1000;
                                    redKnight1Rectangle1.x2 = -1000;
                                    redKnight1Rectangle2.x1 = -1000;
                                    redKnight1Rectangle2.x2 = -1000;
                                    redKnight1Base.x1 = -1000;
                                    redKnight1Base.x2 = -1000;
                                    redKnight1Ellipse.x1 = -1000;
                                    redKnight1Ellipse.x2 = -1000;
                                }
                                if(redKnight2Rectangle1.posY == greyBishop2Square.posY &&
                                   redKnight2Rectangle1.posX == greyBishop2Square.posX) {
                                    redKnight2Rectangle1.posX = -1000;
                                    redKnight2Rectangle1.x1 = -1000;
                                    redKnight2Rectangle1.x2 = -1000;
                                    redKnight2Rectangle2.x1 = -1000;
                                    redKnight2Rectangle2.x2 = -1000;
                                    redKnight2Base.x1 = -1000;
                                    redKnight2Base.x2 = -1000;
                                    redKnight2Ellipse.x1 = -1000;
                                    redKnight2Ellipse.x2 = -1000;
                                }
                                if(redBishop2Square.posY == greyBishop2Square.posY &&
                                   redBishop2Square.posX == greyBishop2Square.posX) {
                                    redBishop2Square.posX = -1000;
                                    redBishop2Square.x1 = -1000;
                                    redBishop2Square.x2 = -1000;
                                    redBishop2Rectangle.x1 = -1000;
                                    redBishop2Rectangle.x2 = -1000;
                                    redBishop2Base.x1 = -1000;
                                    redBishop2Base.x2 = -1000;
                                    redBishop2Ellipse.x1 = -1000;
                                    redBishop2Ellipse.x2 = -1000;
                                }
                                if(redRook1Rectangle1.posY == greyBishop2Square.posY &&
                                   redRook1Rectangle1.posX == greyBishop2Square.posX) {
                                    redRook1Rectangle1.posX = -1000;
                                    redRook1Rectangle1.x1 = -1000;
                                    redRook1Rectangle1.x2 = -1000;
                                    redRook1Rectangle2.x1 = -1000;
                                    redRook1Rectangle2.x2 = -1000;
                                    redRook1Base.x1 = -1000;
                                    redRook1Base.x2 = -1000;
                                    redRook1Ellipse.x1 = -1000;
                                    redRook1Ellipse.x2 = -1000;
                                }
                                if(redRook2Rectangle1.posY == greyBishop2Square.posY &&
                                   redRook2Rectangle1.posX == greyBishop2Square.posX) {
                                    redRook2Rectangle1.posX = -1000;
                                    redRook2Rectangle1.x1 = -1000;
                                    redRook2Rectangle1.x2 = -1000;
                                    redRook2Rectangle2.x1 = -1000;
                                    redRook2Rectangle2.x2 = -1000;
                                    redRook2Base.x1 = -1000;
                                    redRook2Base.x2 = -1000;
                                    redRook2Ellipse.x1 = -1000;
                                    redRook2Ellipse.x2 = -1000;
                                }
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == greyBishop2Square.posY - 100 &&
                           redPawnsBase[s].posX == greyBishop2Square.posX + 100) {
                            greyBishop2Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == greyBishop2Square.posY - 100 &&
                           greyPawnsBase[s].posX == greyBishop2Square.posX + 100) {
                            greyBishop2Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redQueenSquare.posY == greyBishop2Square.posY - 100 &&
                       redQueenSquare.posX == greyBishop2Square.posX + 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyBishop2Square.posY - 100 &&
                       redBishop2Square.posX == greyBishop2Square.posX + 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == greyBishop2Square.posY - 100 &&
                       redBishop1Square.posX == greyBishop2Square.posX + 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == greyBishop2Square.posY - 100 &&
                       redRook1Rectangle1.posX == greyBishop2Square.posX + 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == greyBishop2Square.posY - 100 &&
                       redRook2Rectangle1.posX == greyBishop2Square.posX + 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == greyBishop2Square.posY - 100 &&
                       redKnight1Rectangle1.posX == greyBishop2Square.posX + 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == greyBishop2Square.posY - 100 &&
                       redKnight2Rectangle1.posX == greyBishop2Square.posX + 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == greyBishop2Square.posY - 100 &&
                       greyBishop1Square.posX == greyBishop2Square.posX + 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == greyBishop2Square.posY - 100 &&
                       greyRook1Rectangle1.posX == greyBishop2Square.posX + 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == greyBishop2Square.posY - 100 &&
                       greyRook2Rectangle1.posX == greyBishop2Square.posX + 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == greyBishop2Square.posY - 100 &&
                       greyKnight1Rectangle1.posX == greyBishop2Square.posX + 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == greyBishop2Square.posY - 100 &&
                       greyKnight2Rectangle1.posX == greyBishop2Square.posX + 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        greyBishop2Square.posY = greyBishop2Square.posY - 100;
                        greyBishop2Square.posX = greyBishop2Square.posX + 100;
                        greyBishop2Square.y1 = greyBishop2Square.y1 - 100;
                        greyBishop2Square.x1 = greyBishop2Square.x1 + 100;
                        greyBishop2Square.y2 = greyBishop2Square.y2 - 100;
                        greyBishop2Square.x2 = greyBishop2Square.x2 + 100;
                        greyBishop2Rectangle.y1 = greyBishop2Rectangle.y1 - 100;
                        greyBishop2Rectangle.x1 = greyBishop2Rectangle.x1 + 100;
                        greyBishop2Rectangle.y2 = greyBishop2Rectangle.y2 - 100;
                        greyBishop2Rectangle.x2 = greyBishop2Rectangle.x2 + 100;
                        greyBishop2Ellipse.y1 = greyBishop2Ellipse.y1 - 100;
                        greyBishop2Ellipse.x1 = greyBishop2Ellipse.x1 + 100;
                        greyBishop2Ellipse.y2 = greyBishop2Ellipse.y2 - 100;
                        greyBishop2Ellipse.x2 = greyBishop2Ellipse.x2 + 100;
                        greyBishop2Base.y1 = greyBishop2Base.y1 - 100;
                        greyBishop2Base.x1 = greyBishop2Base.x1 + 100;
                        greyBishop2Base.y2 = greyBishop2Base.y2 - 100;
                        greyBishop2Base.x2 = greyBishop2Base.x2 + 100;
                    }

                    return flag;
                }
            }

            else {

                greyBishop2Square.failedpath = TRUE;
                return TRUE;
            }
        }
    } else if(pos1 > 0) {
        if(ps1 < 0) {
            boolean f = FALSE;
            if(pos1 > 100 && ps1 < -100) {
                f = moveGreyBishop2(msg, j, i, pos1 - 100, ps1 + 100, pos2, ps2);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    greyBishop2Square.posY = greyBishop2Square.posY + 100;
                    greyBishop2Square.posX = greyBishop2Square.posX - 100;
                    greyBishop2Square.y1 = greyBishop2Square.y1 + 100;
                    greyBishop2Square.x1 = greyBishop2Square.x1 - 100;
                    greyBishop2Square.y2 = greyBishop2Square.y2 + 100;
                    greyBishop2Square.x2 = greyBishop2Square.x2 - 100;
                    greyBishop2Rectangle.y1 = greyBishop2Rectangle.y1 + 100;
                    greyBishop2Rectangle.x1 = greyBishop2Rectangle.x1 - 100;
                    greyBishop2Rectangle.y2 = greyBishop2Rectangle.y2 + 100;
                    greyBishop2Rectangle.x2 = greyBishop2Rectangle.x2 - 100;
                    greyBishop2Ellipse.y1 = greyBishop2Ellipse.y1 + 100;
                    greyBishop2Ellipse.x1 = greyBishop2Ellipse.x1 - 100;
                    greyBishop2Ellipse.y2 = greyBishop2Ellipse.y2 + 100;
                    greyBishop2Ellipse.x2 = greyBishop2Ellipse.x2 - 100;
                    greyBishop2Base.y1 = greyBishop2Base.y1 + 100;
                    greyBishop2Base.x1 = greyBishop2Base.x1 - 100;
                    greyBishop2Base.y2 = greyBishop2Base.y2 + 100;
                    greyBishop2Base.x2 = greyBishop2Base.x2 - 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            if(greyPawnsBase[s].posY == greyBishop2Square.posY &&
                               greyPawnsBase[s].posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop1Square.posY == greyBishop2Square.posY &&
                               greyBishop1Square.posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight1Rectangle1.posY == greyBishop2Square.posY &&
                               greyKnight1Rectangle1.posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight2Rectangle1.posY == greyBishop2Square.posY &&
                               greyKnight2Rectangle1.posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook1Rectangle1.posY == greyBishop2Square.posY &&
                               greyRook1Rectangle1.posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook2Rectangle1.posY == greyBishop2Square.posY &&
                               greyRook2Rectangle1.posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKingSquare.posY == greyBishop2Square.posY &&
                               greyKingSquare.posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(j != -666) {
                                if(redPawnsBase[s].posY == greyBishop2Square.posY &&
                                   redPawnsBase[s].posX == greyBishop2Square.posX) {
                                    redPawnsBase[s].posX = -1000;
                                    redPawnsBase[s].x1 = -1000;
                                    redPawnsBase[s].x2 = -1000;
                                    redPawnsEllipse[s].x1 = -1000;
                                    redPawnsEllipse[s].x2 = -1000;
                                }
                                for(int z=0; z<8; z++) {
                                    if(redQueenSquareK[z].posY == greyBishop2Square.posY &&
                                       redQueenSquareK[z].posX == greyBishop2Square.posX) {
                                        redQueenSquareK[z].posX = -1000;
                                        redQueenSquareK[z].x1 = -1000;
                                        redQueenSquareK[z].x2 = -1000;
                                        redQueenBaseK[z].x1 = -1000;
                                        redQueenBaseK[z].x2 = -1000;
                                        redQueenEllipseK[z].x1 = -1000;
                                        redQueenEllipseK[z].x2 = -1000;
                                        redQueenRectangle1K[z].x1 = -1000;
                                        redQueenRectangle1K[z].x2 = -1000;
                                        redQueenRectangle2K[z].x1 = -1000;
                                        redQueenRectangle2K[z].x2 = -1000;
                                        redQueenRectangle3K[z].x1 = -1000;
                                        redQueenRectangle3K[z].x2 = -1000;
                                    }
                                }
                                if(redQueenSquare.posY == greyBishop2Square.posY &&
                                   redQueenSquare.posX == greyBishop2Square.posX) {
                                    redQueenSquare.posX = -1000;
                                    redQueenSquare.x1 = -1000;
                                    redQueenSquare.x2 = -1000;
                                    redQueenBase.x1 = -1000;
                                    redQueenBase.x2 = -1000;
                                    redQueenEllipse.x1 = -1000;
                                    redQueenEllipse.x2 = -1000;
                                    redQueenRectangle1.x1 = -1000;
                                    redQueenRectangle1.x2 = -1000;
                                    redQueenRectangle2.x1 = -1000;
                                    redQueenRectangle2.x2 = -1000;
                                    redQueenRectangle3.x1 = -1000;
                                    redQueenRectangle3.x2 = -1000;
                                }
                                if(redKnight1Rectangle1.posY == greyBishop2Square.posY &&
                                   redKnight1Rectangle1.posX == greyBishop2Square.posX) {
                                    redKnight1Rectangle1.posX = -1000;
                                    redKnight1Rectangle1.x1 = -1000;
                                    redKnight1Rectangle1.x2 = -1000;
                                    redKnight1Rectangle2.x1 = -1000;
                                    redKnight1Rectangle2.x2 = -1000;
                                    redKnight1Base.x1 = -1000;
                                    redKnight1Base.x2 = -1000;
                                    redKnight1Ellipse.x1 = -1000;
                                    redKnight1Ellipse.x2 = -1000;
                                }
                                if(redKnight2Rectangle1.posY == greyBishop2Square.posY &&
                                   redKnight2Rectangle1.posX == greyBishop2Square.posX) {
                                    redKnight2Rectangle1.posX = -1000;
                                    redKnight2Rectangle1.x1 = -1000;
                                    redKnight2Rectangle1.x2 = -1000;
                                    redKnight2Rectangle2.x1 = -1000;
                                    redKnight2Rectangle2.x2 = -1000;
                                    redKnight2Base.x1 = -1000;
                                    redKnight2Base.x2 = -1000;
                                    redKnight2Ellipse.x1 = -1000;
                                    redKnight2Ellipse.x2 = -1000;
                                }
                                if(redBishop2Square.posY == greyBishop2Square.posY &&
                                   redBishop2Square.posX == greyBishop2Square.posX) {
                                    redBishop2Square.posX = -1000;
                                    redBishop2Square.x1 = -1000;
                                    redBishop2Square.x2 = -1000;
                                    redBishop2Rectangle.x1 = -1000;
                                    redBishop2Rectangle.x2 = -1000;
                                    redBishop2Base.x1 = -1000;
                                    redBishop2Base.x2 = -1000;
                                    redBishop2Ellipse.x1 = -1000;
                                    redBishop2Ellipse.x2 = -1000;
                                }
                                if(redRook1Rectangle1.posY == greyBishop2Square.posY &&
                                   redRook1Rectangle1.posX == greyBishop2Square.posX) {
                                    redRook1Rectangle1.posX = -1000;
                                    redRook1Rectangle1.x1 = -1000;
                                    redRook1Rectangle1.x2 = -1000;
                                    redRook1Rectangle2.x1 = -1000;
                                    redRook1Rectangle2.x2 = -1000;
                                    redRook1Base.x1 = -1000;
                                    redRook1Base.x2 = -1000;
                                    redRook1Ellipse.x1 = -1000;
                                    redRook1Ellipse.x2 = -1000;
                                }
                                if(redRook2Rectangle1.posY == greyBishop2Square.posY &&
                                   redRook2Rectangle1.posX == greyBishop2Square.posX) {
                                    redRook2Rectangle1.posX = -1000;
                                    redRook2Rectangle1.x1 = -1000;
                                    redRook2Rectangle1.x2 = -1000;
                                    redRook2Rectangle2.x1 = -1000;
                                    redRook2Rectangle2.x2 = -1000;
                                    redRook2Base.x1 = -1000;
                                    redRook2Base.x2 = -1000;
                                    redRook2Ellipse.x1 = -1000;
                                    redRook2Ellipse.x2 = -1000;
                                }
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == greyBishop2Square.posY + 100 &&
                           redPawnsBase[s].posX == greyBishop2Square.posX - 100) {
                            greyBishop2Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == greyBishop2Square.posY + 100 &&
                           greyPawnsBase[s].posX == greyBishop2Square.posX - 100) {
                            greyBishop2Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redQueenSquare.posY == greyBishop2Square.posY + 100 &&
                       redQueenSquare.posX == greyBishop2Square.posX - 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == greyBishop2Square.posY + 100 &&
                       redBishop1Square.posX == greyBishop2Square.posX - 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyBishop2Square.posY + 100 &&
                       redBishop2Square.posX == greyBishop2Square.posX - 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == greyBishop2Square.posY + 100 &&
                       redRook1Rectangle1.posX == greyBishop2Square.posX - 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == greyBishop2Square.posY + 100 &&
                       redRook2Rectangle1.posX == greyBishop2Square.posX - 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == greyBishop2Square.posY + 100 &&
                       redKnight1Rectangle1.posX == greyBishop2Square.posX - 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == greyBishop2Square.posY + 100 &&
                       redKnight2Rectangle1.posX == greyBishop2Square.posX - 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == greyBishop2Square.posY + 100 &&
                       greyBishop1Square.posX == greyBishop2Square.posX - 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == greyBishop2Square.posY + 100 &&
                       greyRook1Rectangle1.posX == greyBishop2Square.posX - 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == greyBishop2Square.posY + 100 &&
                       greyRook2Rectangle1.posX == greyBishop2Square.posX - 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == greyBishop2Square.posY + 100 &&
                       greyKnight1Rectangle1.posX == greyBishop2Square.posX - 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == greyBishop2Square.posY + 100 &&
                       greyKnight2Rectangle1.posX == greyBishop2Square.posX - 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        greyBishop2Square.posY = greyBishop2Square.posY + 100;
                        greyBishop2Square.posX = greyBishop2Square.posX - 100;
                        greyBishop2Square.y1 = greyBishop2Square.y1 + 100;
                        greyBishop2Square.x1 = greyBishop2Square.x1 - 100;
                        greyBishop2Square.y2 = greyBishop2Square.y2 + 100;
                        greyBishop2Square.x2 = greyBishop2Square.x2 - 100;
                        greyBishop2Rectangle.y1 = greyBishop2Rectangle.y1 + 100;
                        greyBishop2Rectangle.x1 = greyBishop2Rectangle.x1 - 100;
                        greyBishop2Rectangle.y2 = greyBishop2Rectangle.y2 + 100;
                        greyBishop2Rectangle.x2 = greyBishop2Rectangle.x2 - 100;
                        greyBishop2Ellipse.y1 = greyBishop2Ellipse.y1 + 100;
                        greyBishop2Ellipse.x1 = greyBishop2Ellipse.x1 - 100;
                        greyBishop2Ellipse.y2 = greyBishop2Ellipse.y2 + 100;
                        greyBishop2Ellipse.x2 = greyBishop2Ellipse.x2 - 100;
                        greyBishop2Base.y1 = greyBishop2Base.y1 + 100;
                        greyBishop2Base.x1 = greyBishop2Base.x1 - 100;
                        greyBishop2Base.y2 = greyBishop2Base.y2 + 100;
                        greyBishop2Base.x2 = greyBishop2Base.x2 - 100;
                    }

                    return flag;
                }
            }

            else {

                greyBishop2Square.failedpath = TRUE;
                return TRUE;
            }
        }
        if(ps1 > 0) {
            boolean f = FALSE;
            if(pos1 > 100 && ps1 > 100) {
                f = moveGreyBishop2(msg, j, i, pos1 - 100, ps1 - 100, pos2, ps2);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    greyBishop2Square.posY = greyBishop2Square.posY + 100;
                    greyBishop2Square.posX = greyBishop2Square.posX + 100;
                    greyBishop2Square.y1 = greyBishop2Square.y1 + 100;
                    greyBishop2Square.x1 = greyBishop2Square.x1 + 100;
                    greyBishop2Square.y2 = greyBishop2Square.y2 + 100;
                    greyBishop2Square.x2 = greyBishop2Square.x2 + 100;
                    greyBishop2Rectangle.y1 = greyBishop2Rectangle.y1 + 100;
                    greyBishop2Rectangle.x1 = greyBishop2Rectangle.x1 + 100;
                    greyBishop2Rectangle.y2 = greyBishop2Rectangle.y2 + 100;
                    greyBishop2Rectangle.x2 = greyBishop2Rectangle.x2 + 100;
                    greyBishop2Ellipse.y1 = greyBishop2Ellipse.y1 + 100;
                    greyBishop2Ellipse.x1 = greyBishop2Ellipse.x1 + 100;
                    greyBishop2Ellipse.y2 = greyBishop2Ellipse.y2 + 100;
                    greyBishop2Ellipse.x2 = greyBishop2Ellipse.x2 + 100;
                    greyBishop2Base.y1 = greyBishop2Base.y1 + 100;
                    greyBishop2Base.x1 = greyBishop2Base.x1 + 100;
                    greyBishop2Base.y2 = greyBishop2Base.y2 + 100;
                    greyBishop2Base.x2 = greyBishop2Base.x2 + 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            if(greyPawnsBase[s].posY == greyBishop2Square.posY &&
                               greyPawnsBase[s].posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyBishop1Square.posY == greyBishop2Square.posY &&
                               greyBishop1Square.posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight1Rectangle1.posY == greyBishop2Square.posY &&
                               greyKnight1Rectangle1.posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKnight2Rectangle1.posY == greyBishop2Square.posY &&
                               greyKnight2Rectangle1.posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook1Rectangle1.posY == greyBishop2Square.posY &&
                               greyRook1Rectangle1.posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyRook2Rectangle1.posY == greyBishop2Square.posY &&
                               greyRook2Rectangle1.posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(greyKingSquare.posY == greyBishop2Square.posY &&
                               greyKingSquare.posX == greyBishop2Square.posX) {
                                greyBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(j != -666) {
                                if(redPawnsBase[s].posY == greyBishop2Square.posY &&
                                   redPawnsBase[s].posX == greyBishop2Square.posX) {
                                    redPawnsBase[s].posX = -1000;
                                    redPawnsBase[s].x1 = -1000;
                                    redPawnsBase[s].x2 = -1000;
                                    redPawnsEllipse[s].x1 = -1000;
                                    redPawnsEllipse[s].x2 = -1000;
                                }
                                for(int z=0; z<8; z++) {
                                    if(redQueenSquareK[z].posY == greyBishop2Square.posY &&
                                       redQueenSquareK[z].posX == greyBishop2Square.posX) {
                                        redQueenSquareK[z].posX = -1000;
                                        redQueenSquareK[z].x1 = -1000;
                                        redQueenSquareK[z].x2 = -1000;
                                        redQueenBaseK[z].x1 = -1000;
                                        redQueenBaseK[z].x2 = -1000;
                                        redQueenEllipseK[z].x1 = -1000;
                                        redQueenEllipseK[z].x2 = -1000;
                                        redQueenRectangle1K[z].x1 = -1000;
                                        redQueenRectangle1K[z].x2 = -1000;
                                        redQueenRectangle2K[z].x1 = -1000;
                                        redQueenRectangle2K[z].x2 = -1000;
                                        redQueenRectangle3K[z].x1 = -1000;
                                        redQueenRectangle3K[z].x2 = -1000;
                                    }
                                }
                                if(redQueenSquare.posY == greyBishop2Square.posY &&
                                   redQueenSquare.posX == greyBishop2Square.posX) {
                                    redQueenSquare.posX = -1000;
                                    redQueenSquare.x1 = -1000;
                                    redQueenSquare.x2 = -1000;
                                    redQueenBase.x1 = -1000;
                                    redQueenBase.x2 = -1000;
                                    redQueenEllipse.x1 = -1000;
                                    redQueenEllipse.x2 = -1000;
                                    redQueenRectangle1.x1 = -1000;
                                    redQueenRectangle1.x2 = -1000;
                                    redQueenRectangle2.x1 = -1000;
                                    redQueenRectangle2.x2 = -1000;
                                    redQueenRectangle3.x1 = -1000;
                                    redQueenRectangle3.x2 = -1000;
                                }
                                if(redKnight1Rectangle1.posY == greyBishop2Square.posY &&
                                   redKnight1Rectangle1.posX == greyBishop2Square.posX) {
                                    redKnight1Rectangle1.posX = -1000;
                                    redKnight1Rectangle1.x1 = -1000;
                                    redKnight1Rectangle1.x2 = -1000;
                                    redKnight1Rectangle2.x1 = -1000;
                                    redKnight1Rectangle2.x2 = -1000;
                                    redKnight1Base.x1 = -1000;
                                    redKnight1Base.x2 = -1000;
                                    redKnight1Ellipse.x1 = -1000;
                                    redKnight1Ellipse.x2 = -1000;
                                }
                                if(redKnight2Rectangle1.posY == greyBishop2Square.posY &&
                                   redKnight2Rectangle1.posX == greyBishop2Square.posX) {
                                    redKnight2Rectangle1.posX = -1000;
                                    redKnight2Rectangle1.x1 = -1000;
                                    redKnight2Rectangle1.x2 = -1000;
                                    redKnight2Rectangle2.x1 = -1000;
                                    redKnight2Rectangle2.x2 = -1000;
                                    redKnight2Base.x1 = -1000;
                                    redKnight2Base.x2 = -1000;
                                    redKnight2Ellipse.x1 = -1000;
                                    redKnight2Ellipse.x2 = -1000;
                                }
                                if(redBishop2Square.posY == greyBishop2Square.posY &&
                                   redBishop2Square.posX == greyBishop2Square.posX) {
                                    redBishop2Square.posX = -1000;
                                    redBishop2Square.x1 = -1000;
                                    redBishop2Square.x2 = -1000;
                                    redBishop2Rectangle.x1 = -1000;
                                    redBishop2Rectangle.x2 = -1000;
                                    redBishop2Base.x1 = -1000;
                                    redBishop2Base.x2 = -1000;
                                    redBishop2Ellipse.x1 = -1000;
                                    redBishop2Ellipse.x2 = -1000;
                                }
                                if(redRook1Rectangle1.posY == greyBishop2Square.posY &&
                                   redRook1Rectangle1.posX == greyBishop2Square.posX) {
                                    redRook1Rectangle1.posX = -1000;
                                    redRook1Rectangle1.x1 = -1000;
                                    redRook1Rectangle1.x2 = -1000;
                                    redRook1Rectangle2.x1 = -1000;
                                    redRook1Rectangle2.x2 = -1000;
                                    redRook1Base.x1 = -1000;
                                    redRook1Base.x2 = -1000;
                                    redRook1Ellipse.x1 = -1000;
                                    redRook1Ellipse.x2 = -1000;
                                }
                                if(redRook2Rectangle1.posY == greyBishop2Square.posY &&
                                   redRook2Rectangle1.posX == greyBishop2Square.posX) {
                                    redRook2Rectangle1.posX = -1000;
                                    redRook2Rectangle1.x1 = -1000;
                                    redRook2Rectangle1.x2 = -1000;
                                    redRook2Rectangle2.x1 = -1000;
                                    redRook2Rectangle2.x2 = -1000;
                                    redRook2Base.x1 = -1000;
                                    redRook2Base.x2 = -1000;
                                    redRook2Ellipse.x1 = -1000;
                                    redRook2Ellipse.x2 = -1000;
                                }
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == greyBishop2Square.posY + 100 &&
                           redPawnsBase[s].posX == greyBishop2Square.posX + 100) {
                            greyBishop2Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == greyBishop2Square.posY + 100 &&
                           greyPawnsBase[s].posX == greyBishop2Square.posX + 100) {
                            greyBishop2Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redQueenSquare.posY == greyBishop2Square.posY + 100 &&
                       redQueenSquare.posX == greyBishop2Square.posX + 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == greyBishop2Square.posY + 100 &&
                       redBishop1Square.posX == greyBishop2Square.posX + 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == greyBishop2Square.posY + 100 &&
                       redBishop2Square.posX == greyBishop2Square.posX + 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == greyBishop2Square.posY + 100 &&
                       redRook1Rectangle1.posX == greyBishop2Square.posX + 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == greyBishop2Square.posY + 100 &&
                       redRook2Rectangle1.posX == greyBishop2Square.posX + 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == greyBishop2Square.posY + 100 &&
                       redKnight1Rectangle1.posX == greyBishop2Square.posX + 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == greyBishop2Square.posY + 100 &&
                       redKnight2Rectangle1.posX == greyBishop2Square.posX + 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == greyBishop2Square.posY + 100 &&
                       greyBishop1Square.posX == greyBishop2Square.posX + 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == greyBishop2Square.posY + 100 &&
                       greyRook1Rectangle1.posX == greyBishop2Square.posX + 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == greyBishop2Square.posY + 100 &&
                       greyRook2Rectangle1.posX == greyBishop2Square.posX + 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == greyBishop2Square.posY + 100 &&
                       greyKnight1Rectangle1.posX == greyBishop2Square.posX + 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == greyBishop2Square.posY + 100 &&
                       greyKnight2Rectangle1.posX == greyBishop2Square.posX + 100) {
                        greyBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        greyBishop2Square.posY = greyBishop2Square.posY + 100;
                        greyBishop2Square.posX = greyBishop2Square.posX + 100;
                        greyBishop2Square.y1 = greyBishop2Square.y1 + 100;
                        greyBishop2Square.x1 = greyBishop2Square.x1 + 100;
                        greyBishop2Square.y2 = greyBishop2Square.y2 + 100;
                        greyBishop2Square.x2 = greyBishop2Square.x2 + 100;
                        greyBishop2Rectangle.y1 = greyBishop2Rectangle.y1 + 100;
                        greyBishop2Rectangle.x1 = greyBishop2Rectangle.x1 + 100;
                        greyBishop2Rectangle.y2 = greyBishop2Rectangle.y2 + 100;
                        greyBishop2Rectangle.x2 = greyBishop2Rectangle.x2 + 100;
                        greyBishop2Ellipse.y1 = greyBishop2Ellipse.y1 + 100;
                        greyBishop2Ellipse.x1 = greyBishop2Ellipse.x1 + 100;
                        greyBishop2Ellipse.y2 = greyBishop2Ellipse.y2 + 100;
                        greyBishop2Ellipse.x2 = greyBishop2Ellipse.x2 + 100;
                        greyBishop2Base.y1 = greyBishop2Base.y1 + 100;
                        greyBishop2Base.x1 = greyBishop2Base.x1 + 100;
                        greyBishop2Base.y2 = greyBishop2Base.y2 + 100;
                        greyBishop2Base.x2 = greyBishop2Base.x2 + 100;
                    }

                    return flag;
                }
            }

            else {

                greyBishop2Square.failedpath = TRUE;
                return TRUE;
            }
        }
    }
}

boolean moveRedBishop1(UINT msg, int j, int i, int pos1, int ps1, int pos2, int ps2) {

    if(greyKnight1Rectangle1.posX == redBishop1Square.posX &&
       greyKnight1Rectangle1.posY == redBishop1Square.posY) {
        redBishop1Square.failedpath = TRUE;
        return TRUE;
    }
    if(greyKnight2Rectangle1.posX == redBishop1Square.posX &&
       greyKnight2Rectangle1.posY == redBishop1Square.posY) {
        redBishop1Square.failedpath = TRUE;
        return TRUE;
    }
    if(greyBishop1Square.posX == redBishop1Square.posX &&
       greyBishop1Square.posY == redBishop1Square.posY) {
        redBishop1Square.failedpath = TRUE;
        return TRUE;
    }
    if(greyBishop2Square.posX == redBishop1Square.posX &&
       greyBishop2Square.posY == redBishop1Square.posY) {
        redBishop1Square.failedpath = TRUE;
        return TRUE;
    }
    if(greyRook1Rectangle1.posX == redBishop1Square.posX &&
       greyRook1Rectangle1.posY == redBishop1Square.posY) {
        redBishop1Square.failedpath = TRUE;
        return TRUE;
    }
    if(greyRook2Rectangle1.posX == redBishop1Square.posX &&
       greyRook2Rectangle1.posY == redBishop1Square.posY) {
        redBishop1Square.failedpath = TRUE;
        return TRUE;
    }
    if(greyQueenSquare.posX == redBishop1Square.posX &&
       greyQueenSquare.posY == redBishop1Square.posY) {
        redBishop1Square.failedpath = TRUE;
        return TRUE;
    }
    for(int g=0; g<8; g++) {
        if(greyPawnsBase[g].posX == redBishop1Square.posX &&
           greyPawnsBase[g].posY == redBishop1Square.posY) {
            redBishop1Square.failedpath = TRUE;
            return TRUE;
        }
    }
    boolean fail = FALSE;
    if(pos1 == ps1) {
        fail = FALSE;
    } else if(pos1 == -ps1) {
        fail = FALSE;
    } else {
        fail = TRUE;
        redBishop1Square.failedpath = fail;
    }
    if(pos1 < 0) {
        if(ps1 < 0) {
            boolean f = FALSE;
            if(pos1 < -100 && ps1 < -100) {
                f = moveRedBishop1(msg, j, i, pos1 + 100, ps1 + 100, pos2, ps2);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    redBishop1Square.posY = redBishop1Square.posY - 100;
                    redBishop1Square.posX = redBishop1Square.posX - 100;
                    redBishop1Square.y1 = redBishop1Square.y1 - 100;
                    redBishop1Square.x1 = redBishop1Square.x1 - 100;
                    redBishop1Square.y2 = redBishop1Square.y2 - 100;
                    redBishop1Square.x2 = redBishop1Square.x2 - 100;
                    redBishop1Rectangle.y1 = redBishop1Rectangle.y1 - 100;
                    redBishop1Rectangle.x1 = redBishop1Rectangle.x1 - 100;
                    redBishop1Rectangle.y2 = redBishop1Rectangle.y2 - 100;
                    redBishop1Rectangle.x2 = redBishop1Rectangle.x2 - 100;
                    redBishop1Ellipse.y1 = redBishop1Ellipse.y1 - 100;
                    redBishop1Ellipse.x1 = redBishop1Ellipse.x1 - 100;
                    redBishop1Ellipse.y2 = redBishop1Ellipse.y2 - 100;
                    redBishop1Ellipse.x2 = redBishop1Ellipse.x2 - 100;
                    redBishop1Base.y1 = redBishop1Base.y1 - 100;
                    redBishop1Base.x1 = redBishop1Base.x1 - 100;
                    redBishop1Base.y2 = redBishop1Base.y2 - 100;
                    redBishop1Base.x2 = redBishop1Base.x2 - 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            if(redPawnsBase[s].posY == redBishop1Square.posY &&
                               redPawnsBase[s].posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }

                            if(redBishop2Square.posY == redBishop1Square.posY &&
                               redBishop2Square.posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight1Rectangle1.posY == redBishop1Square.posY &&
                               redKnight1Rectangle1.posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight2Rectangle1.posY == redBishop1Square.posY &&
                               redKnight2Rectangle1.posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook1Rectangle1.posY == redBishop1Square.posY &&
                               redRook1Rectangle1.posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook2Rectangle1.posY == redBishop1Square.posY &&
                               redRook2Rectangle1.posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKingSquare.posY == redBishop1Square.posY &&
                               redKingSquare.posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }

                            if(j != -666) {
                                if(greyPawnsBase[s].posY == redBishop1Square.posY &&
                                   greyPawnsBase[s].posX == redBishop1Square.posX) {
                                    greyPawnsBase[s].posX = -1000;
                                    greyPawnsBase[s].x1 = -1000;
                                    greyPawnsBase[s].x2 = -1000;
                                    greyPawnsEllipse[s].x1 = -1000;
                                    greyPawnsEllipse[s].x2 = -1000;
                                }

                                if(greyQueenSquare.posY == redBishop1Square.posY &&
                                   greyQueenSquare.posX == redBishop1Square.posX) {
                                    greyQueenSquare.posX = -1000;
                                    greyQueenSquare.x1 = -1000;
                                    greyQueenSquare.x2 = -1000;
                                    greyQueenBase.x1 = -1000;
                                    greyQueenBase.x2 = -1000;
                                    greyQueenEllipse.x1 = -1000;
                                    greyQueenEllipse.x2 = -1000;
                                    greyQueenRectangle1.x1 = -1000;
                                    greyQueenRectangle1.x2 = -1000;
                                    greyQueenRectangle2.x1 = -1000;
                                    greyQueenRectangle2.x2 = -1000;
                                    greyQueenRectangle3.x1 = -1000;
                                    greyQueenRectangle3.x2 = -1000;
                                }

                                if(greyKnight1Rectangle1.posY == redBishop1Square.posY &&
                                   greyKnight1Rectangle1.posX == redBishop1Square.posX) {
                                    greyKnight1Rectangle1.posX = -1000;
                                    greyKnight1Rectangle1.x1 = -1000;
                                    greyKnight1Rectangle1.x2 = -1000;
                                    greyKnight1Rectangle2.x1 = -1000;
                                    greyKnight1Rectangle2.x2 = -1000;
                                    greyKnight1Base.x1 = -1000;
                                    greyKnight1Base.x2 = -1000;
                                    greyKnight1Ellipse.x1 = -1000;
                                    greyKnight1Ellipse.x2 = -1000;
                                }

                                if(greyKnight2Rectangle1.posY == redBishop1Square.posY &&
                                   greyKnight2Rectangle1.posX == redBishop1Square.posX) {
                                    greyKnight2Rectangle1.posX = -1000;
                                    greyKnight2Rectangle1.x1 = -1000;
                                    greyKnight2Rectangle1.x2 = -1000;
                                    greyKnight2Rectangle2.x1 = -1000;
                                    greyKnight2Rectangle2.x2 = -1000;
                                    greyKnight2Base.x1 = -1000;
                                    greyKnight2Base.x2 = -1000;
                                    greyKnight2Ellipse.x1 = -1000;
                                    greyKnight2Ellipse.x2 = -1000;
                                }

                                if(greyQueenSquare.posY == redBishop1Square.posY &&
                                   greyQueenSquare.posX == redBishop1Square.posX) {
                                    greyQueenSquare.posX = -1000;
                                    greyQueenSquare.x1 = -1000;
                                    greyQueenSquare.x2 = -1000;
                                    greyQueenRectangle1.x1 = -1000;
                                    greyQueenRectangle1.x2 = -1000;
                                    greyQueenRectangle2.x1 = -1000;
                                    greyQueenRectangle2.x2 = -1000;
                                    greyQueenRectangle3.x1 = -1000;
                                    greyQueenRectangle3.x2 = -1000;
                                    greyQueenBase.x1 = -1000;
                                    greyQueenBase.x2 = -1000;
                                    greyQueenEllipse.x1 = -1000;
                                    greyQueenEllipse.x2 = -1000;
                                }

                                if(greyRook1Rectangle1.posY == redBishop1Square.posY &&
                                   greyRook1Rectangle1.posX == redBishop1Square.posX) {
                                    greyRook1Rectangle1.posX = -1000;
                                    greyRook1Rectangle1.x1 = -1000;
                                    greyRook1Rectangle1.x2 = -1000;
                                    greyRook1Rectangle2.x1 = -1000;
                                    greyRook1Rectangle2.x2 = -1000;
                                    greyRook1Base.x1 = -1000;
                                    greyRook1Base.x2 = -1000;
                                    greyRook1Ellipse.x1 = -1000;
                                    greyRook1Ellipse.x2 = -1000;
                                }

                                if(greyRook2Rectangle1.posY == greyBishop2Square.posY &&
                                   greyRook2Rectangle1.posX == greyBishop2Square.posX) {
                                    greyRook2Rectangle1.posX = -1000;
                                    greyRook2Rectangle1.x1 = -1000;
                                    greyRook2Rectangle1.x2 = -1000;
                                    greyRook2Rectangle2.x1 = -1000;
                                    greyRook2Rectangle2.x2 = -1000;
                                    greyRook2Base.x1 = -1000;
                                    greyRook2Base.x2 = -1000;
                                    greyRook2Ellipse.x1 = -1000;
                                    greyRook2Ellipse.x2 = -1000;
                                }
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redBishop1Square.posY - 100 &&
                           redPawnsBase[s].posX == redBishop1Square.posX - 100) {
                            redBishop1Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == redBishop1Square.posY - 100 &&
                           greyPawnsBase[s].posX == redBishop1Square.posX - 100) {
                            redBishop1Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redBishop2Square.posY == redBishop1Square.posY - 100 &&
                       redBishop2Square.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == redBishop1Square.posY - 100 &&
                       redRook1Rectangle1.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == redBishop1Square.posY - 100 &&
                       redRook2Rectangle1.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == redBishop1Square.posY - 100 &&
                       redKnight1Rectangle1.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == redBishop1Square.posY - 100 &&
                       redKnight2Rectangle1.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == redBishop1Square.posY - 100 &&
                       greyBishop1Square.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == redBishop1Square.posY - 100 &&
                       redBishop2Square.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == redBishop1Square.posY - 100 &&
                       greyRook1Rectangle1.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == redBishop1Square.posY - 100 &&
                       greyRook2Rectangle1.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == redBishop1Square.posY - 100 &&
                       greyKnight1Rectangle1.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == redBishop1Square.posY - 100 &&
                       greyKnight2Rectangle1.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == redBishop1Square.posY - 100 &&
                       greyQueenSquare.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == redBishop1Square.posY - 100 &&
                       greyBishop1Square.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == redBishop1Square.posY - 100 &&
                       greyBishop2Square.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        redBishop1Square.posY = redBishop1Square.posY - 100;
                        redBishop1Square.y1 = redBishop1Square.y1 - 100;
                        redBishop1Square.y2 = redBishop1Square.y2 - 100;
                        redBishop1Rectangle.y1 = redBishop1Rectangle.y1 - 100;
                        redBishop1Rectangle.y2 = redBishop1Rectangle.y2 - 100;
                        redBishop1Ellipse.y1 = redBishop1Ellipse.y1 - 100;
                        redBishop1Ellipse.y2 = redBishop1Ellipse.y2 - 100;
                        redBishop1Base.y1 = redBishop1Base.y1 - 100;
                        redBishop1Base.y2 = redBishop1Base.y2 - 100;
                        redBishop1Square.posX = redBishop1Square.posX - 100;
                        redBishop1Square.x1 = redBishop1Square.x1 - 100;
                        redBishop1Square.x2 = redBishop1Square.x2 - 100;
                        redBishop1Rectangle.x1 = redBishop1Rectangle.x1 - 100;
                        redBishop1Rectangle.x2 = redBishop1Rectangle.x2 - 100;
                        redBishop1Ellipse.x1 = redBishop1Ellipse.x1 - 100;
                        redBishop1Ellipse.x2 = redBishop1Ellipse.x2 - 100;
                        redBishop1Base.x1 = redBishop1Base.x1 - 100;
                        redBishop1Base.x2 = redBishop1Base.x2 - 100;
                    }

                    return flag;
                }
            }

            else {

                redBishop1Square.failedpath = TRUE;
                return TRUE;
            }
        }
        if(ps1 > 0) {
            boolean f = FALSE;
            if(pos1 < -100 && ps1 > 100) {
                f = moveRedBishop1(msg, j, i, pos1 + 100, ps1 - 100, pos2, ps2);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    redBishop1Square.posY = redBishop1Square.posY - 100;
                    redBishop1Square.posX = redBishop1Square.posX + 100;
                    redBishop1Square.y1 = redBishop1Square.y1 - 100;
                    redBishop1Square.x1 = redBishop1Square.x1 + 100;
                    redBishop1Square.y2 = redBishop1Square.y2 - 100;
                    redBishop1Square.x2 = redBishop1Square.x2 + 100;
                    redBishop1Rectangle.y1 = redBishop1Rectangle.y1 - 100;
                    redBishop1Rectangle.x1 = redBishop1Rectangle.x1 + 100;
                    redBishop1Rectangle.y2 = redBishop1Rectangle.y2 - 100;
                    redBishop1Rectangle.x2 = redBishop1Rectangle.x2 + 100;
                    redBishop1Ellipse.y1 = redBishop1Ellipse.y1 - 100;
                    redBishop1Ellipse.x1 = redBishop1Ellipse.x1 + 100;
                    redBishop1Ellipse.y2 = redBishop1Ellipse.y2 - 100;
                    redBishop1Ellipse.x2 = redBishop1Ellipse.x2 + 100;
                    redBishop1Base.y1 = redBishop1Base.y1 - 100;
                    redBishop1Base.x1 = redBishop1Base.x1 + 100;
                    redBishop1Base.y2 = redBishop1Base.y2 - 100;
                    redBishop1Base.x2 = redBishop1Base.x2 + 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            if(redPawnsBase[s].posY == redBishop1Square.posY &&
                               redPawnsBase[s].posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redBishop2Square.posY == redBishop1Square.posY &&
                               redBishop2Square.posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight1Rectangle1.posY == redBishop1Square.posY &&
                               redKnight1Rectangle1.posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight2Rectangle1.posY == redBishop1Square.posY &&
                               redKnight2Rectangle1.posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook1Rectangle1.posY == redBishop1Square.posY &&
                               redRook1Rectangle1.posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook2Rectangle1.posY == redBishop1Square.posY &&
                               redRook2Rectangle1.posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKingSquare.posY == redBishop1Square.posY &&
                               redKingSquare.posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }

                            if(j != -666) {
                                if(greyPawnsBase[s].posY == redBishop1Square.posY &&
                                   greyPawnsBase[s].posX == redBishop1Square.posX) {
                                    greyPawnsBase[s].posX = -1000;
                                    greyPawnsBase[s].x1 = -1000;
                                    greyPawnsBase[s].x2 = -1000;
                                    greyPawnsEllipse[s].x1 = -1000;
                                    greyPawnsEllipse[s].x2 = -1000;
                                }

                                if(greyQueenSquare.posY == redBishop1Square.posY &&
                                   greyQueenSquare.posX == redBishop1Square.posX) {
                                    greyQueenSquare.posX = -1000;
                                    greyQueenSquare.x1 = -1000;
                                    greyQueenSquare.x2 = -1000;
                                    greyQueenBase.x1 = -1000;
                                    greyQueenBase.x2 = -1000;
                                    greyQueenEllipse.x1 = -1000;
                                    greyQueenEllipse.x2 = -1000;
                                    greyQueenRectangle1.x1 = -1000;
                                    greyQueenRectangle1.x2 = -1000;
                                    greyQueenRectangle2.x1 = -1000;
                                    greyQueenRectangle2.x2 = -1000;
                                    greyQueenRectangle3.x1 = -1000;
                                    greyQueenRectangle3.x2 = -1000;
                                }

                                if(greyKnight1Rectangle1.posY == redBishop1Square.posY &&
                                   greyKnight1Rectangle1.posX == redBishop1Square.posX) {
                                    greyKnight1Rectangle1.posX = -1000;
                                    greyKnight1Rectangle1.x1 = -1000;
                                    greyKnight1Rectangle1.x2 = -1000;
                                    greyKnight1Rectangle2.x1 = -1000;
                                    greyKnight1Rectangle2.x2 = -1000;
                                    greyKnight1Base.x1 = -1000;
                                    greyKnight1Base.x2 = -1000;
                                    greyKnight1Ellipse.x1 = -1000;
                                    greyKnight1Ellipse.x2 = -1000;
                                }

                                if(greyKnight2Rectangle1.posY == redBishop1Square.posY &&
                                   greyKnight2Rectangle1.posX == redBishop1Square.posX) {
                                    greyKnight2Rectangle1.posX = -1000;
                                    greyKnight2Rectangle1.x1 = -1000;
                                    greyKnight2Rectangle1.x2 = -1000;
                                    greyKnight2Rectangle2.x1 = -1000;
                                    greyKnight2Rectangle2.x2 = -1000;
                                    greyKnight2Base.x1 = -1000;
                                    greyKnight2Base.x2 = -1000;
                                    greyKnight2Ellipse.x1 = -1000;
                                    greyKnight2Ellipse.x2 = -1000;
                                }

                                if(greyQueenSquare.posY == redBishop1Square.posY &&
                                   greyQueenSquare.posX == redBishop1Square.posX) {
                                    greyQueenSquare.posX = -1000;
                                    greyQueenSquare.x1 = -1000;
                                    greyQueenSquare.x2 = -1000;
                                    greyQueenRectangle1.x1 = -1000;
                                    greyQueenRectangle1.x2 = -1000;
                                    greyQueenRectangle2.x1 = -1000;
                                    greyQueenRectangle2.x2 = -1000;
                                    greyQueenRectangle3.x1 = -1000;
                                    greyQueenRectangle3.x2 = -1000;
                                    greyQueenBase.x1 = -1000;
                                    greyQueenBase.x2 = -1000;
                                    greyQueenEllipse.x1 = -1000;
                                    greyQueenEllipse.x2 = -1000;
                                }

                                if(greyRook1Rectangle1.posY == redBishop1Square.posY &&
                                   greyRook1Rectangle1.posX == redBishop1Square.posX) {
                                    greyRook1Rectangle1.posX = -1000;
                                    greyRook1Rectangle1.x1 = -1000;
                                    greyRook1Rectangle1.x2 = -1000;
                                    greyRook1Rectangle2.x1 = -1000;
                                    greyRook1Rectangle2.x2 = -1000;
                                    greyRook1Base.x1 = -1000;
                                    greyRook1Base.x2 = -1000;
                                    greyRook1Ellipse.x1 = -1000;
                                    greyRook1Ellipse.x2 = -1000;
                                }

                                if(greyRook2Rectangle1.posY == greyBishop2Square.posY &&
                                   greyRook2Rectangle1.posX == greyBishop2Square.posX) {
                                    greyRook2Rectangle1.posX = -1000;
                                    greyRook2Rectangle1.x1 = -1000;
                                    greyRook2Rectangle1.x2 = -1000;
                                    greyRook2Rectangle2.x1 = -1000;
                                    greyRook2Rectangle2.x2 = -1000;
                                    greyRook2Base.x1 = -1000;
                                    greyRook2Base.x2 = -1000;
                                    greyRook2Ellipse.x1 = -1000;
                                    greyRook2Ellipse.x2 = -1000;
                                }
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redBishop1Square.posY - 100 &&
                           redPawnsBase[s].posX == redBishop1Square.posX + 100) {
                            redBishop1Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == redBishop1Square.posY - 100 &&
                           greyPawnsBase[s].posX == redBishop1Square.posX + 100) {
                            redBishop1Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redBishop2Square.posY == redBishop1Square.posY - 100 &&
                       redBishop2Square.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == redBishop1Square.posY - 100 &&
                       redRook1Rectangle1.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == redBishop1Square.posY - 100 &&
                       redRook2Rectangle1.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == redBishop1Square.posY - 100 &&
                       redKnight1Rectangle1.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == redBishop1Square.posY - 100 &&
                       redKnight2Rectangle1.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == redBishop1Square.posY - 100 &&
                       redBishop1Square.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == redBishop1Square.posY - 100 &&
                       greyRook1Rectangle1.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == redBishop1Square.posY - 100 &&
                       greyRook2Rectangle1.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == redBishop1Square.posY - 100 &&
                       greyKnight1Rectangle1.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == redBishop1Square.posY - 100 &&
                       greyKnight2Rectangle1.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == redBishop1Square.posY - 100 &&
                       greyQueenSquare.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == redBishop1Square.posY - 100 &&
                       greyBishop1Square.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == redBishop1Square.posY - 100 &&
                       greyBishop2Square.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        redBishop1Square.posY = redBishop1Square.posY - 100;
                        redBishop1Square.y1 = redBishop1Square.y1 - 100;
                        redBishop1Square.y2 = redBishop1Square.y2 - 100;
                        redBishop1Rectangle.y1 = redBishop1Rectangle.y1 - 100;
                        redBishop1Rectangle.y2 = redBishop1Rectangle.y2 - 100;
                        redBishop1Ellipse.y1 = redBishop1Ellipse.y1 - 100;
                        redBishop1Ellipse.y2 = redBishop1Ellipse.y2 - 100;
                        redBishop1Base.y1 = redBishop1Base.y1 - 100;
                        redBishop1Base.y2 = redBishop1Base.y2 - 100;
                        redBishop1Square.posX = redBishop1Square.posX + 100;
                        redBishop1Square.x1 = redBishop1Square.x1 + 100;
                        redBishop1Square.x2 = redBishop1Square.x2 + 100;
                        redBishop1Rectangle.x1 = redBishop1Rectangle.x1 + 100;
                        redBishop1Rectangle.x2 = redBishop1Rectangle.x2 + 100;
                        redBishop1Ellipse.x1 = redBishop1Ellipse.x1 + 100;
                        redBishop1Ellipse.x2 = redBishop1Ellipse.x2 + 100;
                        redBishop1Base.x1 = redBishop1Base.x1 + 100;
                        redBishop1Base.x2 = redBishop1Base.x2 + 100;
                    }

                    return flag;
                }
            }

            else {

                redBishop1Square.failedpath = TRUE;
                return TRUE;
            }
        }
    } else if(pos1 > 0) {
        if(ps1 < 0) {
            boolean f = FALSE;
            if(pos1 > 100 && ps1 < -100) {
                f = moveRedBishop1(msg, j, i, pos1 - 100, ps1 + 100, pos2, ps2);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    redBishop1Square.posY = redBishop1Square.posY + 100;
                    redBishop1Square.posX = redBishop1Square.posX - 100;
                    redBishop1Square.y1 = redBishop1Square.y1 + 100;
                    redBishop1Square.x1 = redBishop1Square.x1 - 100;
                    redBishop1Square.y2 = redBishop1Square.y2 + 100;
                    redBishop1Square.x2 = redBishop1Square.x2 - 100;
                    redBishop1Rectangle.y1 = redBishop1Rectangle.y1 + 100;
                    redBishop1Rectangle.x1 = redBishop1Rectangle.x1 - 100;
                    redBishop1Rectangle.y2 = redBishop1Rectangle.y2 + 100;
                    redBishop1Rectangle.x2 = redBishop1Rectangle.x2 - 100;
                    redBishop1Ellipse.y1 = redBishop1Ellipse.y1 + 100;
                    redBishop1Ellipse.x1 = redBishop1Ellipse.x1 - 100;
                    redBishop1Ellipse.y2 = redBishop1Ellipse.y2 + 100;
                    redBishop1Ellipse.x2 = redBishop1Ellipse.x2 - 100;
                    redBishop1Base.y1 = redBishop1Base.y1 + 100;
                    redBishop1Base.x1 = redBishop1Base.x1 - 100;
                    redBishop1Base.y2 = redBishop1Base.y2 + 100;
                    redBishop1Base.x2 = redBishop1Base.x2 - 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            if(redPawnsBase[s].posY == redBishop1Square.posY &&
                               redPawnsBase[s].posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redBishop2Square.posY == redBishop1Square.posY &&
                               redBishop2Square.posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight1Rectangle1.posY == redBishop1Square.posY &&
                               redKnight1Rectangle1.posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight2Rectangle1.posY == redBishop1Square.posY &&
                               redKnight2Rectangle1.posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook1Rectangle1.posY == redBishop1Square.posY &&
                               redRook1Rectangle1.posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook2Rectangle1.posY == redBishop1Square.posY &&
                               redRook2Rectangle1.posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKingSquare.posY == redBishop1Square.posY &&
                               redKingSquare.posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }

                            if(j != -666) {
                                if(greyPawnsBase[s].posY == redBishop1Square.posY &&
                                   greyPawnsBase[s].posX == redBishop1Square.posX) {
                                    greyPawnsBase[s].posX = -1000;
                                    greyPawnsBase[s].x1 = -1000;
                                    greyPawnsBase[s].x2 = -1000;
                                    greyPawnsEllipse[s].x1 = -1000;
                                    greyPawnsEllipse[s].x2 = -1000;
                                }

                                if(greyQueenSquare.posY == redBishop1Square.posY &&
                                   greyQueenSquare.posX == redBishop1Square.posX) {
                                    greyQueenSquare.posX = -1000;
                                    greyQueenSquare.x1 = -1000;
                                    greyQueenSquare.x2 = -1000;
                                    greyQueenBase.x1 = -1000;
                                    greyQueenBase.x2 = -1000;
                                    greyQueenEllipse.x1 = -1000;
                                    greyQueenEllipse.x2 = -1000;
                                    greyQueenRectangle1.x1 = -1000;
                                    greyQueenRectangle1.x2 = -1000;
                                    greyQueenRectangle2.x1 = -1000;
                                    greyQueenRectangle2.x2 = -1000;
                                    greyQueenRectangle3.x1 = -1000;
                                    greyQueenRectangle3.x2 = -1000;
                                }

                                if(greyKnight1Rectangle1.posY == redBishop1Square.posY &&
                                   greyKnight1Rectangle1.posX == redBishop1Square.posX) {
                                    greyKnight1Rectangle1.posX = -1000;
                                    greyKnight1Rectangle1.x1 = -1000;
                                    greyKnight1Rectangle1.x2 = -1000;
                                    greyKnight1Rectangle2.x1 = -1000;
                                    greyKnight1Rectangle2.x2 = -1000;
                                    greyKnight1Base.x1 = -1000;
                                    greyKnight1Base.x2 = -1000;
                                    greyKnight1Ellipse.x1 = -1000;
                                    greyKnight1Ellipse.x2 = -1000;
                                }

                                if(greyKnight2Rectangle1.posY == redBishop1Square.posY &&
                                   greyKnight2Rectangle1.posX == redBishop1Square.posX) {
                                    greyKnight2Rectangle1.posX = -1000;
                                    greyKnight2Rectangle1.x1 = -1000;
                                    greyKnight2Rectangle1.x2 = -1000;
                                    greyKnight2Rectangle2.x1 = -1000;
                                    greyKnight2Rectangle2.x2 = -1000;
                                    greyKnight2Base.x1 = -1000;
                                    greyKnight2Base.x2 = -1000;
                                    greyKnight2Ellipse.x1 = -1000;
                                    greyKnight2Ellipse.x2 = -1000;
                                }

                                if(greyQueenSquare.posY == redBishop1Square.posY &&
                                   greyQueenSquare.posX == redBishop1Square.posX) {
                                    greyQueenSquare.posX = -1000;
                                    greyQueenSquare.x1 = -1000;
                                    greyQueenSquare.x2 = -1000;
                                    greyQueenRectangle1.x1 = -1000;
                                    greyQueenRectangle1.x2 = -1000;
                                    greyQueenRectangle2.x1 = -1000;
                                    greyQueenRectangle2.x2 = -1000;
                                    greyQueenRectangle3.x1 = -1000;
                                    greyQueenRectangle3.x2 = -1000;
                                    greyQueenBase.x1 = -1000;
                                    greyQueenBase.x2 = -1000;
                                    greyQueenEllipse.x1 = -1000;
                                    greyQueenEllipse.x2 = -1000;
                                }

                                if(greyRook1Rectangle1.posY == redBishop1Square.posY &&
                                   greyRook1Rectangle1.posX == redBishop1Square.posX) {
                                    greyRook1Rectangle1.posX = -1000;
                                    greyRook1Rectangle1.x1 = -1000;
                                    greyRook1Rectangle1.x2 = -1000;
                                    greyRook1Rectangle2.x1 = -1000;
                                    greyRook1Rectangle2.x2 = -1000;
                                    greyRook1Base.x1 = -1000;
                                    greyRook1Base.x2 = -1000;
                                    greyRook1Ellipse.x1 = -1000;
                                    greyRook1Ellipse.x2 = -1000;
                                }

                                if(greyRook2Rectangle1.posY == greyBishop2Square.posY &&
                                   greyRook2Rectangle1.posX == greyBishop2Square.posX) {
                                    greyRook2Rectangle1.posX = -1000;
                                    greyRook2Rectangle1.x1 = -1000;
                                    greyRook2Rectangle1.x2 = -1000;
                                    greyRook2Rectangle2.x1 = -1000;
                                    greyRook2Rectangle2.x2 = -1000;
                                    greyRook2Base.x1 = -1000;
                                    greyRook2Base.x2 = -1000;
                                    greyRook2Ellipse.x1 = -1000;
                                    greyRook2Ellipse.x2 = -1000;
                                }
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redBishop1Square.posY + 100 &&
                           redPawnsBase[s].posX == redBishop1Square.posX - 100) {
                            redBishop1Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == redBishop1Square.posY + 100 &&
                           greyPawnsBase[s].posX == redBishop1Square.posX - 100) {
                            redBishop1Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redBishop1Square.posY == redBishop1Square.posY + 100 &&
                       redBishop1Square.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == redBishop1Square.posY + 100 &&
                       redBishop2Square.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == redBishop1Square.posY + 100 &&
                       redRook1Rectangle1.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == redBishop1Square.posY + 100 &&
                       redRook2Rectangle1.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == redBishop1Square.posY + 100 &&
                       redKnight1Rectangle1.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == redBishop1Square.posY + 100 &&
                       redKnight2Rectangle1.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == redBishop1Square.posY + 100 &&
                       redBishop1Square.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == redBishop1Square.posY + 100 &&
                       greyRook1Rectangle1.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == redBishop1Square.posY + 100 &&
                       greyRook2Rectangle1.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == redBishop1Square.posY + 100 &&
                       greyKnight1Rectangle1.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == redBishop1Square.posY + 100 &&
                       greyKnight2Rectangle1.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == redBishop1Square.posY + 100 &&
                       greyQueenSquare.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == redBishop1Square.posY + 100 &&
                       greyBishop1Square.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == redBishop1Square.posY + 100 &&
                       greyBishop2Square.posX == redBishop1Square.posX - 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        redBishop1Square.posY = redBishop1Square.posY + 100;
                        redBishop1Square.y1 = redBishop1Square.y1 + 100;
                        redBishop1Square.y2 = redBishop1Square.y2 + 100;
                        redBishop1Rectangle.y1 = redBishop1Rectangle.y1 + 100;
                        redBishop1Rectangle.y2 = redBishop1Rectangle.y2 + 100;
                        redBishop1Ellipse.y1 = redBishop1Ellipse.y1 + 100;
                        redBishop1Ellipse.y2 = redBishop1Ellipse.y2 + 100;
                        redBishop1Base.y1 = redBishop1Base.y1 + 100;
                        redBishop1Base.y2 = redBishop1Base.y2 + 100;
                        redBishop1Square.posX = redBishop1Square.posX - 100;
                        redBishop1Square.x1 = redBishop1Square.x1 - 100;
                        redBishop1Square.x2 = redBishop1Square.x2 - 100;
                        redBishop1Rectangle.x1 = redBishop1Rectangle.x1 - 100;
                        redBishop1Rectangle.x2 = redBishop1Rectangle.x2 - 100;
                        redBishop1Ellipse.x1 = redBishop1Ellipse.x1 - 100;
                        redBishop1Ellipse.x2 = redBishop1Ellipse.x2 - 100;
                        redBishop1Base.x1 = redBishop1Base.x1 - 100;
                        redBishop1Base.x2 = redBishop1Base.x2 - 100;
                    }

                    return flag;
                }
            }

            else {

                redBishop1Square.failedpath = TRUE;
                return TRUE;
            }
        }
        if(ps1 > 0) {
            boolean f = FALSE;
            if(pos1 > 100 && ps1 > 100) {
                f = moveRedBishop1(msg, j, i, pos1 - 100, ps1 - 100, pos2, ps2);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    redBishop1Square.posY = redBishop1Square.posY + 100;
                    redBishop1Square.posX = redBishop1Square.posX + 100;
                    redBishop1Square.y1 = redBishop1Square.y1 + 100;
                    redBishop1Square.x1 = redBishop1Square.x1 + 100;
                    redBishop1Square.y2 = redBishop1Square.y2 + 100;
                    redBishop1Square.x2 = redBishop1Square.x2 + 100;
                    redBishop1Rectangle.y1 = redBishop1Rectangle.y1 + 100;
                    redBishop1Rectangle.x1 = redBishop1Rectangle.x1 + 100;
                    redBishop1Rectangle.y2 = redBishop1Rectangle.y2 + 100;
                    redBishop1Rectangle.x2 = redBishop1Rectangle.x2 + 100;
                    redBishop1Ellipse.y1 = redBishop1Ellipse.y1 + 100;
                    redBishop1Ellipse.x1 = redBishop1Ellipse.x1 + 100;
                    redBishop1Ellipse.y2 = redBishop1Ellipse.y2 + 100;
                    redBishop1Ellipse.x2 = redBishop1Ellipse.x2 + 100;
                    redBishop1Base.y1 = redBishop1Base.y1 + 100;
                    redBishop1Base.x1 = redBishop1Base.x1 + 100;
                    redBishop1Base.y2 = redBishop1Base.y2 + 100;
                    redBishop1Base.x2 = redBishop1Base.x2 + 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            if(redPawnsBase[s].posY == redBishop1Square.posY &&
                               redPawnsBase[s].posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redBishop2Square.posY == redBishop1Square.posY &&
                               redBishop2Square.posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight1Rectangle1.posY == redBishop1Square.posY &&
                               redKnight1Rectangle1.posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight2Rectangle1.posY == redBishop1Square.posY &&
                               redKnight2Rectangle1.posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook1Rectangle1.posY == redBishop1Square.posY &&
                               redRook1Rectangle1.posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook2Rectangle1.posY == redBishop1Square.posY &&
                               redRook2Rectangle1.posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKingSquare.posY == redBishop1Square.posY &&
                               redKingSquare.posX == redBishop1Square.posX) {
                                redBishop1Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(j != -666) {
                                if(greyPawnsBase[s].posY == redBishop1Square.posY &&
                                   greyPawnsBase[s].posX == redBishop1Square.posX) {
                                    greyPawnsBase[s].posX = -1000;
                                    greyPawnsBase[s].x1 = -1000;
                                    greyPawnsBase[s].x2 = -1000;
                                    greyPawnsEllipse[s].x1 = -1000;
                                    greyPawnsEllipse[s].x2 = -1000;
                                }

                                if(greyQueenSquare.posY == redBishop1Square.posY &&
                                   greyQueenSquare.posX == redBishop1Square.posX) {
                                    greyQueenSquare.posX = -1000;
                                    greyQueenSquare.x1 = -1000;
                                    greyQueenSquare.x2 = -1000;
                                    greyQueenBase.x1 = -1000;
                                    greyQueenBase.x2 = -1000;
                                    greyQueenEllipse.x1 = -1000;
                                    greyQueenEllipse.x2 = -1000;
                                    greyQueenRectangle1.x1 = -1000;
                                    greyQueenRectangle1.x2 = -1000;
                                    greyQueenRectangle2.x1 = -1000;
                                    greyQueenRectangle2.x2 = -1000;
                                    greyQueenRectangle3.x1 = -1000;
                                    greyQueenRectangle3.x2 = -1000;
                                }

                                if(greyKnight1Rectangle1.posY == redBishop1Square.posY &&
                                   greyKnight1Rectangle1.posX == redBishop1Square.posX) {
                                    greyKnight1Rectangle1.posX = -1000;
                                    greyKnight1Rectangle1.x1 = -1000;
                                    greyKnight1Rectangle1.x2 = -1000;
                                    greyKnight1Rectangle2.x1 = -1000;
                                    greyKnight1Rectangle2.x2 = -1000;
                                    greyKnight1Base.x1 = -1000;
                                    greyKnight1Base.x2 = -1000;
                                    greyKnight1Ellipse.x1 = -1000;
                                    greyKnight1Ellipse.x2 = -1000;
                                }

                                if(greyKnight2Rectangle1.posY == redBishop1Square.posY &&
                                   greyKnight2Rectangle1.posX == redBishop1Square.posX) {
                                    greyKnight2Rectangle1.posX = -1000;
                                    greyKnight2Rectangle1.x1 = -1000;
                                    greyKnight2Rectangle1.x2 = -1000;
                                    greyKnight2Rectangle2.x1 = -1000;
                                    greyKnight2Rectangle2.x2 = -1000;
                                    greyKnight2Base.x1 = -1000;
                                    greyKnight2Base.x2 = -1000;
                                    greyKnight2Ellipse.x1 = -1000;
                                    greyKnight2Ellipse.x2 = -1000;
                                }

                                if(greyQueenSquare.posY == redBishop1Square.posY &&
                                   greyQueenSquare.posX == redBishop1Square.posX) {
                                    greyQueenSquare.posX = -1000;
                                    greyQueenSquare.x1 = -1000;
                                    greyQueenSquare.x2 = -1000;
                                    greyQueenRectangle1.x1 = -1000;
                                    greyQueenRectangle1.x2 = -1000;
                                    greyQueenRectangle2.x1 = -1000;
                                    greyQueenRectangle2.x2 = -1000;
                                    greyQueenRectangle3.x1 = -1000;
                                    greyQueenRectangle3.x2 = -1000;
                                    greyQueenBase.x1 = -1000;
                                    greyQueenBase.x2 = -1000;
                                    greyQueenEllipse.x1 = -1000;
                                    greyQueenEllipse.x2 = -1000;
                                }

                                if(greyRook1Rectangle1.posY == redBishop1Square.posY &&
                                   greyRook1Rectangle1.posX == redBishop1Square.posX) {
                                    greyRook1Rectangle1.posX = -1000;
                                    greyRook1Rectangle1.x1 = -1000;
                                    greyRook1Rectangle1.x2 = -1000;
                                    greyRook1Rectangle2.x1 = -1000;
                                    greyRook1Rectangle2.x2 = -1000;
                                    greyRook1Base.x1 = -1000;
                                    greyRook1Base.x2 = -1000;
                                    greyRook1Ellipse.x1 = -1000;
                                    greyRook1Ellipse.x2 = -1000;
                                }

                                if(greyRook2Rectangle1.posY == greyBishop2Square.posY &&
                                   greyRook2Rectangle1.posX == greyBishop2Square.posX) {
                                    greyRook2Rectangle1.posX = -1000;
                                    greyRook2Rectangle1.x1 = -1000;
                                    greyRook2Rectangle1.x2 = -1000;
                                    greyRook2Rectangle2.x1 = -1000;
                                    greyRook2Rectangle2.x2 = -1000;
                                    greyRook2Base.x1 = -1000;
                                    greyRook2Base.x2 = -1000;
                                    greyRook2Ellipse.x1 = -1000;
                                    greyRook2Ellipse.x2 = -1000;
                                }
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redBishop1Square.posY + 100 &&
                           redPawnsBase[s].posX == redBishop1Square.posX + 100) {
                            redBishop1Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == redBishop1Square.posY + 100 &&
                           greyPawnsBase[s].posX == redBishop1Square.posX + 100) {
                            redBishop1Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redBishop1Square.posY == redBishop1Square.posY + 100 &&
                       redBishop1Square.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop2Square.posY == redBishop1Square.posY + 100 &&
                       redBishop2Square.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == redBishop1Square.posY + 100 &&
                       redRook1Rectangle1.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == redBishop1Square.posY + 100 &&
                       redRook2Rectangle1.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == redBishop1Square.posY + 100 &&
                       redKnight1Rectangle1.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == redBishop1Square.posY + 100 &&
                       redKnight2Rectangle1.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == redBishop1Square.posY + 100 &&
                       redBishop1Square.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == redBishop1Square.posY + 100 &&
                       greyRook1Rectangle1.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == redBishop1Square.posY + 100 &&
                       greyRook2Rectangle1.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == redBishop1Square.posY + 100 &&
                       greyKnight1Rectangle1.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == redBishop1Square.posY + 100 &&
                       greyKnight2Rectangle1.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == redBishop1Square.posY + 100 &&
                       greyQueenSquare.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == redBishop1Square.posY + 100 &&
                       greyBishop1Square.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == redBishop1Square.posY + 100 &&
                       greyBishop2Square.posX == redBishop1Square.posX + 100) {
                        redBishop1Square.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        redBishop1Square.posY = redBishop1Square.posY + 100;
                        redBishop1Square.y1 = redBishop1Square.y1 + 100;
                        redBishop1Square.y2 = redBishop1Square.y2 + 100;
                        redBishop1Rectangle.y1 = redBishop1Rectangle.y1 + 100;
                        redBishop1Rectangle.y2 = redBishop1Rectangle.y2 + 100;
                        redBishop1Ellipse.y1 = redBishop1Ellipse.y1 + 100;
                        redBishop1Ellipse.y2 = redBishop1Ellipse.y2 + 100;
                        redBishop1Base.y1 = redBishop1Base.y1 + 100;
                        redBishop1Base.y2 = redBishop1Base.y2 + 100;
                        redBishop1Square.posX = redBishop1Square.posX + 100;
                        redBishop1Square.x1 = redBishop1Square.x1 + 100;
                        redBishop1Square.x2 = redBishop1Square.x2 + 100;
                        redBishop1Rectangle.x1 = redBishop1Rectangle.x1 + 100;
                        redBishop1Rectangle.x2 = redBishop1Rectangle.x2 + 100;
                        redBishop1Ellipse.x1 = redBishop1Ellipse.x1 + 100;
                        redBishop1Ellipse.x2 = redBishop1Ellipse.x2 + 100;
                        redBishop1Base.x1 = redBishop1Base.x1 + 100;
                        redBishop1Base.x2 = redBishop1Base.x2 + 100;
                    }

                    return flag;
                }
            }

            else {

                redBishop1Square.failedpath = TRUE;
                return TRUE;
            }
        }
    }
}

boolean moveRedBishop2(UINT msg, int j, int i, int pos1, int ps1, int pos2, int ps2) {

    if(greyKnight1Rectangle1.posX == redBishop2Square.posX &&
       greyKnight1Rectangle1.posY == redBishop2Square.posY) {
        redBishop2Square.failedpath = TRUE;
        return TRUE;
    }
    if(greyKnight2Rectangle1.posX == redBishop2Square.posX &&
       greyKnight2Rectangle1.posY == redBishop2Square.posY) {
        redBishop2Square.failedpath = TRUE;
        return TRUE;
    }
    if(greyBishop1Square.posX == redBishop2Square.posX &&
       greyBishop1Square.posY == redBishop2Square.posY) {
        redBishop2Square.failedpath = TRUE;
        return TRUE;
    }
    if(greyBishop2Square.posX == redBishop2Square.posX &&
       greyBishop2Square.posY == redBishop2Square.posY) {
        redBishop2Square.failedpath = TRUE;
        return TRUE;
    }
    if(greyRook1Rectangle1.posX == redBishop2Square.posX &&
       greyRook1Rectangle1.posY == redBishop2Square.posY) {
        redBishop2Square.failedpath = TRUE;
        return TRUE;
    }
    if(greyRook2Rectangle1.posX == redBishop2Square.posX &&
       greyRook2Rectangle1.posY == redBishop2Square.posY) {
        redBishop2Square.failedpath = TRUE;
        return TRUE;
    }
    if(greyQueenSquare.posX == redBishop2Square.posX &&
       greyQueenSquare.posY == redBishop2Square.posY) {
        redBishop2Square.failedpath = TRUE;
        return TRUE;
    }
    for(int g=0; g<8; g++) {
        if(greyPawnsBase[g].posX == redBishop2Square.posX &&
           greyPawnsBase[g].posY == redBishop2Square.posY) {
            redBishop2Square.failedpath = TRUE;
            return TRUE;
        }
    }
    boolean fail = FALSE;
    if(pos1 == ps1) {
        fail = FALSE;
    } else if(pos1 == -ps1) {
        fail = FALSE;
    } else {
        fail = TRUE;
        redBishop2Square.failedpath = fail;
    }
    if(pos1 < 0) {
        if(ps1 < 0) {
            boolean f = FALSE;
            if(pos1 < -100 && ps1 < -100) {
                f = moveRedBishop2(msg, j, i, pos1 + 100, ps1 + 100, pos2, ps2);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    redBishop2Square.posY = redBishop2Square.posY - 100;
                    redBishop2Square.posX = redBishop2Square.posX - 100;
                    redBishop2Square.y1 = redBishop2Square.y1 - 100;
                    redBishop2Square.x1 = redBishop2Square.x1 - 100;
                    redBishop2Square.y2 = redBishop2Square.y2 - 100;
                    redBishop2Square.x2 = redBishop2Square.x2 - 100;
                    redBishop2Rectangle.y1 = redBishop2Rectangle.y1 - 100;
                    redBishop2Rectangle.x1 = redBishop2Rectangle.x1 - 100;
                    redBishop2Rectangle.y2 = redBishop2Rectangle.y2 - 100;
                    redBishop2Rectangle.x2 = redBishop2Rectangle.x2 - 100;
                    redBishop2Ellipse.y1 = redBishop2Ellipse.y1 - 100;
                    redBishop2Ellipse.x1 = redBishop2Ellipse.x1 - 100;
                    redBishop2Ellipse.y2 = redBishop2Ellipse.y2 - 100;
                    redBishop2Ellipse.x2 = redBishop2Ellipse.x2 - 100;
                    redBishop2Base.y1 = redBishop2Base.y1 - 100;
                    redBishop2Base.x1 = redBishop2Base.x1 - 100;
                    redBishop2Base.y2 = redBishop2Base.y2 - 100;
                    redBishop2Base.x2 = redBishop2Base.x2 - 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            if(redPawnsBase[s].posY == redBishop2Square.posY &&
                               redPawnsBase[s].posX == redBishop2Square.posX) {
                                redBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redBishop1Square.posY == redBishop2Square.posY &&
                               redBishop1Square.posX == redBishop2Square.posX) {
                                redBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight1Rectangle1.posY == redBishop2Square.posY &&
                               redKnight1Rectangle1.posX == redBishop2Square.posX) {
                                redBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight2Rectangle1.posY == redBishop2Square.posY &&
                               redKnight2Rectangle1.posX == redBishop2Square.posX) {
                                redBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook1Rectangle1.posY == redBishop2Square.posY &&
                               redRook1Rectangle1.posX == redBishop2Square.posX) {
                                redBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook2Rectangle1.posY == redBishop2Square.posY &&
                               redRook2Rectangle1.posX == redBishop2Square.posX) {
                                redBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKingSquare.posY == redBishop2Square.posY &&
                               redKingSquare.posX == redBishop2Square.posX) {
                                redBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(j != -666) {
                                if(greyPawnsBase[s].posY == redBishop2Square.posY &&
                                   greyPawnsBase[s].posX == redBishop2Square.posX) {
                                    greyPawnsBase[s].posX = -1000;
                                    greyPawnsBase[s].x1 = -1000;
                                    greyPawnsBase[s].x2 = -1000;
                                    greyPawnsEllipse[s].x1 = -1000;
                                    greyPawnsEllipse[s].x2 = -1000;
                                }

                                if(greyQueenSquare.posY == redBishop2Square.posY &&
                                   greyQueenSquare.posX == redBishop2Square.posX) {
                                    greyQueenSquare.posX = -1000;
                                    greyQueenSquare.x1 = -1000;
                                    greyQueenSquare.x2 = -1000;
                                    greyQueenBase.x1 = -1000;
                                    greyQueenBase.x2 = -1000;
                                    greyQueenEllipse.x1 = -1000;
                                    greyQueenEllipse.x2 = -1000;
                                    greyQueenRectangle1.x1 = -1000;
                                    greyQueenRectangle1.x2 = -1000;
                                    greyQueenRectangle2.x1 = -1000;
                                    greyQueenRectangle2.x2 = -1000;
                                    greyQueenRectangle3.x1 = -1000;
                                    greyQueenRectangle3.x2 = -1000;
                                }

                                if(greyKnight1Rectangle1.posY == redBishop2Square.posY &&
                                   greyKnight1Rectangle1.posX == redBishop2Square.posX) {
                                    greyKnight1Rectangle1.posX = -1000;
                                    greyKnight1Rectangle1.x1 = -1000;
                                    greyKnight1Rectangle1.x2 = -1000;
                                    greyKnight1Rectangle2.x1 = -1000;
                                    greyKnight1Rectangle2.x2 = -1000;
                                    greyKnight1Base.x1 = -1000;
                                    greyKnight1Base.x2 = -1000;
                                    greyKnight1Ellipse.x1 = -1000;
                                    greyKnight1Ellipse.x2 = -1000;
                                }

                                if(greyKnight2Rectangle1.posY == redBishop2Square.posY &&
                                   greyKnight2Rectangle1.posX == redBishop2Square.posX) {
                                    greyKnight2Rectangle1.posX = -1000;
                                    greyKnight2Rectangle1.x1 = -1000;
                                    greyKnight2Rectangle1.x2 = -1000;
                                    greyKnight2Rectangle2.x1 = -1000;
                                    greyKnight2Rectangle2.x2 = -1000;
                                    greyKnight2Base.x1 = -1000;
                                    greyKnight2Base.x2 = -1000;
                                    greyKnight2Ellipse.x1 = -1000;
                                    greyKnight2Ellipse.x2 = -1000;
                                }

                                if(greyQueenSquare.posY == redBishop2Square.posY &&
                                   greyQueenSquare.posX == redBishop2Square.posX) {
                                    greyQueenSquare.posX = -1000;
                                    greyQueenSquare.x1 = -1000;
                                    greyQueenSquare.x2 = -1000;
                                    greyQueenRectangle1.x1 = -1000;
                                    greyQueenRectangle1.x2 = -1000;
                                    greyQueenRectangle2.x1 = -1000;
                                    greyQueenRectangle2.x2 = -1000;
                                    greyQueenRectangle3.x1 = -1000;
                                    greyQueenRectangle3.x2 = -1000;
                                    greyQueenBase.x1 = -1000;
                                    greyQueenBase.x2 = -1000;
                                    greyQueenEllipse.x1 = -1000;
                                    greyQueenEllipse.x2 = -1000;
                                }

                                if(greyRook1Rectangle1.posY == redBishop2Square.posY &&
                                   greyRook1Rectangle1.posX == redBishop2Square.posX) {
                                    greyRook1Rectangle1.posX = -1000;
                                    greyRook1Rectangle1.x1 = -1000;
                                    greyRook1Rectangle1.x2 = -1000;
                                    greyRook1Rectangle2.x1 = -1000;
                                    greyRook1Rectangle2.x2 = -1000;
                                    greyRook1Base.x1 = -1000;
                                    greyRook1Base.x2 = -1000;
                                    greyRook1Ellipse.x1 = -1000;
                                    greyRook1Ellipse.x2 = -1000;
                                }

                                if(greyRook2Rectangle1.posY == greyBishop2Square.posY &&
                                   greyRook2Rectangle1.posX == greyBishop2Square.posX) {
                                    greyRook2Rectangle1.posX = -1000;
                                    greyRook2Rectangle1.x1 = -1000;
                                    greyRook2Rectangle1.x2 = -1000;
                                    greyRook2Rectangle2.x1 = -1000;
                                    greyRook2Rectangle2.x2 = -1000;
                                    greyRook2Base.x1 = -1000;
                                    greyRook2Base.x2 = -1000;
                                    greyRook2Ellipse.x1 = -1000;
                                    greyRook2Ellipse.x2 = -1000;
                                }
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redBishop2Square.posY - 100 &&
                           redPawnsBase[s].posX == redBishop2Square.posX - 100) {
                            redBishop1Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == redBishop2Square.posY - 100 &&
                           greyPawnsBase[s].posX == redBishop2Square.posX - 100) {
                            redBishop1Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redBishop1Square.posY == redBishop2Square.posY - 100 &&
                       redBishop1Square.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == redBishop2Square.posY - 100 &&
                       redRook1Rectangle1.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == redBishop2Square.posY - 100 &&
                       redRook2Rectangle1.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == redBishop2Square.posY - 100 &&
                       redKnight1Rectangle1.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == redBishop2Square.posY - 100 &&
                       redKnight2Rectangle1.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == redBishop2Square.posY - 100 &&
                       redBishop1Square.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == redBishop2Square.posY - 100 &&
                       greyRook1Rectangle1.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == redBishop2Square.posY - 100 &&
                       greyRook2Rectangle1.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == redBishop2Square.posY - 100 &&
                       greyKnight1Rectangle1.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == redBishop2Square.posY - 100 &&
                       greyKnight2Rectangle1.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == redBishop2Square.posY - 100 &&
                       greyQueenSquare.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == redBishop2Square.posY - 100 &&
                       greyBishop1Square.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == redBishop2Square.posY - 100 &&
                       greyBishop2Square.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        redBishop2Square.posY = redBishop2Square.posY - 100;
                        redBishop2Square.y1 = redBishop2Square.y1 - 100;
                        redBishop2Square.y2 = redBishop2Square.y2 - 100;
                        redBishop2Rectangle.y1 = redBishop2Rectangle.y1 - 100;
                        redBishop2Rectangle.y2 = redBishop2Rectangle.y2 - 100;
                        redBishop2Ellipse.y1 = redBishop2Ellipse.y1 - 100;
                        redBishop2Ellipse.y2 = redBishop2Ellipse.y2 - 100;
                        redBishop2Base.y1 = redBishop2Base.y1 - 100;
                        redBishop2Base.y2 = redBishop2Base.y2 - 100;
                        redBishop2Square.posX = redBishop2Square.posX - 100;
                        redBishop2Square.x1 = redBishop2Square.x1 - 100;
                        redBishop2Square.x2 = redBishop2Square.x2 - 100;
                        redBishop2Rectangle.x1 = redBishop2Rectangle.x1 - 100;
                        redBishop2Rectangle.x2 = redBishop2Rectangle.x2 - 100;
                        redBishop2Ellipse.x1 = redBishop2Ellipse.x1 - 100;
                        redBishop2Ellipse.x2 = redBishop2Ellipse.x2 - 100;
                        redBishop2Base.x1 = redBishop2Base.x1 - 100;
                        redBishop2Base.x2 = redBishop2Base.x2 - 100;
                    }

                    return flag;
                }
            }

            else {

                redBishop2Square.failedpath = TRUE;
                return TRUE;
            }
        }
        if(ps1 > 0) {
            boolean f = FALSE;
            if(pos1 < -100 && ps1 > 100) {
                f = moveRedBishop2(msg, j, i, pos1 + 100, ps1 - 100, pos2, ps2);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    redBishop2Square.posY = redBishop2Square.posY - 100;
                    redBishop2Square.posX = redBishop2Square.posX + 100;
                    redBishop2Square.y1 = redBishop2Square.y1 - 100;
                    redBishop2Square.x1 = redBishop2Square.x1 + 100;
                    redBishop2Square.y2 = redBishop2Square.y2 - 100;
                    redBishop2Square.x2 = redBishop2Square.x2 + 100;
                    redBishop2Rectangle.y1 = redBishop2Rectangle.y1 - 100;
                    redBishop2Rectangle.x1 = redBishop2Rectangle.x1 + 100;
                    redBishop2Rectangle.y2 = redBishop2Rectangle.y2 - 100;
                    redBishop2Rectangle.x2 = redBishop2Rectangle.x2 + 100;
                    redBishop2Ellipse.y1 = redBishop2Ellipse.y1 - 100;
                    redBishop2Ellipse.x1 = redBishop2Ellipse.x1 + 100;
                    redBishop2Ellipse.y2 = redBishop2Ellipse.y2 - 100;
                    redBishop2Ellipse.x2 = redBishop2Ellipse.x2 + 100;
                    redBishop2Base.y1 = redBishop2Base.y1 - 100;
                    redBishop2Base.x1 = redBishop2Base.x1 + 100;
                    redBishop2Base.y2 = redBishop2Base.y2 - 100;
                    redBishop2Base.x2 = redBishop2Base.x2 + 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            if(redPawnsBase[s].posY == redBishop2Square.posY &&
                               redPawnsBase[s].posX == redBishop2Square.posX) {
                                redBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redBishop1Square.posY == redBishop2Square.posY &&
                               redBishop1Square.posX == redBishop2Square.posX) {
                                redBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight1Rectangle1.posY == redBishop2Square.posY &&
                               redKnight1Rectangle1.posX == redBishop2Square.posX) {
                                redBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight2Rectangle1.posY == redBishop2Square.posY &&
                               redKnight2Rectangle1.posX == redBishop2Square.posX) {
                                redBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook1Rectangle1.posY == redBishop2Square.posY &&
                               redRook1Rectangle1.posX == redBishop2Square.posX) {
                                redBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook2Rectangle1.posY == redBishop2Square.posY &&
                               redRook2Rectangle1.posX == redBishop2Square.posX) {
                                redBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKingSquare.posY == redBishop2Square.posY &&
                               redKingSquare.posX == redBishop2Square.posX) {
                                redBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(j != -666) {
                                if(greyPawnsBase[s].posY == redBishop2Square.posY &&
                                   greyPawnsBase[s].posX == redBishop2Square.posX) {
                                    greyPawnsBase[s].posX = -1000;
                                    greyPawnsBase[s].x1 = -1000;
                                    greyPawnsBase[s].x2 = -1000;
                                    greyPawnsEllipse[s].x1 = -1000;
                                    greyPawnsEllipse[s].x2 = -1000;
                                }

                                if(greyQueenSquare.posY == redBishop2Square.posY &&
                                   greyQueenSquare.posX == redBishop2Square.posX) {
                                    greyQueenSquare.posX = -1000;
                                    greyQueenSquare.x1 = -1000;
                                    greyQueenSquare.x2 = -1000;
                                    greyQueenBase.x1 = -1000;
                                    greyQueenBase.x2 = -1000;
                                    greyQueenEllipse.x1 = -1000;
                                    greyQueenEllipse.x2 = -1000;
                                    greyQueenRectangle1.x1 = -1000;
                                    greyQueenRectangle1.x2 = -1000;
                                    greyQueenRectangle2.x1 = -1000;
                                    greyQueenRectangle2.x2 = -1000;
                                    greyQueenRectangle3.x1 = -1000;
                                    greyQueenRectangle3.x2 = -1000;
                                }

                                if(greyKnight1Rectangle1.posY == redBishop2Square.posY &&
                                   greyKnight1Rectangle1.posX == redBishop2Square.posX) {
                                    greyKnight1Rectangle1.posX = -1000;
                                    greyKnight1Rectangle1.x1 = -1000;
                                    greyKnight1Rectangle1.x2 = -1000;
                                    greyKnight1Rectangle2.x1 = -1000;
                                    greyKnight1Rectangle2.x2 = -1000;
                                    greyKnight1Base.x1 = -1000;
                                    greyKnight1Base.x2 = -1000;
                                    greyKnight1Ellipse.x1 = -1000;
                                    greyKnight1Ellipse.x2 = -1000;
                                }

                                if(greyKnight2Rectangle1.posY == redBishop2Square.posY &&
                                   greyKnight2Rectangle1.posX == redBishop2Square.posX) {
                                    greyKnight2Rectangle1.posX = -1000;
                                    greyKnight2Rectangle1.x1 = -1000;
                                    greyKnight2Rectangle1.x2 = -1000;
                                    greyKnight2Rectangle2.x1 = -1000;
                                    greyKnight2Rectangle2.x2 = -1000;
                                    greyKnight2Base.x1 = -1000;
                                    greyKnight2Base.x2 = -1000;
                                    greyKnight2Ellipse.x1 = -1000;
                                    greyKnight2Ellipse.x2 = -1000;
                                }

                                if(greyQueenSquare.posY == redBishop2Square.posY &&
                                   greyQueenSquare.posX == redBishop2Square.posX) {
                                    greyQueenSquare.posX = -1000;
                                    greyQueenSquare.x1 = -1000;
                                    greyQueenSquare.x2 = -1000;
                                    greyQueenRectangle1.x1 = -1000;
                                    greyQueenRectangle1.x2 = -1000;
                                    greyQueenRectangle2.x1 = -1000;
                                    greyQueenRectangle2.x2 = -1000;
                                    greyQueenRectangle3.x1 = -1000;
                                    greyQueenRectangle3.x2 = -1000;
                                    greyQueenBase.x1 = -1000;
                                    greyQueenBase.x2 = -1000;
                                    greyQueenEllipse.x1 = -1000;
                                    greyQueenEllipse.x2 = -1000;
                                }

                                if(greyRook1Rectangle1.posY == redBishop2Square.posY &&
                                   greyRook1Rectangle1.posX == redBishop2Square.posX) {
                                    greyRook1Rectangle1.posX = -1000;
                                    greyRook1Rectangle1.x1 = -1000;
                                    greyRook1Rectangle1.x2 = -1000;
                                    greyRook1Rectangle2.x1 = -1000;
                                    greyRook1Rectangle2.x2 = -1000;
                                    greyRook1Base.x1 = -1000;
                                    greyRook1Base.x2 = -1000;
                                    greyRook1Ellipse.x1 = -1000;
                                    greyRook1Ellipse.x2 = -1000;
                                }

                                if(greyRook2Rectangle1.posY == greyBishop2Square.posY &&
                                   greyRook2Rectangle1.posX == greyBishop2Square.posX) {
                                    greyRook2Rectangle1.posX = -1000;
                                    greyRook2Rectangle1.x1 = -1000;
                                    greyRook2Rectangle1.x2 = -1000;
                                    greyRook2Rectangle2.x1 = -1000;
                                    greyRook2Rectangle2.x2 = -1000;
                                    greyRook2Base.x1 = -1000;
                                    greyRook2Base.x2 = -1000;
                                    greyRook2Ellipse.x1 = -1000;
                                    greyRook2Ellipse.x2 = -1000;
                                }
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redBishop2Square.posY - 100 &&
                           redPawnsBase[s].posX == redBishop2Square.posX + 100) {
                            redBishop1Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == redBishop2Square.posY - 100 &&
                           greyPawnsBase[s].posX == redBishop2Square.posX + 100) {
                            redBishop1Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redBishop1Square.posY == redBishop2Square.posY - 100 &&
                       redBishop1Square.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == redBishop2Square.posY - 100 &&
                       redRook1Rectangle1.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == redBishop2Square.posY - 100 &&
                       redRook2Rectangle1.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == redBishop2Square.posY - 100 &&
                       redKnight1Rectangle1.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == redBishop2Square.posY - 100 &&
                       redKnight2Rectangle1.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == redBishop2Square.posY - 100 &&
                       redBishop1Square.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == redBishop2Square.posY - 100 &&
                       greyRook1Rectangle1.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == redBishop2Square.posY - 100 &&
                       greyRook2Rectangle1.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == redBishop2Square.posY - 100 &&
                       greyKnight1Rectangle1.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == redBishop2Square.posY - 100 &&
                       greyKnight2Rectangle1.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == redBishop2Square.posY - 100 &&
                       greyQueenSquare.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == redBishop2Square.posY - 100 &&
                       greyBishop1Square.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == redBishop2Square.posY - 100 &&
                       greyBishop2Square.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        redBishop2Square.posY = redBishop2Square.posY - 100;
                        redBishop2Square.y1 = redBishop2Square.y1 - 100;
                        redBishop2Square.y2 = redBishop2Square.y2 - 100;
                        redBishop2Rectangle.y1 = redBishop2Rectangle.y1 - 100;
                        redBishop2Rectangle.y2 = redBishop2Rectangle.y2 - 100;
                        redBishop2Ellipse.y1 = redBishop2Ellipse.y1 - 100;
                        redBishop2Ellipse.y2 = redBishop2Ellipse.y2 - 100;
                        redBishop2Base.y1 = redBishop2Base.y1 - 100;
                        redBishop2Base.y2 = redBishop2Base.y2 - 100;
                        redBishop2Square.posX = redBishop2Square.posX + 100;
                        redBishop2Square.x1 = redBishop2Square.x1 + 100;
                        redBishop2Square.x2 = redBishop2Square.x2 + 100;
                        redBishop2Rectangle.x1 = redBishop2Rectangle.x1 + 100;
                        redBishop2Rectangle.x2 = redBishop2Rectangle.x2 + 100;
                        redBishop2Ellipse.x1 = redBishop2Ellipse.x1 + 100;
                        redBishop2Ellipse.x2 = redBishop2Ellipse.x2 + 100;
                        redBishop2Base.x1 = redBishop2Base.x1 + 100;
                        redBishop2Base.x2 = redBishop2Base.x2 + 100;
                    }

                    return flag;
                }
            }

            else {

                redBishop2Square.failedpath = TRUE;
                return TRUE;
            }
        }
    } else if(pos1 > 0) {
        if(ps1 < 0) {
            boolean f = FALSE;
            if(pos1 > 100 && ps1 < -100) {
                f = moveRedBishop2(msg, j, i, pos1 - 100, ps1 + 100, pos2, ps2);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    redBishop2Square.posY = redBishop2Square.posY + 100;
                    redBishop2Square.posX = redBishop2Square.posX - 100;
                    redBishop2Square.y1 = redBishop2Square.y1 + 100;
                    redBishop2Square.x1 = redBishop2Square.x1 - 100;
                    redBishop2Square.y2 = redBishop2Square.y2 + 100;
                    redBishop2Square.x2 = redBishop2Square.x2 - 100;
                    redBishop2Rectangle.y1 = redBishop2Rectangle.y1 + 100;
                    redBishop2Rectangle.x1 = redBishop2Rectangle.x1 - 100;
                    redBishop2Rectangle.y2 = redBishop2Rectangle.y2 + 100;
                    redBishop2Rectangle.x2 = redBishop2Rectangle.x2 - 100;
                    redBishop2Ellipse.y1 = redBishop2Ellipse.y1 + 100;
                    redBishop2Ellipse.x1 = redBishop2Ellipse.x1 - 100;
                    redBishop2Ellipse.y2 = redBishop2Ellipse.y2 + 100;
                    redBishop2Ellipse.x2 = redBishop2Ellipse.x2 - 100;
                    redBishop2Base.y1 = redBishop2Base.y1 + 100;
                    redBishop2Base.x1 = redBishop2Base.x1 - 100;
                    redBishop2Base.y2 = redBishop2Base.y2 + 100;
                    redBishop2Base.x2 = redBishop2Base.x2 - 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            if(redPawnsBase[s].posY == redBishop2Square.posY &&
                               redPawnsBase[s].posX == redBishop2Square.posX) {
                                redBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(j != -666) {
                                if(greyPawnsBase[s].posY == redBishop2Square.posY &&
                                   greyPawnsBase[s].posX == redBishop2Square.posX) {
                                    greyPawnsBase[s].posX = -1000;
                                    greyPawnsBase[s].x1 = -1000;
                                    greyPawnsBase[s].x2 = -1000;
                                    greyPawnsEllipse[s].x1 = -1000;
                                    greyPawnsEllipse[s].x2 = -1000;
                                }
                            }
                        }

                        if(redBishop1Square.posY == redBishop2Square.posY &&
                           redBishop1Square.posX == redBishop2Square.posX) {
                            redBishop2Square.failedpath = TRUE;
                            return TRUE;
                        }

                        if(redKnight1Rectangle1.posY == redBishop2Square.posY &&
                           redKnight1Rectangle1.posX == redBishop2Square.posX) {
                            redBishop2Square.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redBishop2Square.posY &&
                           redKnight2Rectangle1.posX == redBishop2Square.posX) {
                            redBishop2Square.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook1Rectangle1.posY == redBishop2Square.posY &&
                           redRook1Rectangle1.posX == redBishop2Square.posX) {
                            redBishop2Square.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook2Rectangle1.posY == redBishop2Square.posY &&
                           redRook2Rectangle1.posX == redBishop2Square.posX) {
                            redBishop2Square.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redBishop2Square.posY &&
                           redKingSquare.posX == redBishop2Square.posX) {
                            redBishop2Square.failedpath = TRUE;
                            return TRUE;
                        }
                        if(j != -666) {
                            if(greyQueenSquare.posY == redBishop2Square.posY &&
                               greyQueenSquare.posX == redBishop2Square.posX) {
                                greyQueenSquare.posX = -1000;
                                greyQueenSquare.x1 = -1000;
                                greyQueenSquare.x2 = -1000;
                                greyQueenBase.x1 = -1000;
                                greyQueenBase.x2 = -1000;
                                greyQueenEllipse.x1 = -1000;
                                greyQueenEllipse.x2 = -1000;
                                greyQueenRectangle1.x1 = -1000;
                                greyQueenRectangle1.x2 = -1000;
                                greyQueenRectangle2.x1 = -1000;
                                greyQueenRectangle2.x2 = -1000;
                                greyQueenRectangle3.x1 = -1000;
                                greyQueenRectangle3.x2 = -1000;
                            }

                            if(greyKnight1Rectangle1.posY == redBishop2Square.posY &&
                               greyKnight1Rectangle1.posX == redBishop2Square.posX) {
                                greyKnight1Rectangle1.posX = -1000;
                                greyKnight1Rectangle1.x1 = -1000;
                                greyKnight1Rectangle1.x2 = -1000;
                                greyKnight1Rectangle2.x1 = -1000;
                                greyKnight1Rectangle2.x2 = -1000;
                                greyKnight1Base.x1 = -1000;
                                greyKnight1Base.x2 = -1000;
                                greyKnight1Ellipse.x1 = -1000;
                                greyKnight1Ellipse.x2 = -1000;
                            }

                            if(greyKnight2Rectangle1.posY == redBishop2Square.posY &&
                               greyKnight2Rectangle1.posX == redBishop2Square.posX) {
                                greyKnight2Rectangle1.posX = -1000;
                                greyKnight2Rectangle1.x1 = -1000;
                                greyKnight2Rectangle1.x2 = -1000;
                                greyKnight2Rectangle2.x1 = -1000;
                                greyKnight2Rectangle2.x2 = -1000;
                                greyKnight2Base.x1 = -1000;
                                greyKnight2Base.x2 = -1000;
                                greyKnight2Ellipse.x1 = -1000;
                                greyKnight2Ellipse.x2 = -1000;
                            }

                            if(greyQueenSquare.posY == redBishop2Square.posY &&
                               greyQueenSquare.posX == redBishop2Square.posX) {
                                greyQueenSquare.posX = -1000;
                                greyQueenSquare.x1 = -1000;
                                greyQueenSquare.x2 = -1000;
                                greyQueenRectangle1.x1 = -1000;
                                greyQueenRectangle1.x2 = -1000;
                                greyQueenRectangle2.x1 = -1000;
                                greyQueenRectangle2.x2 = -1000;
                                greyQueenRectangle3.x1 = -1000;
                                greyQueenRectangle3.x2 = -1000;
                                greyQueenBase.x1 = -1000;
                                greyQueenBase.x2 = -1000;
                                greyQueenEllipse.x1 = -1000;
                                greyQueenEllipse.x2 = -1000;
                            }

                            if(greyRook1Rectangle1.posY == redBishop2Square.posY &&
                               greyRook1Rectangle1.posX == redBishop2Square.posX) {
                                greyRook1Rectangle1.posX = -1000;
                                greyRook1Rectangle1.x1 = -1000;
                                greyRook1Rectangle1.x2 = -1000;
                                greyRook1Rectangle2.x1 = -1000;
                                greyRook1Rectangle2.x2 = -1000;
                                greyRook1Base.x1 = -1000;
                                greyRook1Base.x2 = -1000;
                                greyRook1Ellipse.x1 = -1000;
                                greyRook1Ellipse.x2 = -1000;
                            }

                            if(greyRook2Rectangle1.posY == greyBishop2Square.posY &&
                               greyRook2Rectangle1.posX == greyBishop2Square.posX) {
                                greyRook2Rectangle1.posX = -1000;
                                greyRook2Rectangle1.x1 = -1000;
                                greyRook2Rectangle1.x2 = -1000;
                                greyRook2Rectangle2.x1 = -1000;
                                greyRook2Rectangle2.x2 = -1000;
                                greyRook2Base.x1 = -1000;
                                greyRook2Base.x2 = -1000;
                                greyRook2Ellipse.x1 = -1000;
                                greyRook2Ellipse.x2 = -1000;
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redBishop2Square.posY + 100 &&
                           redPawnsBase[s].posX == redBishop2Square.posX - 100) {
                            redBishop1Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == redBishop2Square.posY + 100 &&
                           greyPawnsBase[s].posX == redBishop2Square.posX - 100) {
                            redBishop1Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redBishop1Square.posY == redBishop2Square.posY + 100 &&
                       redBishop1Square.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == redBishop2Square.posY + 100 &&
                       redRook1Rectangle1.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == redBishop2Square.posY + 100 &&
                       redRook2Rectangle1.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == redBishop2Square.posY + 100 &&
                       redKnight1Rectangle1.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == redBishop2Square.posY + 100 &&
                       redKnight2Rectangle1.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == redBishop2Square.posY + 100 &&
                       redBishop1Square.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == redBishop2Square.posY + 100 &&
                       greyRook1Rectangle1.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == redBishop2Square.posY + 100 &&
                       greyRook2Rectangle1.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == redBishop2Square.posY + 100 &&
                       greyKnight1Rectangle1.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == redBishop2Square.posY + 100 &&
                       greyKnight2Rectangle1.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == redBishop2Square.posY + 100 &&
                       greyQueenSquare.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == redBishop2Square.posY + 100 &&
                       greyBishop1Square.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == redBishop2Square.posY + 100 &&
                       greyBishop2Square.posX == redBishop2Square.posX - 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        redBishop2Square.posY = redBishop2Square.posY + 100;
                        redBishop2Square.y1 = redBishop2Square.y1 + 100;
                        redBishop2Square.y2 = redBishop2Square.y2 + 100;
                        redBishop2Rectangle.y1 = redBishop2Rectangle.y1 + 100;
                        redBishop2Rectangle.y2 = redBishop2Rectangle.y2 + 100;
                        redBishop2Ellipse.y1 = redBishop2Ellipse.y1 + 100;
                        redBishop2Ellipse.y2 = redBishop2Ellipse.y2 + 100;
                        redBishop2Base.y1 = redBishop2Base.y1 + 100;
                        redBishop2Base.y2 = redBishop2Base.y2 + 100;
                        redBishop2Square.posX = redBishop2Square.posX - 100;
                        redBishop2Square.x1 = redBishop2Square.x1 - 100;
                        redBishop2Square.x2 = redBishop2Square.x2 - 100;
                        redBishop2Rectangle.x1 = redBishop2Rectangle.x1 - 100;
                        redBishop2Rectangle.x2 = redBishop2Rectangle.x2 - 100;
                        redBishop2Ellipse.x1 = redBishop2Ellipse.x1 - 100;
                        redBishop2Ellipse.x2 = redBishop2Ellipse.x2 - 100;
                        redBishop2Base.x1 = redBishop2Base.x1 - 100;
                        redBishop2Base.x2 = redBishop2Base.x2 - 100;
                    }

                    return flag;
                }
            }

            else {

                redBishop2Square.failedpath = TRUE;
                return TRUE;
            }
        }
        if(ps1 > 0) {
            boolean f = FALSE;
            if(pos1 > 100 && ps1 > 100) {
                f = moveRedBishop2(msg, j, i, pos1 - 100, ps1 - 100, pos2, ps2);
            }
            if(!f) {
                if(pos1 == pos2 &&
                    ps1 == ps2) {

                    redBishop2Square.posY = redBishop2Square.posY + 100;
                    redBishop2Square.posX = redBishop2Square.posX + 100;
                    redBishop2Square.y1 = redBishop2Square.y1 + 100;
                    redBishop2Square.x1 = redBishop2Square.x1 + 100;
                    redBishop2Square.y2 = redBishop2Square.y2 + 100;
                    redBishop2Square.x2 = redBishop2Square.x2 + 100;
                    redBishop2Rectangle.y1 = redBishop2Rectangle.y1 + 100;
                    redBishop2Rectangle.x1 = redBishop2Rectangle.x1 + 100;
                    redBishop2Rectangle.y2 = redBishop2Rectangle.y2 + 100;
                    redBishop2Rectangle.x2 = redBishop2Rectangle.x2 + 100;
                    redBishop2Ellipse.y1 = redBishop2Ellipse.y1 + 100;
                    redBishop2Ellipse.x1 = redBishop2Ellipse.x1 + 100;
                    redBishop2Ellipse.y2 = redBishop2Ellipse.y2 + 100;
                    redBishop2Ellipse.x2 = redBishop2Ellipse.x2 + 100;
                    redBishop2Base.y1 = redBishop2Base.y1 + 100;
                    redBishop2Base.x1 = redBishop2Base.x1 + 100;
                    redBishop2Base.y2 = redBishop2Base.y2 + 100;
                    redBishop2Base.x2 = redBishop2Base.x2 + 100;

                    if(1 == 1) {

                        for(int s=0; s<8; s++) {
                            if(redPawnsBase[s].posY == redBishop2Square.posY &&
                               redPawnsBase[s].posX == redBishop2Square.posX) {
                                redBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redBishop1Square.posY == redBishop2Square.posY &&
                               redBishop1Square.posX == redBishop2Square.posX) {
                                redBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight1Rectangle1.posY == redBishop2Square.posY &&
                               redKnight1Rectangle1.posX == redBishop2Square.posX) {
                                redBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKnight2Rectangle1.posY == redBishop2Square.posY &&
                               redKnight2Rectangle1.posX == redBishop2Square.posX) {
                                redBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook1Rectangle1.posY == redBishop2Square.posY &&
                               redRook1Rectangle1.posX == redBishop2Square.posX) {
                                redBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redRook2Rectangle1.posY == redBishop2Square.posY &&
                               redRook2Rectangle1.posX == redBishop2Square.posX) {
                                redBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(redKingSquare.posY == redBishop2Square.posY &&
                               redKingSquare.posX == redBishop2Square.posX) {
                                redBishop2Square.failedpath = TRUE;
                                return TRUE;
                            }
                            if(j != -666) {
                                if(greyPawnsBase[s].posY == redBishop2Square.posY &&
                                   greyPawnsBase[s].posX == redBishop2Square.posX) {
                                    greyPawnsBase[s].posX = -1000;
                                    greyPawnsBase[s].x1 = -1000;
                                    greyPawnsBase[s].x2 = -1000;
                                    greyPawnsEllipse[s].x1 = -1000;
                                    greyPawnsEllipse[s].x2 = -1000;
                                }

                                if(greyQueenSquare.posY == redBishop2Square.posY &&
                                   greyQueenSquare.posX == redBishop2Square.posX) {
                                    greyQueenSquare.posX = -1000;
                                    greyQueenSquare.x1 = -1000;
                                    greyQueenSquare.x2 = -1000;
                                    greyQueenBase.x1 = -1000;
                                    greyQueenBase.x2 = -1000;
                                    greyQueenEllipse.x1 = -1000;
                                    greyQueenEllipse.x2 = -1000;
                                    greyQueenRectangle1.x1 = -1000;
                                    greyQueenRectangle1.x2 = -1000;
                                    greyQueenRectangle2.x1 = -1000;
                                    greyQueenRectangle2.x2 = -1000;
                                    greyQueenRectangle3.x1 = -1000;
                                    greyQueenRectangle3.x2 = -1000;
                                }

                                if(greyKnight1Rectangle1.posY == redBishop2Square.posY &&
                                   greyKnight1Rectangle1.posX == redBishop2Square.posX) {
                                    greyKnight1Rectangle1.posX = -1000;
                                    greyKnight1Rectangle1.x1 = -1000;
                                    greyKnight1Rectangle1.x2 = -1000;
                                    greyKnight1Rectangle2.x1 = -1000;
                                    greyKnight1Rectangle2.x2 = -1000;
                                    greyKnight1Base.x1 = -1000;
                                    greyKnight1Base.x2 = -1000;
                                    greyKnight1Ellipse.x1 = -1000;
                                    greyKnight1Ellipse.x2 = -1000;
                                }

                                if(greyKnight2Rectangle1.posY == redBishop2Square.posY &&
                                   greyKnight2Rectangle1.posX == redBishop2Square.posX) {
                                    greyKnight2Rectangle1.posX = -1000;
                                    greyKnight2Rectangle1.x1 = -1000;
                                    greyKnight2Rectangle1.x2 = -1000;
                                    greyKnight2Rectangle2.x1 = -1000;
                                    greyKnight2Rectangle2.x2 = -1000;
                                    greyKnight2Base.x1 = -1000;
                                    greyKnight2Base.x2 = -1000;
                                    greyKnight2Ellipse.x1 = -1000;
                                    greyKnight2Ellipse.x2 = -1000;
                                }

                                if(greyQueenSquare.posY == redBishop2Square.posY &&
                                   greyQueenSquare.posX == redBishop2Square.posX) {
                                    greyQueenSquare.posX = -1000;
                                    greyQueenSquare.x1 = -1000;
                                    greyQueenSquare.x2 = -1000;
                                    greyQueenRectangle1.x1 = -1000;
                                    greyQueenRectangle1.x2 = -1000;
                                    greyQueenRectangle2.x1 = -1000;
                                    greyQueenRectangle2.x2 = -1000;
                                    greyQueenRectangle3.x1 = -1000;
                                    greyQueenRectangle3.x2 = -1000;
                                    greyQueenBase.x1 = -1000;
                                    greyQueenBase.x2 = -1000;
                                    greyQueenEllipse.x1 = -1000;
                                    greyQueenEllipse.x2 = -1000;
                                }

                                if(greyRook1Rectangle1.posY == redBishop2Square.posY &&
                                   greyRook1Rectangle1.posX == redBishop2Square.posX) {
                                    greyRook1Rectangle1.posX = -1000;
                                    greyRook1Rectangle1.x1 = -1000;
                                    greyRook1Rectangle1.x2 = -1000;
                                    greyRook1Rectangle2.x1 = -1000;
                                    greyRook1Rectangle2.x2 = -1000;
                                    greyRook1Base.x1 = -1000;
                                    greyRook1Base.x2 = -1000;
                                    greyRook1Ellipse.x1 = -1000;
                                    greyRook1Ellipse.x2 = -1000;
                                }

                                if(greyRook2Rectangle1.posY == redBishop2Square.posY &&
                                   greyRook2Rectangle1.posX == redBishop2Square.posX) {
                                    greyRook2Rectangle1.posX = -1000;
                                    greyRook2Rectangle1.x1 = -1000;
                                    greyRook2Rectangle1.x2 = -1000;
                                    greyRook2Rectangle2.x1 = -1000;
                                    greyRook2Rectangle2.x2 = -1000;
                                    greyRook2Base.x1 = -1000;
                                    greyRook2Base.x2 = -1000;
                                    greyRook2Ellipse.x1 = -1000;
                                    greyRook2Ellipse.x2 = -1000;
                                }
                            }
                        }
                    }

                    return FALSE;

                } else {

                    boolean flag = FALSE;

                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redBishop2Square.posY + 100 &&
                           redPawnsBase[s].posX == redBishop2Square.posX + 100) {
                            redBishop1Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                        if(greyPawnsBase[s].posY == redBishop2Square.posY + 100 &&
                           greyPawnsBase[s].posX == redBishop2Square.posX + 100) {
                            redBishop1Square.failedpath = TRUE;
                            flag = TRUE;
                        }
                    }
                    if(redBishop1Square.posY == redBishop2Square.posY + 100 &&
                       redBishop1Square.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook1Rectangle1.posY == redBishop2Square.posY + 100 &&
                       redRook1Rectangle1.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redRook2Rectangle1.posY == redBishop2Square.posY + 100 &&
                       redRook2Rectangle1.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight1Rectangle1.posY == redBishop2Square.posY + 100 &&
                       redKnight1Rectangle1.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redKnight2Rectangle1.posY == redBishop2Square.posY + 100 &&
                       redKnight2Rectangle1.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redBishop1Square.posY == redBishop2Square.posY + 100 &&
                       redBishop1Square.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook1Rectangle1.posY == redBishop2Square.posY + 100 &&
                       greyRook1Rectangle1.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyRook2Rectangle1.posY == redBishop2Square.posY + 100 &&
                       greyRook2Rectangle1.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight1Rectangle1.posY == redBishop2Square.posY + 100 &&
                       greyKnight1Rectangle1.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyKnight2Rectangle1.posY == redBishop2Square.posY + 100 &&
                       greyKnight2Rectangle1.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == redBishop2Square.posY + 100 &&
                       greyQueenSquare.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop1Square.posY == redBishop2Square.posY + 100 &&
                       greyBishop1Square.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyBishop2Square.posY == redBishop2Square.posY + 100 &&
                       greyBishop2Square.posX == redBishop2Square.posX + 100) {
                        redBishop2Square.failedpath = TRUE;
                        flag = TRUE;
                    }

                    if(!flag) {
                        redBishop2Square.posY = redBishop2Square.posY + 100;
                        redBishop2Square.y1 = redBishop2Square.y1 + 100;
                        redBishop2Square.y2 = redBishop2Square.y2 + 100;
                        redBishop2Rectangle.y1 = redBishop2Rectangle.y1 + 100;
                        redBishop2Rectangle.y2 = redBishop2Rectangle.y2 + 100;
                        redBishop2Ellipse.y1 = redBishop2Ellipse.y1 + 100;
                        redBishop2Ellipse.y2 = redBishop2Ellipse.y2 + 100;
                        redBishop2Base.y1 = redBishop2Base.y1 + 100;
                        redBishop2Base.y2 = redBishop2Base.y2 + 100;
                        redBishop2Square.posX = redBishop2Square.posX + 100;
                        redBishop2Square.x1 = redBishop2Square.x1 + 100;
                        redBishop2Square.x2 = redBishop2Square.x2 + 100;
                        redBishop2Rectangle.x1 = redBishop2Rectangle.x1 + 100;
                        redBishop2Rectangle.x2 = redBishop2Rectangle.x2 + 100;
                        redBishop2Ellipse.x1 = redBishop2Ellipse.x1 + 100;
                        redBishop2Ellipse.x2 = redBishop2Ellipse.x2 + 100;
                        redBishop2Base.x1 = redBishop2Base.x1 + 100;
                        redBishop2Base.x2 = redBishop2Base.x2 + 100;
                    }

                    return flag;
                }
            }

            else {

                redBishop2Square.failedpath = TRUE;                
                return TRUE;
            }
        }
    }
}

boolean moveGreyRook1(UINT msg, int j, int i, int pos, int o) {

    if(redKnight1Rectangle1.posX == greyRook1Rectangle1.posX &&
       redKnight1Rectangle1.posY == greyRook1Rectangle1.posY) {
        greyRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(redKnight2Rectangle1.posX == greyRook1Rectangle1.posX &&
       redKnight2Rectangle1.posY == greyRook1Rectangle1.posY) {
        greyRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(redBishop1Square.posX == greyRook1Rectangle1.posX &&
       redBishop1Square.posY == greyRook1Rectangle1.posY) {
        greyRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(redBishop2Square.posX == greyRook1Rectangle1.posX &&
       redBishop2Square.posY == greyRook1Rectangle1.posY) {
        greyRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(redRook1Rectangle1.posX == greyRook1Rectangle1.posX &&
       redRook1Rectangle1.posY == greyRook1Rectangle1.posY) {
        greyRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(redRook2Rectangle1.posX == greyRook1Rectangle1.posX &&
       redRook2Rectangle1.posY == greyRook1Rectangle1.posY) {
        greyRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(redQueenSquare.posX == greyRook1Rectangle1.posX &&
       redQueenSquare.posY == greyRook1Rectangle1.posY) {
        greyRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    for(int g=0; g<8; g++) {
        if(redPawnsBase[g].posX == greyRook1Rectangle1.posX &&
           redPawnsBase[g].posY == greyRook1Rectangle1.posY) {
            greyRook1Rectangle1.failedpath = TRUE;
            return TRUE;
        }
    }
    boolean fail = FALSE;
    if(o == 0) {
        fail = FALSE;
    } else {
        fail = TRUE;
        //greyRook1Rectangle1.failedpath = fail;
    }
    if(pos < 0) {
        boolean f = FALSE;
        if(pos < -100) {
            f = moveGreyRook1(msg, j, i, pos + 100, o);
        }
        if(!f) {
            if(pos == o) {

                greyRook1Rectangle1.posY = greyRook1Rectangle1.posY - 100;
                greyRook1Base.y1 = greyRook1Base.y1 - 100;
                greyRook1Base.y2 = greyRook1Base.y2 - 100;
                greyRook1Rectangle1.y1 = greyRook1Rectangle1.y1 - 100;
                greyRook1Rectangle1.y2 = greyRook1Rectangle1.y2 - 100;
                greyRook1Rectangle2.y1 = greyRook1Rectangle2.y1 - 100;
                greyRook1Rectangle2.y2 = greyRook1Rectangle2.y2 - 100;
                greyRook1Ellipse.y1 = greyRook1Ellipse.y1 - 100;
                greyRook1Ellipse.y2 = greyRook1Ellipse.y2 - 100;
                
                if(j*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        if(greyPawnsBase[s].posY == greyRook1Rectangle1.posY &&
                           greyPawnsBase[s].posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop1Square.posY == greyRook1Rectangle1.posY &&
                           greyBishop1Square.posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop2Square.posY == greyRook1Rectangle1.posY &&
                           greyBishop2Square.posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight1Rectangle1.posY == greyRook1Rectangle1.posY &&
                           greyKnight1Rectangle1.posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight2Rectangle1.posY == greyRook1Rectangle1.posY &&
                           greyKnight2Rectangle1.posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook2Rectangle1.posY == greyRook1Rectangle1.posY &&
                           greyRook2Rectangle1.posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKingSquare.posY == greyRook1Rectangle1.posY &&
                           greyKingSquare.posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redPawnsBase[s].posY == greyRook1Rectangle1.posY &&
                           redPawnsBase[s].posX == greyRook1Rectangle1.posX) {
                            redPawnsBase[s].posX = -1000;
                            redPawnsBase[s].x1 = -1000;
                            redPawnsBase[s].x2 = -1000;
                            redPawnsEllipse[s].x1 = -1000;
                            redPawnsEllipse[s].x2 = -1000;
                        }
                        if(redRook1Rectangle1.posY == greyRook1Rectangle1.posY &&
                           redRook1Rectangle1.posX == greyRook1Rectangle1.posX) {
                            redRook1Rectangle1.posX = -1000;
                            redRook1Rectangle1.x1 = -1000;
                            redRook1Rectangle1.x2 = -1000;
                            redRook1Rectangle2.x1 = -1000;
                            redRook1Rectangle2.x2 = -1000;
                            redRook1Base.x1 = -1000;
                            redRook1Base.x2 = -1000;
                            redRook1Ellipse.x1 = -1000;
                            redRook1Ellipse.x2 = -1000;
                        }
                        if(redRook2Rectangle1.posY == greyRook1Rectangle1.posY &&
                           redRook2Rectangle1.posX == greyRook1Rectangle1.posX) {
                            redRook2Rectangle1.posX = -1000;
                            redRook2Rectangle1.x1 = -1000;
                            redRook2Rectangle1.x2 = -1000;
                            redRook2Rectangle2.x1 = -1000;
                            redRook2Rectangle2.x2 = -1000;
                            redRook2Base.x1 = -1000;
                            redRook2Base.x2 = -1000;
                            redRook2Ellipse.x1 = -1000;
                            redRook2Ellipse.x2 = -1000;
                        }
                        if(redQueenSquare.posY == greyRook1Rectangle1.posY &&
                           redQueenSquare.posX == greyRook1Rectangle1.posX) {
                            redQueenSquare.posX = -1000;
                            redQueenSquare.x1 = -1000;
                            redQueenSquare.x2 = -1000;
                            redQueenBase.x1 = -1000;
                            redQueenBase.x2 = -1000;
                            redQueenEllipse.x1 = -1000;
                            redQueenEllipse.x2 = -1000;
                            redQueenRectangle1.x1 = -1000;
                            redQueenRectangle1.x2 = -1000;
                            redQueenRectangle2.x1 = -1000;
                            redQueenRectangle2.x2 = -1000;
                            redQueenRectangle3.x1 = -1000;
                            redQueenRectangle3.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    if(greyPawnsBase[s].posY == greyRook1Rectangle1.posY - 100 &&
                       greyPawnsBase[s].posX == greyRook1Rectangle1.posX) {
                        greyRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redPawnsBase[s].posY == greyRook1Rectangle1.posY - 100 &&
                       redPawnsBase[s].posX == greyRook1Rectangle1.posX) {
                        greyRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redQueenSquare.posY == greyRook1Rectangle1.posY - 100 &&
                       redQueenSquare.posX == greyRook1Rectangle1.posX) {
                        greyRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == greyRook1Rectangle1.posY - 100 &&
                   redBishop1Square.posX == greyRook1Rectangle1.posX) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == greyRook1Rectangle1.posY - 100 &&
                   redRook1Rectangle1.posX == greyRook1Rectangle1.posX) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == greyRook1Rectangle1.posY - 100 &&
                   redRook2Rectangle1.posX == greyRook1Rectangle1.posX) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == greyRook1Rectangle1.posY - 100 &&
                   redKnight1Rectangle1.posX == greyRook1Rectangle1.posX) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == greyRook1Rectangle1.posY - 100 &&
                   redKnight2Rectangle1.posX == greyRook1Rectangle1.posX) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == greyRook1Rectangle1.posY - 100 &&
                   redBishop1Square.posX == greyRook1Rectangle1.posX) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == greyRook1Rectangle1.posY - 100 &&
                   greyRook2Rectangle1.posX == greyRook1Rectangle1.posX) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == greyRook1Rectangle1.posY - 100 &&
                   greyKnight1Rectangle1.posX == greyRook1Rectangle1.posX) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == greyRook1Rectangle1.posY - 100 &&
                   greyKnight2Rectangle1.posX == greyRook1Rectangle1.posX) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    greyRook1Rectangle1.posY = greyRook1Rectangle1.posY - 100;
                    greyRook1Base.y1 = greyRook1Base.y1 - 100;
                    greyRook1Base.y2 = greyRook1Base.y2 - 100;
                    greyRook1Rectangle1.y1 = greyRook1Rectangle1.y1 - 100;
                    greyRook1Rectangle1.y2 = greyRook1Rectangle1.y2 - 100;
                    greyRook1Rectangle2.y1 = greyRook1Rectangle2.y1 - 100;
                    greyRook1Rectangle2.y2 = greyRook1Rectangle2.y2 - 100;
                    greyRook1Ellipse.y1 = greyRook1Ellipse.y1 - 100;
                    greyRook1Ellipse.y2 = greyRook1Ellipse.y2 - 100;
                }

                return flag;
            }
        }

        else {

            greyRook1Rectangle1.failedpath = TRUE;
            return TRUE;
        }
    } else if(pos > 0) {
        boolean f = FALSE;
        if(pos > 100) {
            f = moveGreyRook1(msg, j, i, pos - 100, o);
        }
        if(!f) {
            if(pos == o) {

                greyRook1Rectangle1.posY = greyRook1Rectangle1.posY + 100;
                greyRook1Base.y1 = greyRook1Base.y1 + 100;
                greyRook1Base.y2 = greyRook1Base.y2 + 100;
                greyRook1Rectangle1.y1 = greyRook1Rectangle1.y1 + 100;
                greyRook1Rectangle1.y2 = greyRook1Rectangle1.y2 + 100;
                greyRook1Rectangle2.y1 = greyRook1Rectangle2.y1 + 100;
                greyRook1Rectangle2.y2 = greyRook1Rectangle2.y2 + 100;
                greyRook1Ellipse.y1 = greyRook1Ellipse.y1 + 100;
                greyRook1Ellipse.y2 = greyRook1Ellipse.y2 + 100;

                if(j*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        if(greyPawnsBase[s].posY == greyRook1Rectangle1.posY &&
                           greyPawnsBase[s].posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop1Square.posY == greyRook1Rectangle1.posY &&
                           greyBishop1Square.posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop2Square.posY == greyRook1Rectangle1.posY &&
                           greyBishop2Square.posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight1Rectangle1.posY == greyRook1Rectangle1.posY &&
                           greyKnight1Rectangle1.posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight2Rectangle1.posY == greyRook1Rectangle1.posY &&
                           greyKnight2Rectangle1.posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook2Rectangle1.posY == greyRook1Rectangle1.posY &&
                           greyRook2Rectangle1.posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKingSquare.posY == greyRook1Rectangle1.posY &&
                           greyKingSquare.posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redPawnsBase[s].posY == greyRook1Rectangle1.posY &&
                           redPawnsBase[s].posX == greyRook1Rectangle1.posX) {
                            redPawnsBase[s].posX = -1000;
                            redPawnsBase[s].x1 = -1000;
                            redPawnsBase[s].x2 = -1000;
                            redPawnsEllipse[s].x1 = -1000;
                            redPawnsEllipse[s].x2 = -1000;
                        }
                        if(redRook1Rectangle1.posY == greyRook1Rectangle1.posY &&
                           redRook1Rectangle1.posX == greyRook1Rectangle1.posX) {
                            redRook1Rectangle1.posX = -1000;
                            redRook1Rectangle1.x1 = -1000;
                            redRook1Rectangle1.x2 = -1000;
                            redRook1Rectangle2.x1 = -1000;
                            redRook1Rectangle2.x2 = -1000;
                            redRook1Base.x1 = -1000;
                            redRook1Base.x2 = -1000;
                            redRook1Ellipse.x1 = -1000;
                            redRook1Ellipse.x2 = -1000;
                        }
                        if(redRook2Rectangle1.posY == greyRook1Rectangle1.posY &&
                           redRook2Rectangle1.posX == greyRook1Rectangle1.posX) {
                            redRook2Rectangle1.posX = -1000;
                            redRook2Rectangle1.x1 = -1000;
                            redRook2Rectangle1.x2 = -1000;
                            redRook2Rectangle2.x1 = -1000;
                            redRook2Rectangle2.x2 = -1000;
                            redRook2Base.x1 = -1000;
                            redRook2Base.x2 = -1000;
                            redRook2Ellipse.x1 = -1000;
                            redRook2Ellipse.x2 = -1000;
                        }
                        if(redQueenSquare.posY == greyRook1Rectangle1.posY &&
                           redQueenSquare.posX == greyRook1Rectangle1.posX) {
                            redQueenSquare.posX = -1000;
                            redQueenSquare.x1 = -1000;
                            redQueenSquare.x2 = -1000;
                            redQueenBase.x1 = -1000;
                            redQueenBase.x2 = -1000;
                            redQueenEllipse.x1 = -1000;
                            redQueenEllipse.x2 = -1000;
                            redQueenRectangle1.x1 = -1000;
                            redQueenRectangle1.x2 = -1000;
                            redQueenRectangle2.x1 = -1000;
                            redQueenRectangle2.x2 = -1000;
                            redQueenRectangle3.x1 = -1000;
                            redQueenRectangle3.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    if(greyPawnsBase[s].posY == greyRook1Rectangle1.posY + 100 &&
                       greyPawnsBase[s].posX == greyRook1Rectangle1.posX) {
                        greyRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redPawnsBase[s].posY == greyRook1Rectangle1.posY + 100 &&
                       redPawnsBase[s].posX == greyRook1Rectangle1.posX) {
                        greyRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redQueenSquare.posY == greyRook1Rectangle1.posY + 100 &&
                       redQueenSquare.posX == greyRook1Rectangle1.posX) {
                        greyRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == greyRook1Rectangle1.posY + 100 &&
                   redBishop1Square.posX == greyRook1Rectangle1.posX) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == greyRook1Rectangle1.posY + 100 &&
                   redRook1Rectangle1.posX == greyRook1Rectangle1.posX) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == greyRook1Rectangle1.posY + 100 &&
                   redRook2Rectangle1.posX == greyRook1Rectangle1.posX) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == greyRook1Rectangle1.posY + 100 &&
                   redKnight1Rectangle1.posX == greyRook1Rectangle1.posX) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == greyRook1Rectangle1.posY + 100 &&
                   redKnight2Rectangle1.posX == greyRook1Rectangle1.posX) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == greyRook1Rectangle1.posY + 100 &&
                   redBishop1Square.posX == greyRook1Rectangle1.posX) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == greyRook1Rectangle1.posY + 100 &&
                   greyRook2Rectangle1.posX == greyRook1Rectangle1.posX) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == greyRook1Rectangle1.posY + 100 &&
                   greyKnight1Rectangle1.posX == greyRook1Rectangle1.posX) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == greyRook1Rectangle1.posY + 100 &&
                   greyKnight2Rectangle1.posX == greyRook1Rectangle1.posX) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    greyRook1Rectangle1.posY = greyRook1Rectangle1.posY + 100;
                    greyRook1Base.y1 = greyRook1Base.y1 + 100;
                    greyRook1Base.y2 = greyRook1Base.y2 + 100;
                    greyRook1Rectangle1.y1 = greyRook1Rectangle1.y1 + 100;
                    greyRook1Rectangle1.y2 = greyRook1Rectangle1.y2 + 100;
                    greyRook1Rectangle2.y1 = greyRook1Rectangle2.y1 + 100;
                    greyRook1Rectangle2.y2 = greyRook1Rectangle2.y2 + 100;
                    greyRook1Ellipse.y1 = greyRook1Ellipse.y1 + 100;
                    greyRook1Ellipse.y2 = greyRook1Ellipse.y2 + 100;
                }

                return flag;
            }
        }

        else {

            greyRook1Rectangle1.failedpath = TRUE;
            return TRUE;
        }
    }
}

boolean moveGreyRook1Side(UINT msg, int j, int i, int pos, int o) {

    if(redKnight1Rectangle1.posX == greyRook1Rectangle1.posX &&
       redKnight1Rectangle1.posY == greyRook1Rectangle1.posY) {
        greyRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(redKnight2Rectangle1.posX == greyRook1Rectangle1.posX &&
       redKnight2Rectangle1.posY == greyRook1Rectangle1.posY) {
        greyRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(redBishop1Square.posX == greyRook1Rectangle1.posX &&
       redBishop1Square.posY == greyRook1Rectangle1.posY) {
        greyRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(redBishop2Square.posX == greyRook1Rectangle1.posX &&
       redBishop2Square.posY == greyRook1Rectangle1.posY) {
        greyRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(redRook1Rectangle1.posX == greyRook1Rectangle1.posX &&
       redRook1Rectangle1.posY == greyRook1Rectangle1.posY) {
        greyRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(redRook2Rectangle1.posX == greyRook1Rectangle1.posX &&
       redRook2Rectangle1.posY == greyRook1Rectangle1.posY) {
        greyRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(redQueenSquare.posX == greyRook1Rectangle1.posX &&
       redQueenSquare.posY == greyRook1Rectangle1.posY) {
        greyRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    for(int g=0; g<8; g++) {
        if(redPawnsBase[g].posX == greyRook1Rectangle1.posX &&
           redPawnsBase[g].posY == greyRook1Rectangle1.posY) {
            greyRook1Rectangle1.failedpath = TRUE;
            return TRUE;
        }
    }
    boolean fail = FALSE;
    if(pos == 0) {
        fail = FALSE;
    } else {
        fail = TRUE;
        //greyRook1Rectangle1.failedpath = fail;
    }
    if(pos < 0) {
        boolean f = FALSE;
        if(pos < -100) {
            f = moveGreyRook1Side(msg, j, i, pos + 100, o);
        }
        if(!f) {
            if(pos == o) {

                greyRook1Rectangle1.posX = greyRook1Rectangle1.posX - 100;
                greyRook1Base.x1 = greyRook1Base.x1 - 100;
                greyRook1Base.x2 = greyRook1Base.x2 - 100;
                greyRook1Rectangle1.x1 = greyRook1Rectangle1.x1 - 100;
                greyRook1Rectangle1.x2 = greyRook1Rectangle1.x2 - 100;
                greyRook1Rectangle2.x1 = greyRook1Rectangle2.x1 - 100;
                greyRook1Rectangle2.x2 = greyRook1Rectangle2.x2 - 100;
                greyRook1Ellipse.x1 = greyRook1Ellipse.x1 - 100;
                greyRook1Ellipse.x2 = greyRook1Ellipse.x2 - 100;
                
                if(i*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        if(greyPawnsBase[s].posY == greyRook1Rectangle1.posY &&
                           greyPawnsBase[s].posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop1Square.posY == greyRook1Rectangle1.posY &&
                           greyBishop1Square.posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop2Square.posY == greyRook1Rectangle1.posY &&
                           greyBishop2Square.posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight1Rectangle1.posY == greyRook1Rectangle1.posY &&
                           greyKnight1Rectangle1.posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight2Rectangle1.posY == greyRook1Rectangle1.posY &&
                           greyKnight2Rectangle1.posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook2Rectangle1.posY == greyRook1Rectangle1.posY &&
                           greyRook2Rectangle1.posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKingSquare.posY == greyRook1Rectangle1.posY &&
                           greyKingSquare.posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redPawnsBase[s].posY == greyRook1Rectangle1.posY &&
                           redPawnsBase[s].posX == greyRook1Rectangle1.posX) {
                            redPawnsBase[s].posX = -1000;
                            redPawnsBase[s].x1 = -1000;
                            redPawnsBase[s].x2 = -1000;
                            redPawnsEllipse[s].x1 = -1000;
                            redPawnsEllipse[s].x2 = -1000;
                        }
                        if(redRook1Rectangle1.posY == greyRook1Rectangle1.posY &&
                           redRook1Rectangle1.posX == greyRook1Rectangle1.posX) {
                            redRook1Rectangle1.posX = -1000;
                            redRook1Rectangle1.x1 = -1000;
                            redRook1Rectangle1.x2 = -1000;
                            redRook1Rectangle2.x1 = -1000;
                            redRook1Rectangle2.x2 = -1000;
                            redRook1Base.x1 = -1000;
                            redRook1Base.x2 = -1000;
                            redRook1Ellipse.x1 = -1000;
                            redRook1Ellipse.x2 = -1000;
                        }
                        if(redRook2Rectangle1.posY == greyRook1Rectangle1.posY &&
                           redRook2Rectangle1.posX == greyRook1Rectangle1.posX) {
                            redRook2Rectangle1.posX = -1000;
                            redRook2Rectangle1.x1 = -1000;
                            redRook2Rectangle1.x2 = -1000;
                            redRook2Rectangle2.x1 = -1000;
                            redRook2Rectangle2.x2 = -1000;
                            redRook2Base.x1 = -1000;
                            redRook2Base.x2 = -1000;
                            redRook2Ellipse.x1 = -1000;
                            redRook2Ellipse.x2 = -1000;
                        }
                        if(redQueenSquare.posY == greyRook1Rectangle1.posY &&
                           redQueenSquare.posX == greyRook1Rectangle1.posX) {
                            redQueenSquare.posX = -1000;
                            redQueenSquare.x1 = -1000;
                            redQueenSquare.x2 = -1000;
                            redQueenBase.x1 = -1000;
                            redQueenBase.x2 = -1000;
                            redQueenEllipse.x1 = -1000;
                            redQueenEllipse.x2 = -1000;
                            redQueenRectangle1.x1 = -1000;
                            redQueenRectangle1.x2 = -1000;
                            redQueenRectangle2.x1 = -1000;
                            redQueenRectangle2.x2 = -1000;
                            redQueenRectangle3.x1 = -1000;
                            redQueenRectangle3.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    if(greyPawnsBase[s].posY == greyRook1Rectangle1.posY &&
                       greyPawnsBase[s].posX == greyRook1Rectangle1.posX - 100) {
                        greyRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redPawnsBase[s].posY == greyRook1Rectangle1.posY &&
                       redPawnsBase[s].posX == greyRook1Rectangle1.posX - 100) {
                        greyRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redQueenSquare.posY == greyRook1Rectangle1.posY &&
                       redQueenSquare.posX == greyRook1Rectangle1.posX - 100) {
                        greyRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == greyRook1Rectangle1.posY &&
                   redBishop1Square.posX == greyRook1Rectangle1.posX - 100) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == greyRook1Rectangle1.posY &&
                   redRook1Rectangle1.posX == greyRook1Rectangle1.posX - 100) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == greyRook1Rectangle1.posY &&
                   redRook2Rectangle1.posX == greyRook1Rectangle1.posX - 100) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == greyRook1Rectangle1.posY &&
                   redKnight1Rectangle1.posX == greyRook1Rectangle1.posX - 100) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == greyRook1Rectangle1.posY &&
                   redKnight2Rectangle1.posX == greyRook1Rectangle1.posX - 100) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == greyRook1Rectangle1.posY &&
                   redBishop1Square.posX == greyRook1Rectangle1.posX - 100) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == greyRook1Rectangle1.posY &&
                   greyRook2Rectangle1.posX == greyRook1Rectangle1.posX - 100) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == greyRook1Rectangle1.posY &&
                   greyKnight1Rectangle1.posX == greyRook1Rectangle1.posX - 100) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == greyRook1Rectangle1.posY &&
                   greyKnight2Rectangle1.posX == greyRook1Rectangle1.posX - 100) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    greyRook1Rectangle1.posX = greyRook1Rectangle1.posX - 100;
                    greyRook1Base.x1 = greyRook1Base.x1 - 100;
                    greyRook1Base.x2 = greyRook1Base.x2 - 100;
                    greyRook1Rectangle1.x1 = greyRook1Rectangle1.x1 - 100;
                    greyRook1Rectangle1.x2 = greyRook1Rectangle1.x2 - 100;
                    greyRook1Rectangle2.x1 = greyRook1Rectangle2.x1 - 100;
                    greyRook1Rectangle2.x2 = greyRook1Rectangle2.x2 - 100;
                    greyRook1Ellipse.x1 = greyRook1Ellipse.x1 - 100;
                    greyRook1Ellipse.x2 = greyRook1Ellipse.x2 - 100;
                }

                return flag;
            }
        }

        else {

            greyRook1Rectangle1.failedpath = TRUE;
            return TRUE;
        }
    } else if(pos > 0) {
        boolean f = FALSE;
        if(pos > 100) {
            f = moveGreyRook1Side(msg, j, i, pos - 100, o);
        }
        if(!f) {
            if(pos == o) {

                greyRook1Rectangle1.posX = greyRook1Rectangle1.posX + 100;
                greyRook1Base.x1 = greyRook1Base.x1 + 100;
                greyRook1Base.x2 = greyRook1Base.x2 + 100;
                greyRook1Rectangle1.x1 = greyRook1Rectangle1.x1 + 100;
                greyRook1Rectangle1.x2 = greyRook1Rectangle1.x2 + 100;
                greyRook1Rectangle2.x1 = greyRook1Rectangle2.x1 + 100;
                greyRook1Rectangle2.x2 = greyRook1Rectangle2.x2 + 100;
                greyRook1Ellipse.x1 = greyRook1Ellipse.x1 + 100;
                greyRook1Ellipse.x2 = greyRook1Ellipse.x2 + 100;
                
                if(i*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        if(greyPawnsBase[s].posY == greyRook1Rectangle1.posY &&
                           greyPawnsBase[s].posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop1Square.posY == greyRook1Rectangle1.posY &&
                           greyBishop1Square.posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop2Square.posY == greyRook1Rectangle1.posY &&
                           greyBishop2Square.posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight1Rectangle1.posY == greyRook1Rectangle1.posY &&
                           greyKnight1Rectangle1.posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight2Rectangle1.posY == greyRook1Rectangle1.posY &&
                           greyKnight2Rectangle1.posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook2Rectangle1.posY == greyRook1Rectangle1.posY &&
                           greyRook2Rectangle1.posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKingSquare.posY == greyRook1Rectangle1.posY &&
                           greyKingSquare.posX == greyRook1Rectangle1.posX) {
                            greyRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redPawnsBase[s].posY == greyRook1Rectangle1.posY &&
                           redPawnsBase[s].posX == greyRook1Rectangle1.posX) {
                            redPawnsBase[s].posX = -1000;
                            redPawnsBase[s].x1 = -1000;
                            redPawnsBase[s].x2 = -1000;
                            redPawnsEllipse[s].x1 = -1000;
                            redPawnsEllipse[s].x2 = -1000;
                        }
                        if(redRook1Rectangle1.posY == greyRook1Rectangle1.posY &&
                           redRook1Rectangle1.posX == greyRook1Rectangle1.posX) {
                            redRook1Rectangle1.posX = -1000;
                            redRook1Rectangle1.x1 = -1000;
                            redRook1Rectangle1.x2 = -1000;
                            redRook1Rectangle2.x1 = -1000;
                            redRook1Rectangle2.x2 = -1000;
                            redRook1Base.x1 = -1000;
                            redRook1Base.x2 = -1000;
                            redRook1Ellipse.x1 = -1000;
                            redRook1Ellipse.x2 = -1000;
                        }
                        if(redRook2Rectangle1.posY == greyRook1Rectangle1.posY &&
                           redRook2Rectangle1.posX == greyRook1Rectangle1.posX) {
                            redRook2Rectangle1.posX = -1000;
                            redRook2Rectangle1.x1 = -1000;
                            redRook2Rectangle1.x2 = -1000;
                            redRook2Rectangle2.x1 = -1000;
                            redRook2Rectangle2.x2 = -1000;
                            redRook2Base.x1 = -1000;
                            redRook2Base.x2 = -1000;
                            redRook2Ellipse.x1 = -1000;
                            redRook2Ellipse.x2 = -1000;
                        }
                        if(redQueenSquare.posY == greyRook1Rectangle1.posY &&
                           redQueenSquare.posX == greyRook1Rectangle1.posX) {
                            redQueenSquare.posX = -1000;
                            redQueenSquare.x1 = -1000;
                            redQueenSquare.x2 = -1000;
                            redQueenBase.x1 = -1000;
                            redQueenBase.x2 = -1000;
                            redQueenEllipse.x1 = -1000;
                            redQueenEllipse.x2 = -1000;
                            redQueenRectangle1.x1 = -1000;
                            redQueenRectangle1.x2 = -1000;
                            redQueenRectangle2.x1 = -1000;
                            redQueenRectangle2.x2 = -1000;
                            redQueenRectangle3.x1 = -1000;
                            redQueenRectangle3.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    if(greyPawnsBase[s].posY == greyRook1Rectangle1.posY &&
                       greyPawnsBase[s].posX == greyRook1Rectangle1.posX + 100) {
                        greyRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redPawnsBase[s].posY == greyRook1Rectangle1.posY &&
                       redPawnsBase[s].posX == greyRook1Rectangle1.posX + 100) {
                        greyRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redQueenSquare.posY == greyRook1Rectangle1.posY &&
                       redQueenSquare.posX == greyRook1Rectangle1.posX + 100) {
                        greyRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == greyRook1Rectangle1.posY &&
                   redBishop1Square.posX == greyRook1Rectangle1.posX + 100) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == greyRook1Rectangle1.posY &&
                   redRook1Rectangle1.posX == greyRook1Rectangle1.posX + 100) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == greyRook1Rectangle1.posY &&
                   redRook2Rectangle1.posX == greyRook1Rectangle1.posX + 100) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == greyRook1Rectangle1.posY &&
                   redKnight1Rectangle1.posX == greyRook1Rectangle1.posX + 100) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == greyRook1Rectangle1.posY &&
                   redKnight2Rectangle1.posX == greyRook1Rectangle1.posX + 100) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == greyRook1Rectangle1.posY &&
                   redBishop1Square.posX == greyRook1Rectangle1.posX + 100) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == greyRook1Rectangle1.posY &&
                   greyRook2Rectangle1.posX == greyRook1Rectangle1.posX + 100) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == greyRook1Rectangle1.posY &&
                   greyKnight1Rectangle1.posX == greyRook1Rectangle1.posX + 100) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == greyRook1Rectangle1.posY &&
                   greyKnight2Rectangle1.posX == greyRook1Rectangle1.posX + 100) {
                    greyRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    greyRook1Rectangle1.posX = greyRook1Rectangle1.posX + 100;
                    greyRook1Base.x1 = greyRook1Base.x1 + 100;
                    greyRook1Base.x2 = greyRook1Base.x2 + 100;
                    greyRook1Rectangle1.x1 = greyRook1Rectangle1.x1 + 100;
                    greyRook1Rectangle1.x2 = greyRook1Rectangle1.x2 + 100;
                    greyRook1Rectangle2.x1 = greyRook1Rectangle2.x1 + 100;
                    greyRook1Rectangle2.x2 = greyRook1Rectangle2.x2 + 100;
                    greyRook1Ellipse.x1 = greyRook1Ellipse.x1 + 100;
                    greyRook1Ellipse.x2 = greyRook1Ellipse.x2 + 100;
                }

                return flag;
            }
        }

        else {

            greyRook1Rectangle1.failedpath = TRUE;
            return TRUE;
        }
    }
}

boolean moveRedRook1(UINT msg, int j, int i, int pos, int o) {

    if(greyKnight1Rectangle1.posX == redRook1Rectangle1.posX &&
       greyKnight1Rectangle1.posY == redRook1Rectangle1.posY) {
        redRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(greyKnight2Rectangle1.posX == redRook1Rectangle1.posX &&
       greyKnight2Rectangle1.posY == redRook1Rectangle1.posY) {
        redRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(greyBishop1Square.posX == redRook1Rectangle1.posX &&
       greyBishop1Square.posY == redRook1Rectangle1.posY) {
        redRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(greyBishop2Square.posX == redRook1Rectangle1.posX &&
       greyBishop2Square.posY == redRook1Rectangle1.posY) {
        redRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(greyRook1Rectangle1.posX == redRook1Rectangle1.posX &&
       greyRook1Rectangle1.posY == redRook1Rectangle1.posY) {
        redRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(greyRook2Rectangle1.posX == redRook1Rectangle1.posX &&
       greyRook2Rectangle1.posY == redRook1Rectangle1.posY) {
        redRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(greyQueenSquare.posX == redRook1Rectangle1.posX &&
       greyQueenSquare.posY == redRook1Rectangle1.posY) {
        redRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    for(int g=0; g<8; g++) {
        if(greyPawnsBase[g].posX == redRook1Rectangle1.posX &&
           greyPawnsBase[g].posY == redRook1Rectangle1.posY) {
            redRook1Rectangle1.failedpath = TRUE;
            return TRUE;
        }
    }
    boolean fail = FALSE;
    if(o == 0) {
        fail = FALSE;
    } else {
        fail = TRUE;
        //redRook1Rectangle1.failedpath = fail;
    }
    if(pos < 0) {
        boolean f = FALSE;
        if(pos < -100) {
            f = moveRedRook1(msg, j, i, pos + 100, o);
        }
        if(!f) {
            if(pos == o) {

                redRook1Rectangle1.posY = redRook1Rectangle1.posY - 100;
                redRook1Base.y1 = redRook1Base.y1 - 100;
                redRook1Base.y2 = redRook1Base.y2 - 100;
                redRook1Rectangle1.y1 = redRook1Rectangle1.y1 - 100;
                redRook1Rectangle1.y2 = redRook1Rectangle1.y2 - 100;
                redRook1Rectangle2.y1 = redRook1Rectangle2.y1 - 100;
                redRook1Rectangle2.y2 = redRook1Rectangle2.y2 - 100;
                redRook1Ellipse.y1 = redRook1Ellipse.y1 - 100;
                redRook1Ellipse.y2 = redRook1Ellipse.y2 - 100;
                
                if(j*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redRook1Rectangle1.posY &&
                           redPawnsBase[s].posX == redRook1Rectangle1.posX) {
                            return TRUE;
                        }
                        if(redBishop1Square.posY == redRook1Rectangle1.posY &&
                           redBishop1Square.posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == redRook1Rectangle1.posY &&
                           redBishop2Square.posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == redRook1Rectangle1.posY &&
                           redKnight1Rectangle1.posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redRook1Rectangle1.posY &&
                           redKnight2Rectangle1.posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook2Rectangle1.posY == redRook1Rectangle1.posY &&
                           redRook2Rectangle1.posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redRook1Rectangle1.posY &&
                           redKingSquare.posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyPawnsBase[s].posY == redRook1Rectangle1.posY &&
                           greyPawnsBase[s].posX == redRook1Rectangle1.posX) {
                            greyPawnsBase[s].posX = -1000;
                            greyPawnsBase[s].x1 = -1000;
                            greyPawnsBase[s].x2 = -1000;
                            greyPawnsEllipse[s].x1 = -1000;
                            greyPawnsEllipse[s].x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook1Rectangle1.posY == redRook1Rectangle1.posY &&
                           greyRook1Rectangle1.posX == redRook1Rectangle1.posX) {
                            greyRook1Rectangle1.posX = -1000;
                            greyRook1Rectangle1.x1 = -1000;
                            greyRook1Rectangle1.x2 = -1000;
                            greyRook1Rectangle2.x1 = -1000;
                            greyRook1Rectangle2.x2 = -1000;
                            greyRook1Base.x1 = -1000;
                            greyRook1Base.x2 = -1000;
                            greyRook1Ellipse.x1 = -1000;
                            greyRook1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook2Rectangle1.posY == redRook1Rectangle1.posY &&
                           greyRook2Rectangle1.posX == redRook1Rectangle1.posX) {
                            greyRook2Rectangle1.posX = -1000;
                            greyRook2Rectangle1.x1 = -1000;
                            greyRook2Rectangle1.x2 = -1000;
                            greyRook2Rectangle2.x1 = -1000;
                            greyRook2Rectangle2.x2 = -1000;
                            greyRook2Base.x1 = -1000;
                            greyRook2Base.x2 = -1000;
                            greyRook2Ellipse.x1 = -1000;
                            greyRook2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyQueenSquare.posY == redRook1Rectangle1.posY &&
                           greyQueenSquare.posX == redRook1Rectangle1.posX) {
                            greyQueenSquare.posX = -1000;
                            greyQueenSquare.x1 = -1000;
                            greyQueenSquare.x2 = -1000;
                            greyQueenBase.x1 = -1000;
                            greyQueenBase.x2 = -1000;
                            greyQueenEllipse.x1 = -1000;
                            greyQueenEllipse.x2 = -1000;
                            greyQueenRectangle1.x1 = -1000;
                            greyQueenRectangle1.x2 = -1000;
                            greyQueenRectangle2.x1 = -1000;
                            greyQueenRectangle2.x2 = -1000;
                            greyQueenRectangle3.x1 = -1000;
                            greyQueenRectangle3.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    if(redPawnsBase[s].posY == redRook1Rectangle1.posY - 100 &&
                       redPawnsBase[s].posX == redRook1Rectangle1.posX) {
                        redRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redPawnsBase[s].posY == redRook1Rectangle1.posY - 100 &&
                       redPawnsBase[s].posX == redRook1Rectangle1.posX) {
                        redRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == redRook1Rectangle1.posY - 100 &&
                       greyQueenSquare.posX == redRook1Rectangle1.posX) {
                        redRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyPawnsBase[s].posY == redRook1Rectangle1.posY - 100 &&
                       greyPawnsBase[s].posX == redRook1Rectangle1.posX) {
                        redRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == redRook1Rectangle1.posY - 100 &&
                   redBishop1Square.posX == redRook1Rectangle1.posX) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == redRook1Rectangle1.posY - 100 &&
                   redRook2Rectangle1.posX == redRook1Rectangle1.posX) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == redRook1Rectangle1.posY - 100 &&
                   redKnight1Rectangle1.posX == redRook1Rectangle1.posX) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == redRook1Rectangle1.posY - 100 &&
                   redKnight2Rectangle1.posX == redRook1Rectangle1.posX) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == redRook1Rectangle1.posY - 100 &&
                   redBishop1Square.posX == redRook1Rectangle1.posX) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == redRook1Rectangle1.posY - 100 &&
                   redRook1Rectangle1.posX == redRook1Rectangle1.posX) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == redRook1Rectangle1.posY - 100 &&
                   greyRook2Rectangle1.posX == redRook1Rectangle1.posX) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == redRook1Rectangle1.posY - 100 &&
                   greyKnight1Rectangle1.posX == redRook1Rectangle1.posX) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == redRook1Rectangle1.posY - 100 &&
                   greyKnight2Rectangle1.posX == redRook1Rectangle1.posX) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    redRook1Rectangle1.posY = redRook1Rectangle1.posY - 100;
                    redRook1Base.y1 = redRook1Base.y1 - 100;
                    redRook1Base.y2 = redRook1Base.y2 - 100;
                    redRook1Rectangle1.y1 = redRook1Rectangle1.y1 - 100;
                    redRook1Rectangle1.y2 = redRook1Rectangle1.y2 - 100;
                    redRook1Rectangle2.y1 = redRook1Rectangle2.y1 - 100;
                    redRook1Rectangle2.y2 = redRook1Rectangle2.y2 - 100;
                    redRook1Ellipse.y1 = redRook1Ellipse.y1 - 100;
                    redRook1Ellipse.y2 = redRook1Ellipse.y2 - 100;
                }

                return flag;
            }
        }

        else {

            return TRUE;
        }
    } else if(pos > 0) {
        boolean f = FALSE;
        if(pos > 100) {
            f = moveRedRook1(msg, j, i, pos - 100, o);
        }
        if(!f) {
            if(pos == o) {

                redRook1Rectangle1.posY = redRook1Rectangle1.posY + 100;
                redRook1Base.y1 = redRook1Base.y1 + 100;
                redRook1Base.y2 = redRook1Base.y2 + 100;
                redRook1Rectangle1.y1 = redRook1Rectangle1.y1 + 100;
                redRook1Rectangle1.y2 = redRook1Rectangle1.y2 + 100;
                redRook1Rectangle2.y1 = redRook1Rectangle2.y1 + 100;
                redRook1Rectangle2.y2 = redRook1Rectangle2.y2 + 100;
                redRook1Ellipse.y1 = redRook1Ellipse.y1 + 100;
                redRook1Ellipse.y2 = redRook1Ellipse.y2 + 100;
                
                if(j*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redRook1Rectangle1.posY &&
                           redPawnsBase[s].posX == redRook1Rectangle1.posX) {
                            return TRUE;
                        }
                        if(redBishop1Square.posY == redRook1Rectangle1.posY &&
                           redBishop1Square.posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == redRook1Rectangle1.posY &&
                           redBishop2Square.posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == redRook1Rectangle1.posY &&
                           redKnight1Rectangle1.posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redRook1Rectangle1.posY &&
                           redKnight2Rectangle1.posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook2Rectangle1.posY == redRook1Rectangle1.posY &&
                           redRook2Rectangle1.posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redRook1Rectangle1.posY &&
                           redKingSquare.posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyPawnsBase[s].posY == redRook1Rectangle1.posY &&
                           greyPawnsBase[s].posX == redRook1Rectangle1.posX) {
                            greyPawnsBase[s].posX = -1000;
                            greyPawnsBase[s].x1 = -1000;
                            greyPawnsBase[s].x2 = -1000;
                            greyPawnsEllipse[s].x1 = -1000;
                            greyPawnsEllipse[s].x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook1Rectangle1.posY == redRook1Rectangle1.posY &&
                           greyRook1Rectangle1.posX == redRook1Rectangle1.posX) {
                            greyRook1Rectangle1.posX = -1000;
                            greyRook1Rectangle1.x1 = -1000;
                            greyRook1Rectangle1.x2 = -1000;
                            greyRook1Rectangle2.x1 = -1000;
                            greyRook1Rectangle2.x2 = -1000;
                            greyRook1Base.x1 = -1000;
                            greyRook1Base.x2 = -1000;
                            greyRook1Ellipse.x1 = -1000;
                            greyRook1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook2Rectangle1.posY == redRook1Rectangle1.posY &&
                           greyRook2Rectangle1.posX == redRook1Rectangle1.posX) {
                            greyRook2Rectangle1.posX = -1000;
                            greyRook2Rectangle1.x1 = -1000;
                            greyRook2Rectangle1.x2 = -1000;
                            greyRook2Rectangle2.x1 = -1000;
                            greyRook2Rectangle2.x2 = -1000;
                            greyRook2Base.x1 = -1000;
                            greyRook2Base.x2 = -1000;
                            greyRook2Ellipse.x1 = -1000;
                            greyRook2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyQueenSquare.posY == redRook1Rectangle1.posY &&
                           greyQueenSquare.posX == redRook1Rectangle1.posX) {
                            greyQueenSquare.posX = -1000;
                            greyQueenSquare.x1 = -1000;
                            greyQueenSquare.x2 = -1000;
                            greyQueenBase.x1 = -1000;
                            greyQueenBase.x2 = -1000;
                            greyQueenEllipse.x1 = -1000;
                            greyQueenEllipse.x2 = -1000;
                            greyQueenRectangle1.x1 = -1000;
                            greyQueenRectangle1.x2 = -1000;
                            greyQueenRectangle2.x1 = -1000;
                            greyQueenRectangle2.x2 = -1000;
                            greyQueenRectangle3.x1 = -1000;
                            greyQueenRectangle3.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    if(redPawnsBase[s].posY == redRook1Rectangle1.posY + 100 &&
                       redPawnsBase[s].posX == redRook1Rectangle1.posX) {
                        redRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redPawnsBase[s].posY == redRook1Rectangle1.posY + 100 &&
                       redPawnsBase[s].posX == redRook1Rectangle1.posX) {
                        redRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == redRook1Rectangle1.posY + 100 &&
                       greyQueenSquare.posX == redRook1Rectangle1.posX) {
                        redRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyPawnsBase[s].posY == redRook1Rectangle1.posY + 100 &&
                       greyPawnsBase[s].posX == redRook1Rectangle1.posX) {
                        redRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == redRook1Rectangle1.posY + 100 &&
                   redBishop1Square.posX == redRook1Rectangle1.posX) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == redRook1Rectangle1.posY + 100 &&
                   redRook2Rectangle1.posX == redRook1Rectangle1.posX) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == redRook1Rectangle1.posY + 100 &&
                   redKnight1Rectangle1.posX == redRook1Rectangle1.posX) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == redRook1Rectangle1.posY + 100 &&
                   redKnight2Rectangle1.posX == redRook1Rectangle1.posX) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == redRook1Rectangle1.posY + 100 &&
                   redBishop1Square.posX == redRook1Rectangle1.posX) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == redRook1Rectangle1.posY + 100 &&
                   redRook1Rectangle1.posX == redRook1Rectangle1.posX) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == redRook1Rectangle1.posY + 100 &&
                   greyRook2Rectangle1.posX == redRook1Rectangle1.posX) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == redRook1Rectangle1.posY + 100 &&
                   greyKnight1Rectangle1.posX == redRook1Rectangle1.posX) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == redRook1Rectangle1.posY + 100 &&
                   greyKnight2Rectangle1.posX == redRook1Rectangle1.posX) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    redRook1Rectangle1.posY = redRook1Rectangle1.posY + 100;
                    redRook1Base.y1 = redRook1Base.y1 + 100;
                    redRook1Base.y2 = redRook1Base.y2 + 100;
                    redRook1Rectangle1.y1 = redRook1Rectangle1.y1 + 100;
                    redRook1Rectangle1.y2 = redRook1Rectangle1.y2 + 100;
                    redRook1Rectangle2.y1 = redRook1Rectangle2.y1 + 100;
                    redRook1Rectangle2.y2 = redRook1Rectangle2.y2 + 100;
                    redRook1Ellipse.y1 = redRook1Ellipse.y1 + 100;
                    redRook1Ellipse.y2 = redRook1Ellipse.y2 + 100;
                }

                return flag;
            }
        }

        else {

            return TRUE;
        }
    }
}

boolean moveRedRook1Side(UINT msg, int j, int i, int pos, int o) {

    if(greyKnight1Rectangle1.posX == redRook1Rectangle1.posX &&
       greyKnight1Rectangle1.posY == redRook1Rectangle1.posY) {
        redRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(greyKnight2Rectangle1.posX == redRook1Rectangle1.posX &&
       greyKnight2Rectangle1.posY == redRook1Rectangle1.posY) {
        redRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(greyBishop1Square.posX == redRook1Rectangle1.posX &&
       greyBishop1Square.posY == redRook1Rectangle1.posY) {
        redRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(greyBishop2Square.posX == redRook1Rectangle1.posX &&
       greyBishop2Square.posY == redRook1Rectangle1.posY) {
        redRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(greyRook1Rectangle1.posX == redRook1Rectangle1.posX &&
       greyRook1Rectangle1.posY == redRook1Rectangle1.posY) {
        redRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(greyRook2Rectangle1.posX == redRook1Rectangle1.posX &&
       greyRook2Rectangle1.posY == redRook1Rectangle1.posY) {
        redRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(greyQueenSquare.posX == redRook1Rectangle1.posX &&
       greyQueenSquare.posY == redRook1Rectangle1.posY) {
        redRook1Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    for(int g=0; g<8; g++) {
        if(greyPawnsBase[g].posX == redRook1Rectangle1.posX &&
           greyPawnsBase[g].posY == redRook1Rectangle1.posY) {
            redRook1Rectangle1.failedpath = TRUE;
            return TRUE;
        }
    }
    boolean fail = FALSE;
    if(pos == 0) {
        fail = FALSE;
    } else {
        fail = TRUE;
        //redRook1Rectangle1.failedpath = fail;
    }
    if(pos < 0) {
        boolean f = FALSE;
        if(pos < -100) {
            f = moveRedRook1Side(msg, j, i, pos + 100, o);
        }
        if(!f) {
            if(pos == o) {

                redRook1Rectangle1.posX = redRook1Rectangle1.posX - 100;
                redRook1Base.x1 = redRook1Base.x1 - 100;
                redRook1Base.x2 = redRook1Base.x2 - 100;
                redRook1Rectangle1.x1 = redRook1Rectangle1.x1 - 100;
                redRook1Rectangle1.x2 = redRook1Rectangle1.x2 - 100;
                redRook1Rectangle2.x1 = redRook1Rectangle2.x1 - 100;
                redRook1Rectangle2.x2 = redRook1Rectangle2.x2 - 100;
                redRook1Ellipse.x1 = redRook1Ellipse.x1 - 100;
                redRook1Ellipse.x2 = redRook1Ellipse.x2 - 100;
                
                if(i*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redRook1Rectangle1.posY &&
                           redPawnsBase[s].posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop1Square.posY == redRook1Rectangle1.posY &&
                           redBishop1Square.posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == redRook1Rectangle1.posY &&
                           redBishop2Square.posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == redRook1Rectangle1.posY &&
                           redKnight1Rectangle1.posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redRook1Rectangle1.posY &&
                           redKnight2Rectangle1.posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook2Rectangle1.posY == redRook1Rectangle1.posY &&
                           redRook2Rectangle1.posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redRook1Rectangle1.posY &&
                           redKingSquare.posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyPawnsBase[s].posY == redRook1Rectangle1.posY &&
                           greyPawnsBase[s].posX == redRook1Rectangle1.posX) {
                            greyPawnsBase[s].posX = -1000;
                            greyPawnsBase[s].x1 = -1000;
                            greyPawnsBase[s].x2 = -1000;
                            greyPawnsEllipse[s].x1 = -1000;
                            greyPawnsEllipse[s].x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook1Rectangle1.posY == redRook1Rectangle1.posY &&
                           greyRook1Rectangle1.posX == redRook1Rectangle1.posX) {
                            greyRook1Rectangle1.posX = -1000;
                            greyRook1Rectangle1.x1 = -1000;
                            greyRook1Rectangle1.x2 = -1000;
                            greyRook1Rectangle2.x1 = -1000;
                            greyRook1Rectangle2.x2 = -1000;
                            greyRook1Base.x1 = -1000;
                            greyRook1Base.x2 = -1000;
                            greyRook1Ellipse.x1 = -1000;
                            greyRook1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook2Rectangle1.posY == redRook1Rectangle1.posY &&
                           greyRook2Rectangle1.posX == redRook1Rectangle1.posX) {
                            greyRook2Rectangle1.posX = -1000;
                            greyRook2Rectangle1.x1 = -1000;
                            greyRook2Rectangle1.x2 = -1000;
                            greyRook2Rectangle2.x1 = -1000;
                            greyRook2Rectangle2.x2 = -1000;
                            greyRook2Base.x1 = -1000;
                            greyRook2Base.x2 = -1000;
                            greyRook2Ellipse.x1 = -1000;
                            greyRook2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyQueenSquare.posY == redRook1Rectangle1.posY &&
                           greyQueenSquare.posX == redRook1Rectangle1.posX) {
                            greyQueenSquare.posX = -1000;
                            greyQueenSquare.x1 = -1000;
                            greyQueenSquare.x2 = -1000;
                            greyQueenBase.x1 = -1000;
                            greyQueenBase.x2 = -1000;
                            greyQueenEllipse.x1 = -1000;
                            greyQueenEllipse.x2 = -1000;
                            greyQueenRectangle1.x1 = -1000;
                            greyQueenRectangle1.x2 = -1000;
                            greyQueenRectangle2.x1 = -1000;
                            greyQueenRectangle2.x2 = -1000;
                            greyQueenRectangle3.x1 = -1000;
                            greyQueenRectangle3.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    if(redPawnsBase[s].posY == redRook1Rectangle1.posY &&
                       redPawnsBase[s].posX == redRook1Rectangle1.posX - 100) {
                        redRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redPawnsBase[s].posY == redRook1Rectangle1.posY &&
                       redPawnsBase[s].posX == redRook1Rectangle1.posX - 100) {
                        redRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redQueenSquare.posY == redRook1Rectangle1.posY &&
                       redQueenSquare.posX == redRook1Rectangle1.posX - 100) {
                        redRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyPawnsBase[s].posY == redRook1Rectangle1.posY &&
                       greyPawnsBase[s].posX == redRook1Rectangle1.posX - 100) {
                        redRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == redRook1Rectangle1.posY &&
                   redBishop1Square.posX == redRook1Rectangle1.posX - 100) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == redRook1Rectangle1.posY &&
                   redRook2Rectangle1.posX == redRook1Rectangle1.posX - 100) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == redRook1Rectangle1.posY &&
                   redKnight1Rectangle1.posX == redRook1Rectangle1.posX - 100) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == redRook1Rectangle1.posY &&
                   redKnight2Rectangle1.posX == redRook1Rectangle1.posX - 100) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == redRook1Rectangle1.posY &&
                   redBishop1Square.posX == redRook1Rectangle1.posX - 100) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == redRook1Rectangle1.posY &&
                   redRook1Rectangle1.posX == redRook1Rectangle1.posX - 100) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == redRook1Rectangle1.posY &&
                   greyRook2Rectangle1.posX == redRook1Rectangle1.posX - 100) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == redRook1Rectangle1.posY &&
                   greyKnight1Rectangle1.posX == redRook1Rectangle1.posX - 100) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == redRook1Rectangle1.posY &&
                   greyKnight2Rectangle1.posX == redRook1Rectangle1.posX - 100) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    redRook1Rectangle1.posX = redRook1Rectangle1.posX - 100;
                    redRook1Base.x1 = redRook1Base.x1 - 100;
                    redRook1Base.x2 = redRook1Base.x2 - 100;
                    redRook1Rectangle1.x1 = redRook1Rectangle1.x1 - 100;
                    redRook1Rectangle1.x2 = redRook1Rectangle1.x2 - 100;
                    redRook1Rectangle2.x1 = redRook1Rectangle2.x1 - 100;
                    redRook1Rectangle2.x2 = redRook1Rectangle2.x2 - 100;
                    redRook1Ellipse.x1 = redRook1Ellipse.x1 - 100;
                    redRook1Ellipse.x2 = redRook1Ellipse.x2 - 100;
                }

                return flag;
            }
        }

        else {

            return TRUE;
        }
    } else if(pos > 0) {
        boolean f = FALSE;
        if(pos > 100) {
            f = moveRedRook1Side(msg, j, i, pos - 100, o);
        }
        if(!f) {
            if(pos == o) {

                redRook1Rectangle1.posX = redRook1Rectangle1.posX + 100;
                redRook1Base.x1 = redRook1Base.x1 + 100;
                redRook1Base.x2 = redRook1Base.x2 + 100;
                redRook1Rectangle1.x1 = redRook1Rectangle1.x1 + 100;
                redRook1Rectangle1.x2 = redRook1Rectangle1.x2 + 100;
                redRook1Rectangle2.x1 = redRook1Rectangle2.x1 + 100;
                redRook1Rectangle2.x2 = redRook1Rectangle2.x2 + 100;
                redRook1Ellipse.x1 = redRook1Ellipse.x1 + 100;
                redRook1Ellipse.x2 = redRook1Ellipse.x2 + 100;

                if(i*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redRook1Rectangle1.posY &&
                           redPawnsBase[s].posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop1Square.posY == redRook1Rectangle1.posY &&
                           redBishop1Square.posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == redRook1Rectangle1.posY &&
                           redBishop2Square.posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == redRook1Rectangle1.posY &&
                           redKnight1Rectangle1.posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redRook1Rectangle1.posY &&
                           redKnight2Rectangle1.posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook2Rectangle1.posY == redRook1Rectangle1.posY &&
                           redRook2Rectangle1.posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redRook1Rectangle1.posY &&
                           redKingSquare.posX == redRook1Rectangle1.posX) {
                            redRook1Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyPawnsBase[s].posY == redRook1Rectangle1.posY &&
                           greyPawnsBase[s].posX == redRook1Rectangle1.posX) {
                            greyPawnsBase[s].posX = -1000;
                            greyPawnsBase[s].x1 = -1000;
                            greyPawnsBase[s].x2 = -1000;
                            greyPawnsEllipse[s].x1 = -1000;
                            greyPawnsEllipse[s].x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook1Rectangle1.posY == redRook1Rectangle1.posY &&
                           greyRook1Rectangle1.posX == redRook1Rectangle1.posX) {
                            greyRook1Rectangle1.posX = -1000;
                            greyRook1Rectangle1.x1 = -1000;
                            greyRook1Rectangle1.x2 = -1000;
                            greyRook1Rectangle2.x1 = -1000;
                            greyRook1Rectangle2.x2 = -1000;
                            greyRook1Base.x1 = -1000;
                            greyRook1Base.x2 = -1000;
                            greyRook1Ellipse.x1 = -1000;
                            greyRook1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook2Rectangle1.posY == redRook1Rectangle1.posY &&
                           greyRook2Rectangle1.posX == redRook1Rectangle1.posX) {
                            greyRook2Rectangle1.posX = -1000;
                            greyRook2Rectangle1.x1 = -1000;
                            greyRook2Rectangle1.x2 = -1000;
                            greyRook2Rectangle2.x1 = -1000;
                            greyRook2Rectangle2.x2 = -1000;
                            greyRook2Base.x1 = -1000;
                            greyRook2Base.x2 = -1000;
                            greyRook2Ellipse.x1 = -1000;
                            greyRook2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyQueenSquare.posY == redRook1Rectangle1.posY &&
                           greyQueenSquare.posX == redRook1Rectangle1.posX) {
                            greyQueenSquare.posX = -1000;
                            greyQueenSquare.x1 = -1000;
                            greyQueenSquare.x2 = -1000;
                            greyQueenBase.x1 = -1000;
                            greyQueenBase.x2 = -1000;
                            greyQueenEllipse.x1 = -1000;
                            greyQueenEllipse.x2 = -1000;
                            greyQueenRectangle1.x1 = -1000;
                            greyQueenRectangle1.x2 = -1000;
                            greyQueenRectangle2.x1 = -1000;
                            greyQueenRectangle2.x2 = -1000;
                            greyQueenRectangle3.x1 = -1000;
                            greyQueenRectangle3.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int i=0; i<8; i++) {
                    if(redPawnsBase[i].posY == redRook1Rectangle1.posY &&
                       redPawnsBase[i].posX == redRook1Rectangle1.posX + 100) {
                        redRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyPawnsBase[i].posY == redRook1Rectangle1.posY &&
                       greyPawnsBase[i].posX == redRook1Rectangle1.posX + 100) {
                        redRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redQueenSquare.posY == redRook1Rectangle1.posY &&
                       redQueenSquare.posX == redRook1Rectangle1.posX + 100) {
                        redRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyPawnsBase[i].posY == redRook1Rectangle1.posY &&
                       greyPawnsBase[i].posX == redRook1Rectangle1.posX + 100) {
                        redRook1Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == redRook1Rectangle1.posY &&
                   redBishop1Square.posX == redRook1Rectangle1.posX + 100) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == redRook1Rectangle1.posY &&
                   redRook2Rectangle1.posX == redRook1Rectangle1.posX + 100) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == redRook1Rectangle1.posY &&
                   redKnight1Rectangle1.posX == redRook1Rectangle1.posX + 100) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == redRook1Rectangle1.posY &&
                   redKnight2Rectangle1.posX == redRook1Rectangle1.posX + 100) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == redRook1Rectangle1.posY &&
                   redBishop1Square.posX == redRook1Rectangle1.posX + 100) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == redRook1Rectangle1.posY &&
                   redRook1Rectangle1.posX == redRook1Rectangle1.posX + 100) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == redRook1Rectangle1.posY &&
                   greyRook2Rectangle1.posX == redRook1Rectangle1.posX + 100) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == redRook1Rectangle1.posY &&
                   greyKnight1Rectangle1.posX == redRook1Rectangle1.posX + 100) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == redRook1Rectangle1.posY &&
                   greyKnight2Rectangle1.posX == redRook1Rectangle1.posX + 100) {
                    redRook1Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    redRook1Rectangle1.posX = redRook1Rectangle1.posX + 100;
                    redRook1Base.x1 = redRook1Base.x1 + 100;
                    redRook1Base.x2 = redRook1Base.x2 + 100;
                    redRook1Rectangle1.x1 = redRook1Rectangle1.x1 + 100;
                    redRook1Rectangle1.x2 = redRook1Rectangle1.x2 + 100;
                    redRook1Rectangle2.x1 = redRook1Rectangle2.x1 + 100;
                    redRook1Rectangle2.x2 = redRook1Rectangle2.x2 + 100;
                    redRook1Ellipse.x1 = redRook1Ellipse.x1 + 100;
                    redRook1Ellipse.x2 = redRook1Ellipse.x2 + 100;
                }

                return flag;
            }
        }

        else {

            return TRUE;
        }
    }
}

boolean moveGreyRook2(UINT msg, int j, int i, int pos, int o) {

    if(redKnight1Rectangle1.posX == greyRook2Rectangle1.posX &&
       redKnight1Rectangle1.posY == greyRook2Rectangle1.posY) {
        greyRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(redKnight2Rectangle1.posX == greyRook2Rectangle1.posX &&
       redKnight2Rectangle1.posY == greyRook2Rectangle1.posY) {
        greyRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(redBishop1Square.posX == greyRook2Rectangle1.posX &&
       redBishop1Square.posY == greyRook2Rectangle1.posY) {
        greyRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(redBishop2Square.posX == greyRook2Rectangle1.posX &&
       redBishop2Square.posY == greyRook2Rectangle1.posY) {
        greyRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(redRook1Rectangle1.posX == greyRook2Rectangle1.posX &&
       redRook1Rectangle1.posY == greyRook2Rectangle1.posY) {
        greyRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(redRook2Rectangle1.posX == greyRook2Rectangle1.posX &&
       redRook2Rectangle1.posY == greyRook2Rectangle1.posY) {
        greyRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(redQueenSquare.posX == greyRook2Rectangle1.posX &&
       redQueenSquare.posY == greyRook2Rectangle1.posY) {
        greyRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    for(int g=0; g<8; g++) {
        if(redPawnsBase[g].posX == greyRook2Rectangle1.posX &&
           redPawnsBase[g].posY == greyRook2Rectangle1.posY) {
            greyRook2Rectangle1.failedpath = TRUE;
            return TRUE;
        }
    }
    boolean fail = FALSE;
    if(o == 0) {
        fail = FALSE;
    } else {
        fail = TRUE;
        //greyRook2Rectangle1.failedpath = fail;
    }
    if(pos < 0) {
        boolean f = FALSE;
        if(pos < -100) {
            f = moveGreyRook2(msg, j, i, pos + 100, o);
        }
        if(!f) {
            if(pos == o) {

                greyRook2Rectangle1.posY = greyRook2Rectangle1.posY - 100;
                greyRook2Base.y1 = greyRook2Base.y1 - 100;
                greyRook2Base.y2 = greyRook2Base.y2 - 100;
                greyRook2Rectangle1.y1 = greyRook2Rectangle1.y1 - 100;
                greyRook2Rectangle1.y2 = greyRook2Rectangle1.y2 - 100;
                greyRook2Rectangle2.y1 = greyRook2Rectangle2.y1 - 100;
                greyRook2Rectangle2.y2 = greyRook2Rectangle2.y2 - 100;
                greyRook2Ellipse.y1 = greyRook2Ellipse.y1 - 100;
                greyRook2Ellipse.y2 = greyRook2Ellipse.y2 - 100;
                
                if(j*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        if(greyPawnsBase[s].posY == greyRook2Rectangle1.posY &&
                           greyPawnsBase[s].posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop1Square.posY == greyRook2Rectangle1.posY &&
                           greyBishop1Square.posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop2Square.posY == greyRook2Rectangle1.posY &&
                           greyBishop2Square.posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight1Rectangle1.posY == greyRook2Rectangle1.posY &&
                           greyKnight1Rectangle1.posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight2Rectangle1.posY == greyRook2Rectangle1.posY &&
                           greyKnight2Rectangle1.posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook1Rectangle1.posY == greyRook2Rectangle1.posY &&
                           greyRook1Rectangle1.posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKingSquare.posY == greyRook2Rectangle1.posY &&
                           greyKingSquare.posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redPawnsBase[s].posY == greyRook2Rectangle1.posY &&
                           redPawnsBase[s].posX == greyRook2Rectangle1.posX) {
                            redPawnsBase[s].posX = -1000;
                            redPawnsBase[s].x1 = -1000;
                            redPawnsBase[s].x2 = -1000;
                            redPawnsEllipse[s].x1 = -1000;
                            redPawnsEllipse[s].x2 = -1000;
                        }
                        if(redRook1Rectangle1.posY == greyRook2Rectangle1.posY &&
                           redRook1Rectangle1.posX == greyRook2Rectangle1.posX) {
                            redRook1Rectangle1.posX = -1000;
                            redRook1Rectangle1.x1 = -1000;
                            redRook1Rectangle1.x2 = -1000;
                            redRook1Rectangle2.x1 = -1000;
                            redRook1Rectangle2.x2 = -1000;
                            redRook1Base.x1 = -1000;
                            redRook1Base.x2 = -1000;
                            redRook1Ellipse.x1 = -1000;
                            redRook1Ellipse.x2 = -1000;
                        }
                        if(redRook2Rectangle1.posY == greyRook2Rectangle1.posY &&
                           redRook2Rectangle1.posX == greyRook2Rectangle1.posX) {
                            redRook2Rectangle1.posX = -1000;
                            redRook2Rectangle1.x1 = -1000;
                            redRook2Rectangle1.x2 = -1000;
                            redRook2Rectangle2.x1 = -1000;
                            redRook2Rectangle2.x2 = -1000;
                            redRook2Base.x1 = -1000;
                            redRook2Base.x2 = -1000;
                            redRook2Ellipse.x1 = -1000;
                            redRook2Ellipse.x2 = -1000;
                        }
                        if(redRook2Rectangle1.posY == greyRook2Rectangle1.posY &&
                           redRook2Rectangle1.posX == greyRook2Rectangle1.posX) {
                            redRook2Rectangle1.posX = -1000;
                            redRook2Rectangle1.x1 = -1000;
                            redRook2Rectangle1.x2 = -1000;
                            redRook2Rectangle2.x1 = -1000;
                            redRook2Rectangle2.x2 = -1000;
                            redRook2Base.x1 = -1000;
                            redRook2Base.x2 = -1000;
                            redRook2Ellipse.x1 = -1000;
                            redRook2Ellipse.x2 = -1000;
                        }
                        if(redQueenSquare.posY == greyRook2Rectangle1.posY &&
                           redQueenSquare.posX == greyRook2Rectangle1.posX) {
                            redQueenSquare.posX = -1000;
                            redQueenSquare.x1 = -1000;
                            redQueenSquare.x2 = -1000;
                            redQueenBase.x1 = -1000;
                            redQueenBase.x2 = -1000;
                            redQueenEllipse.x1 = -1000;
                            redQueenEllipse.x2 = -1000;
                            redQueenRectangle1.x1 = -1000;
                            redQueenRectangle1.x2 = -1000;
                            redQueenRectangle2.x1 = -1000;
                            redQueenRectangle2.x2 = -1000;
                            redQueenRectangle3.x1 = -1000;
                            redQueenRectangle3.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    if(greyPawnsBase[s].posY == greyRook2Rectangle1.posY - 100 &&
                       greyPawnsBase[s].posX == greyRook2Rectangle1.posX) {
                        greyRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redPawnsBase[s].posY == greyRook2Rectangle1.posY - 100 &&
                       redPawnsBase[s].posX == greyRook2Rectangle1.posX) {
                        greyRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redQueenSquare.posY == greyRook2Rectangle1.posY - 100 &&
                       redQueenSquare.posX == greyRook2Rectangle1.posX) {
                        greyRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == greyRook2Rectangle1.posY - 100 &&
                   redBishop1Square.posX == greyRook2Rectangle1.posX) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == greyRook2Rectangle1.posY - 100 &&
                   greyRook2Rectangle1.posX == greyRook2Rectangle1.posX) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == greyRook2Rectangle1.posY - 100 &&
                   redRook2Rectangle1.posX == greyRook2Rectangle1.posX) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == greyRook2Rectangle1.posY - 100 &&
                   redKnight1Rectangle1.posX == greyRook2Rectangle1.posX) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == greyRook2Rectangle1.posY - 100 &&
                   redKnight2Rectangle1.posX == greyRook2Rectangle1.posX) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == greyRook2Rectangle1.posY - 100 &&
                   redBishop1Square.posX == greyRook2Rectangle1.posX) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == greyRook2Rectangle1.posY - 100 &&
                   greyRook2Rectangle1.posX == greyRook2Rectangle1.posX) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == greyRook2Rectangle1.posY - 100 &&
                   greyKnight1Rectangle1.posX == greyRook2Rectangle1.posX) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == greyRook2Rectangle1.posY - 100 &&
                   greyKnight2Rectangle1.posX == greyRook2Rectangle1.posX) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    greyRook2Rectangle1.posY = greyRook2Rectangle1.posY - 100;
                    greyRook2Base.y1 = greyRook2Base.y1 - 100;
                    greyRook2Base.y2 = greyRook2Base.y2 - 100;
                    greyRook2Rectangle1.y1 = greyRook2Rectangle1.y1 - 100;
                    greyRook2Rectangle1.y2 = greyRook2Rectangle1.y2 - 100;
                    greyRook2Rectangle2.y1 = greyRook2Rectangle2.y1 - 100;
                    greyRook2Rectangle2.y2 = greyRook2Rectangle2.y2 - 100;
                    greyRook2Ellipse.y1 = greyRook2Ellipse.y1 - 100;
                    greyRook2Ellipse.y2 = greyRook2Ellipse.y2 - 100;
                }

                return flag;
            }
        }

        else {

            greyRook2Rectangle1.failedpath = TRUE;
            return TRUE;
        }
    } else if(pos > 0) {
        boolean f = FALSE;
        if(pos > 100) {
            f = moveGreyRook2(msg, j, i, pos - 100, o);
        }
        if(!f) {
            if(pos == o) {

                greyRook2Rectangle1.posY = greyRook2Rectangle1.posY + 100;
                greyRook2Base.y1 = greyRook2Base.y1 + 100;
                greyRook2Base.y2 = greyRook2Base.y2 + 100;
                greyRook2Rectangle1.y1 = greyRook2Rectangle1.y1 + 100;
                greyRook2Rectangle1.y2 = greyRook2Rectangle1.y2 + 100;
                greyRook2Rectangle2.y1 = greyRook2Rectangle2.y1 + 100;
                greyRook2Rectangle2.y2 = greyRook2Rectangle2.y2 + 100;
                greyRook2Ellipse.y1 = greyRook2Ellipse.y1 + 100;
                greyRook2Ellipse.y2 = greyRook2Ellipse.y2 + 100;

                if(j*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        if(greyPawnsBase[s].posY == greyRook2Rectangle1.posY &&
                           greyPawnsBase[s].posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop1Square.posY == greyRook2Rectangle1.posY &&
                           greyBishop1Square.posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop2Square.posY == greyRook2Rectangle1.posY &&
                           greyBishop2Square.posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight1Rectangle1.posY == greyRook2Rectangle1.posY &&
                           greyKnight1Rectangle1.posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight2Rectangle1.posY == greyRook2Rectangle1.posY &&
                           greyKnight2Rectangle1.posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook1Rectangle1.posY == greyRook2Rectangle1.posY &&
                           greyRook1Rectangle1.posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKingSquare.posY == greyRook2Rectangle1.posY &&
                           greyKingSquare.posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redPawnsBase[s].posY == greyRook2Rectangle1.posY &&
                           redPawnsBase[s].posX == greyRook2Rectangle1.posX) {
                            redPawnsBase[s].posX = -1000;
                            redPawnsBase[s].x1 = -1000;
                            redPawnsBase[s].x2 = -1000;
                            redPawnsEllipse[s].x1 = -1000;
                            redPawnsEllipse[s].x2 = -1000;
                        }
                        if(redRook1Rectangle1.posY == greyRook2Rectangle1.posY &&
                           redRook1Rectangle1.posX == greyRook2Rectangle1.posX) {
                            redRook1Rectangle1.posX = -1000;
                            redRook1Rectangle1.x1 = -1000;
                            redRook1Rectangle1.x2 = -1000;
                            redRook1Rectangle2.x1 = -1000;
                            redRook1Rectangle2.x2 = -1000;
                            redRook1Base.x1 = -1000;
                            redRook1Base.x2 = -1000;
                            redRook1Ellipse.x1 = -1000;
                            redRook1Ellipse.x2 = -1000;
                        }
                        if(redRook2Rectangle1.posY == greyRook2Rectangle1.posY &&
                           redRook2Rectangle1.posX == greyRook2Rectangle1.posX) {
                            redRook2Rectangle1.posX = -1000;
                            redRook2Rectangle1.x1 = -1000;
                            redRook2Rectangle1.x2 = -1000;
                            redRook2Rectangle2.x1 = -1000;
                            redRook2Rectangle2.x2 = -1000;
                            redRook2Base.x1 = -1000;
                            redRook2Base.x2 = -1000;
                            redRook2Ellipse.x1 = -1000;
                            redRook2Ellipse.x2 = -1000;
                        }
                        if(redQueenSquare.posY == greyRook2Rectangle1.posY &&
                           redQueenSquare.posX == greyRook2Rectangle1.posX) {
                            redQueenSquare.posX = -1000;
                            redQueenSquare.x1 = -1000;
                            redQueenSquare.x2 = -1000;
                            redQueenBase.x1 = -1000;
                            redQueenBase.x2 = -1000;
                            redQueenEllipse.x1 = -1000;
                            redQueenEllipse.x2 = -1000;
                            redQueenRectangle1.x1 = -1000;
                            redQueenRectangle1.x2 = -1000;
                            redQueenRectangle2.x1 = -1000;
                            redQueenRectangle2.x2 = -1000;
                            redQueenRectangle3.x1 = -1000;
                            redQueenRectangle3.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    if(greyPawnsBase[s].posY == greyRook2Rectangle1.posY + 100 &&
                       greyPawnsBase[s].posX == greyRook2Rectangle1.posX) {
                        greyRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redPawnsBase[s].posY == greyRook2Rectangle1.posY + 100 &&
                       redPawnsBase[s].posX == greyRook2Rectangle1.posX) {
                        greyRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redQueenSquare.posY == greyRook2Rectangle1.posY + 100 &&
                       redQueenSquare.posX == greyRook2Rectangle1.posX) {
                        greyRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == greyRook2Rectangle1.posY + 100 &&
                   redBishop1Square.posX == greyRook2Rectangle1.posX) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == greyRook2Rectangle1.posY + 100 &&
                   greyRook2Rectangle1.posX == greyRook2Rectangle1.posX) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == greyRook2Rectangle1.posY + 100 &&
                   redRook2Rectangle1.posX == greyRook2Rectangle1.posX) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == greyRook2Rectangle1.posY + 100 &&
                   redKnight1Rectangle1.posX == greyRook2Rectangle1.posX) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == greyRook2Rectangle1.posY + 100 &&
                   redKnight2Rectangle1.posX == greyRook2Rectangle1.posX) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == greyRook2Rectangle1.posY + 100 &&
                   redBishop1Square.posX == greyRook2Rectangle1.posX) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == greyRook2Rectangle1.posY + 100 &&
                   greyRook2Rectangle1.posX == greyRook2Rectangle1.posX) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == greyRook2Rectangle1.posY + 100 &&
                   greyKnight1Rectangle1.posX == greyRook2Rectangle1.posX) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == greyRook2Rectangle1.posY + 100 &&
                   greyKnight2Rectangle1.posX == greyRook2Rectangle1.posX) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    greyRook2Rectangle1.posY = greyRook2Rectangle1.posY + 100;
                    greyRook2Base.y1 = greyRook2Base.y1 + 100;
                    greyRook2Base.y2 = greyRook2Base.y2 + 100;
                    greyRook2Rectangle1.y1 = greyRook2Rectangle1.y1 + 100;
                    greyRook2Rectangle1.y2 = greyRook2Rectangle1.y2 + 100;
                    greyRook2Rectangle2.y1 = greyRook2Rectangle2.y1 + 100;
                    greyRook2Rectangle2.y2 = greyRook2Rectangle2.y2 + 100;
                    greyRook2Ellipse.y1 = greyRook2Ellipse.y1 + 100;
                    greyRook2Ellipse.y2 = greyRook2Ellipse.y2 + 100;
                }

                return flag;
            }
        }

        else {

            greyRook2Rectangle1.failedpath = TRUE;
            return TRUE;
        }
    }
}

boolean moveGreyRook2Side(UINT msg, int j, int i, int pos, int o) {

    if(redKnight1Rectangle1.posX == greyRook2Rectangle1.posX &&
       redKnight1Rectangle1.posY == greyRook2Rectangle1.posY) {
        greyRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(redKnight2Rectangle1.posX == greyRook2Rectangle1.posX &&
       redKnight2Rectangle1.posY == greyRook2Rectangle1.posY) {
        greyRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(redBishop1Square.posX == greyRook2Rectangle1.posX &&
       redBishop1Square.posY == greyRook2Rectangle1.posY) {
        greyRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(redBishop2Square.posX == greyRook2Rectangle1.posX &&
       redBishop2Square.posY == greyRook2Rectangle1.posY) {
        greyRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(redRook1Rectangle1.posX == greyRook2Rectangle1.posX &&
       redRook1Rectangle1.posY == greyRook2Rectangle1.posY) {
        greyRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(redRook2Rectangle1.posX == greyRook2Rectangle1.posX &&
       redRook2Rectangle1.posY == greyRook2Rectangle1.posY) {
        greyRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(redQueenSquare.posX == greyRook2Rectangle1.posX &&
       redQueenSquare.posY == greyRook2Rectangle1.posY) {
        greyRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    for(int g=0; g<8; g++) {
        if(redPawnsBase[g].posX == greyRook2Rectangle1.posX &&
           redPawnsBase[g].posY == greyRook2Rectangle1.posY) {
            greyRook2Rectangle1.failedpath = TRUE;
            return TRUE;
        }
    }
    boolean fail = FALSE;
    if(pos == 0) {
        fail = FALSE;
    } else {
        fail = TRUE;
        //greyRook2Rectangle1.failedpath = fail;
    }
    if(pos < 0) {
        boolean f = FALSE;
        if(pos < -100) {
            f = moveGreyRook2Side(msg, j, i, pos + 100, o);
        }
        if(!f) {
            if(pos == o) {

                greyRook2Rectangle1.posX = greyRook2Rectangle1.posX - 100;
                greyRook2Base.x1 = greyRook2Base.x1 - 100;
                greyRook2Base.x2 = greyRook2Base.x2 - 100;
                greyRook2Rectangle1.x1 = greyRook2Rectangle1.x1 - 100;
                greyRook2Rectangle1.x2 = greyRook2Rectangle1.x2 - 100;
                greyRook2Rectangle2.x1 = greyRook2Rectangle2.x1 - 100;
                greyRook2Rectangle2.x2 = greyRook2Rectangle2.x2 - 100;
                greyRook2Ellipse.x1 = greyRook2Ellipse.x1 - 100;
                greyRook2Ellipse.x2 = greyRook2Ellipse.x2 - 100;
                
                if(i*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        if(greyPawnsBase[s].posY == greyRook2Rectangle1.posY &&
                           greyPawnsBase[s].posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop1Square.posY == greyRook2Rectangle1.posY &&
                           greyBishop1Square.posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop2Square.posY == greyRook2Rectangle1.posY &&
                           greyBishop2Square.posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight1Rectangle1.posY == greyRook2Rectangle1.posY &&
                           greyKnight1Rectangle1.posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight2Rectangle1.posY == greyRook2Rectangle1.posY &&
                           greyKnight2Rectangle1.posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook1Rectangle1.posY == greyRook2Rectangle1.posY &&
                           greyRook1Rectangle1.posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKingSquare.posY == greyRook2Rectangle1.posY &&
                           greyKingSquare.posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redPawnsBase[s].posY == greyRook2Rectangle1.posY &&
                           redPawnsBase[s].posX == greyRook2Rectangle1.posX) {
                            redPawnsBase[s].posX = -1000;
                            redPawnsBase[s].x1 = -1000;
                            redPawnsBase[s].x2 = -1000;
                            redPawnsEllipse[s].x1 = -1000;
                            redPawnsEllipse[s].x2 = -1000;
                        }
                        if(redRook1Rectangle1.posY == greyRook2Rectangle1.posY &&
                           redRook1Rectangle1.posX == greyRook2Rectangle1.posX) {
                            redRook1Rectangle1.posX = -1000;
                            redRook1Rectangle1.x1 = -1000;
                            redRook1Rectangle1.x2 = -1000;
                            redRook1Rectangle2.x1 = -1000;
                            redRook1Rectangle2.x2 = -1000;
                            redRook1Base.x1 = -1000;
                            redRook1Base.x2 = -1000;
                            redRook1Ellipse.x1 = -1000;
                            redRook1Ellipse.x2 = -1000;
                        }
                        if(redRook2Rectangle1.posY == greyRook2Rectangle1.posY &&
                           redRook2Rectangle1.posX == greyRook2Rectangle1.posX) {
                            redRook2Rectangle1.posX = -1000;
                            redRook2Rectangle1.x1 = -1000;
                            redRook2Rectangle1.x2 = -1000;
                            redRook2Rectangle2.x1 = -1000;
                            redRook2Rectangle2.x2 = -1000;
                            redRook2Base.x1 = -1000;
                            redRook2Base.x2 = -1000;
                            redRook2Ellipse.x1 = -1000;
                            redRook2Ellipse.x2 = -1000;
                        }
                        if(redQueenSquare.posY == greyRook2Rectangle1.posY &&
                           redQueenSquare.posX == greyRook2Rectangle1.posX) {
                            redQueenSquare.posX = -1000;
                            redQueenSquare.x1 = -1000;
                            redQueenSquare.x2 = -1000;
                            redQueenBase.x1 = -1000;
                            redQueenBase.x2 = -1000;
                            redQueenEllipse.x1 = -1000;
                            redQueenEllipse.x2 = -1000;
                            redQueenRectangle1.x1 = -1000;
                            redQueenRectangle1.x2 = -1000;
                            redQueenRectangle2.x1 = -1000;
                            redQueenRectangle2.x2 = -1000;
                            redQueenRectangle3.x1 = -1000;
                            redQueenRectangle3.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    if(greyPawnsBase[s].posY == greyRook2Rectangle1.posY &&
                       greyPawnsBase[s].posX == greyRook2Rectangle1.posX - 100) {
                        greyRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redPawnsBase[s].posY == greyRook2Rectangle1.posY &&
                       redPawnsBase[s].posX == greyRook2Rectangle1.posX - 100) {
                        greyRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redQueenSquare.posY == greyRook2Rectangle1.posY &&
                       redQueenSquare.posX == greyRook2Rectangle1.posX - 100) {
                        greyRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == greyRook2Rectangle1.posY &&
                   redBishop1Square.posX == greyRook2Rectangle1.posX - 100) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == greyRook2Rectangle1.posY &&
                   greyRook2Rectangle1.posX == greyRook2Rectangle1.posX - 100) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == greyRook2Rectangle1.posY &&
                   redRook2Rectangle1.posX == greyRook2Rectangle1.posX - 100) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == greyRook2Rectangle1.posY &&
                   redKnight1Rectangle1.posX == greyRook2Rectangle1.posX - 100) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == greyRook2Rectangle1.posY &&
                   redKnight2Rectangle1.posX == greyRook2Rectangle1.posX - 100) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == greyRook2Rectangle1.posY &&
                   redBishop1Square.posX == greyRook2Rectangle1.posX - 100) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == greyRook2Rectangle1.posY &&
                   greyRook2Rectangle1.posX == greyRook2Rectangle1.posX - 100) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == greyRook2Rectangle1.posY &&
                   greyKnight1Rectangle1.posX == greyRook2Rectangle1.posX - 100) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == greyRook2Rectangle1.posY &&
                   greyKnight2Rectangle1.posX == greyRook2Rectangle1.posX - 100) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    greyRook2Rectangle1.posX = greyRook2Rectangle1.posX - 100;
                    greyRook2Base.x1 = greyRook2Base.x1 - 100;
                    greyRook2Base.x2 = greyRook2Base.x2 - 100;
                    greyRook2Rectangle1.x1 = greyRook2Rectangle1.x1 - 100;
                    greyRook2Rectangle1.x2 = greyRook2Rectangle1.x2 - 100;
                    greyRook2Rectangle2.x1 = greyRook2Rectangle2.x1 - 100;
                    greyRook2Rectangle2.x2 = greyRook2Rectangle2.x2 - 100;
                    greyRook2Ellipse.x1 = greyRook2Ellipse.x1 - 100;
                    greyRook2Ellipse.x2 = greyRook2Ellipse.x2 - 100;
                }

                return flag;
            }
        }

        else {

            greyRook2Rectangle1.failedpath = TRUE;
            return TRUE;
        }
    } else if(pos > 0) {
        boolean f = FALSE;
        if(pos > 100) {
            f = moveGreyRook2Side(msg, j, i, pos - 100, o);
        }
        if(!f) {
            if(pos == o) {

                greyRook2Rectangle1.posX = greyRook2Rectangle1.posX + 100;
                greyRook2Base.x1 = greyRook2Base.x1 + 100;
                greyRook2Base.x2 = greyRook2Base.x2 + 100;
                greyRook2Rectangle1.x1 = greyRook2Rectangle1.x1 + 100;
                greyRook2Rectangle1.x2 = greyRook2Rectangle1.x2 + 100;
                greyRook2Rectangle2.x1 = greyRook2Rectangle2.x1 + 100;
                greyRook2Rectangle2.x2 = greyRook2Rectangle2.x2 + 100;
                greyRook2Ellipse.x1 = greyRook2Ellipse.x1 + 100;
                greyRook2Ellipse.x2 = greyRook2Ellipse.x2 + 100;
                
                if(i*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        if(greyPawnsBase[s].posY == greyRook2Rectangle1.posY &&
                           greyPawnsBase[s].posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop1Square.posY == greyRook2Rectangle1.posY &&
                           greyBishop1Square.posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyBishop2Square.posY == greyRook2Rectangle1.posY &&
                           greyBishop2Square.posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight1Rectangle1.posY == greyRook2Rectangle1.posY &&
                           greyKnight1Rectangle1.posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKnight2Rectangle1.posY == greyRook2Rectangle1.posY &&
                           greyKnight2Rectangle1.posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyRook1Rectangle1.posY == greyRook2Rectangle1.posY &&
                           greyRook1Rectangle1.posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(greyKingSquare.posY == greyRook2Rectangle1.posY &&
                           greyKingSquare.posX == greyRook2Rectangle1.posX) {
                            greyRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redPawnsBase[s].posY == greyRook2Rectangle1.posY &&
                           redPawnsBase[s].posX == greyRook2Rectangle1.posX) {
                            redPawnsBase[s].posX = -1000;
                            redPawnsBase[s].x1 = -1000;
                            redPawnsBase[s].x2 = -1000;
                            redPawnsEllipse[s].x1 = -1000;
                            redPawnsEllipse[s].x2 = -1000;
                        }
                        if(redRook1Rectangle1.posY == greyRook2Rectangle1.posY &&
                           redRook1Rectangle1.posX == greyRook2Rectangle1.posX) {
                            redRook1Rectangle1.posX = -1000;
                            redRook1Rectangle1.x1 = -1000;
                            redRook1Rectangle1.x2 = -1000;
                            redRook1Rectangle2.x1 = -1000;
                            redRook1Rectangle2.x2 = -1000;
                            redRook1Base.x1 = -1000;
                            redRook1Base.x2 = -1000;
                            redRook1Ellipse.x1 = -1000;
                            redRook1Ellipse.x2 = -1000;
                        }
                        if(redRook2Rectangle1.posY == greyRook2Rectangle1.posY &&
                           redRook2Rectangle1.posX == greyRook2Rectangle1.posX) {
                            redRook2Rectangle1.posX = -1000;
                            redRook2Rectangle1.x1 = -1000;
                            redRook2Rectangle1.x2 = -1000;
                            redRook2Rectangle2.x1 = -1000;
                            redRook2Rectangle2.x2 = -1000;
                            redRook2Base.x1 = -1000;
                            redRook2Base.x2 = -1000;
                            redRook2Ellipse.x1 = -1000;
                            redRook2Ellipse.x2 = -1000;
                        }
                        if(redQueenSquare.posY == greyRook2Rectangle1.posY &&
                           redQueenSquare.posX == greyRook2Rectangle1.posX) {
                            redQueenSquare.posX = -1000;
                            redQueenSquare.x1 = -1000;
                            redQueenSquare.x2 = -1000;
                            redQueenBase.x1 = -1000;
                            redQueenBase.x2 = -1000;
                            redQueenEllipse.x1 = -1000;
                            redQueenEllipse.x2 = -1000;
                            redQueenRectangle1.x1 = -1000;
                            redQueenRectangle1.x2 = -1000;
                            redQueenRectangle2.x1 = -1000;
                            redQueenRectangle2.x2 = -1000;
                            redQueenRectangle3.x1 = -1000;
                            redQueenRectangle3.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    if(greyPawnsBase[s].posY == greyRook2Rectangle1.posY &&
                       greyPawnsBase[s].posX == greyRook2Rectangle1.posX + 100) {
                        greyRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redPawnsBase[s].posY == greyRook2Rectangle1.posY &&
                       redPawnsBase[s].posX == greyRook2Rectangle1.posX + 100) {
                        greyRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redQueenSquare.posY == greyRook2Rectangle1.posY &&
                       redQueenSquare.posX == greyRook2Rectangle1.posX + 100) {
                        greyRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == greyRook2Rectangle1.posY &&
                   redBishop1Square.posX == greyRook2Rectangle1.posX + 100) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == greyRook2Rectangle1.posY &&
                   greyRook2Rectangle1.posX == greyRook2Rectangle1.posX + 100) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook2Rectangle1.posY == greyRook2Rectangle1.posY &&
                   redRook2Rectangle1.posX == greyRook2Rectangle1.posX + 100) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == greyRook2Rectangle1.posY &&
                   redKnight1Rectangle1.posX == greyRook2Rectangle1.posX + 100) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == greyRook2Rectangle1.posY &&
                   redKnight2Rectangle1.posX == greyRook2Rectangle1.posX + 100) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == greyRook2Rectangle1.posY &&
                   redBishop1Square.posX == greyRook2Rectangle1.posX + 100) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook2Rectangle1.posY == greyRook2Rectangle1.posY &&
                   greyRook2Rectangle1.posX == greyRook2Rectangle1.posX + 100) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == greyRook2Rectangle1.posY &&
                   greyKnight1Rectangle1.posX == greyRook2Rectangle1.posX + 100) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == greyRook2Rectangle1.posY &&
                   greyKnight2Rectangle1.posX == greyRook2Rectangle1.posX + 100) {
                    greyRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    greyRook2Rectangle1.posX = greyRook2Rectangle1.posX + 100;
                    greyRook2Base.x1 = greyRook2Base.x1 + 100;
                    greyRook2Base.x2 = greyRook2Base.x2 + 100;
                    greyRook2Rectangle1.x1 = greyRook2Rectangle1.x1 + 100;
                    greyRook2Rectangle1.x2 = greyRook2Rectangle1.x2 + 100;
                    greyRook2Rectangle2.x1 = greyRook2Rectangle2.x1 + 100;
                    greyRook2Rectangle2.x2 = greyRook2Rectangle2.x2 + 100;
                    greyRook2Ellipse.x1 = greyRook2Ellipse.x1 + 100;
                    greyRook2Ellipse.x2 = greyRook2Ellipse.x2 + 100;
                }

                return flag;
            }
        }

        else {

            greyRook2Rectangle1.failedpath = TRUE;
            return TRUE;
        }
    }
}

boolean moveRedRook2(UINT msg, int j, int i, int pos, int o) {

    if(greyKnight1Rectangle1.posX == redRook2Rectangle1.posX &&
       greyKnight1Rectangle1.posY == redRook2Rectangle1.posY) {
        redRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(greyKnight2Rectangle1.posX == redRook2Rectangle1.posX &&
       greyKnight2Rectangle1.posY == redRook2Rectangle1.posY) {
        redRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(greyBishop1Square.posX == redRook2Rectangle1.posX &&
       greyBishop1Square.posY == redRook2Rectangle1.posY) {
        redRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(greyBishop2Square.posX == redRook2Rectangle1.posX &&
       greyBishop2Square.posY == redRook2Rectangle1.posY) {
        redRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(greyRook1Rectangle1.posX == redRook2Rectangle1.posX &&
       greyRook1Rectangle1.posY == redRook2Rectangle1.posY) {
        redRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(greyRook2Rectangle1.posX == redRook2Rectangle1.posX &&
       greyRook2Rectangle1.posY == redRook2Rectangle1.posY) {
        redRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(greyQueenSquare.posX == redRook2Rectangle1.posX &&
       greyQueenSquare.posY == redRook2Rectangle1.posY) {
        redRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    for(int g=0; g<8; g++) {
        if(greyPawnsBase[g].posX == redRook2Rectangle1.posX &&
           greyPawnsBase[g].posY == redRook2Rectangle1.posY) {
            redRook2Rectangle1.failedpath = TRUE;
            return TRUE;
        }
    }
    boolean fail = FALSE;
    if(o == 0) {
        fail = FALSE;
    } else {
        fail = TRUE;
        //redRook2Rectangle1.failedpath = fail;
    }
    if(pos < 0) {
        boolean f = FALSE;
        if(pos < -100) {
            f = moveRedRook2(msg, j, i, pos + 100, o);
        }
        if(!f) {
            if(pos == o) {

                redRook2Rectangle1.posY = redRook2Rectangle1.posY - 100;
                redRook2Base.y1 = redRook2Base.y1 - 100;
                redRook2Base.y2 = redRook2Base.y2 - 100;
                redRook2Rectangle1.y1 = redRook2Rectangle1.y1 - 100;
                redRook2Rectangle1.y2 = redRook2Rectangle1.y2 - 100;
                redRook2Rectangle2.y1 = redRook2Rectangle2.y1 - 100;
                redRook2Rectangle2.y2 = redRook2Rectangle2.y2 - 100;
                redRook2Ellipse.y1 = redRook2Ellipse.y1 - 100;
                redRook2Ellipse.y2 = redRook2Ellipse.y2 - 100;
                
                if(j*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redRook2Rectangle1.posY &&
                           redPawnsBase[s].posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop1Square.posY == redRook2Rectangle1.posY &&
                           redBishop1Square.posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == redRook2Rectangle1.posY &&
                           redBishop2Square.posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == redRook2Rectangle1.posY &&
                           redKnight1Rectangle1.posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redRook2Rectangle1.posY &&
                           redKnight2Rectangle1.posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook1Rectangle1.posY == redRook2Rectangle1.posY &&
                           redRook1Rectangle1.posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redRook2Rectangle1.posY &&
                           redKingSquare.posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyPawnsBase[s].posY == redRook2Rectangle1.posY &&
                           greyPawnsBase[s].posX == redRook2Rectangle1.posX) {
                            greyPawnsBase[s].posX = -1000;
                            greyPawnsBase[s].x1 = -1000;
                            greyPawnsBase[s].x2 = -1000;
                            greyPawnsEllipse[s].x1 = -1000;
                            greyPawnsEllipse[s].x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook1Rectangle1.posY == redRook2Rectangle1.posY &&
                           greyRook1Rectangle1.posX == redRook2Rectangle1.posX) {
                            greyRook1Rectangle1.posX = -1000;
                            greyRook1Rectangle1.x1 = -1000;
                            greyRook1Rectangle1.x2 = -1000;
                            greyRook1Rectangle2.x1 = -1000;
                            greyRook1Rectangle2.x2 = -1000;
                            greyRook1Base.x1 = -1000;
                            greyRook1Base.x2 = -1000;
                            greyRook1Ellipse.x1 = -1000;
                            greyRook1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook2Rectangle1.posY == redRook2Rectangle1.posY &&
                           greyRook2Rectangle1.posX == redRook2Rectangle1.posX) {
                            greyRook2Rectangle1.posX = -1000;
                            greyRook2Rectangle1.x1 = -1000;
                            greyRook2Rectangle1.x2 = -1000;
                            greyRook2Rectangle2.x1 = -1000;
                            greyRook2Rectangle2.x2 = -1000;
                            greyRook2Base.x1 = -1000;
                            greyRook2Base.x2 = -1000;
                            greyRook2Ellipse.x1 = -1000;
                            greyRook2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook2Rectangle1.posY == redRook2Rectangle1.posY &&
                           greyRook2Rectangle1.posX == redRook2Rectangle1.posX) {
                            greyRook2Rectangle1.posX = -1000;
                            greyRook2Rectangle1.x1 = -1000;
                            greyRook2Rectangle1.x2 = -1000;
                            greyRook2Rectangle2.x1 = -1000;
                            greyRook2Rectangle2.x2 = -1000;
                            greyRook2Base.x1 = -1000;
                            greyRook2Base.x2 = -1000;
                            greyRook2Ellipse.x1 = -1000;
                            greyRook2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyQueenSquare.posY == redRook2Rectangle1.posY &&
                           greyQueenSquare.posX == redRook2Rectangle1.posX) {
                            greyQueenSquare.posX = -1000;
                            greyQueenSquare.x1 = -1000;
                            greyQueenSquare.x2 = -1000;
                            greyQueenBase.x1 = -1000;
                            greyQueenBase.x2 = -1000;
                            greyQueenEllipse.x1 = -1000;
                            greyQueenEllipse.x2 = -1000;
                            greyQueenRectangle1.x1 = -1000;
                            greyQueenRectangle1.x2 = -1000;
                            greyQueenRectangle2.x1 = -1000;
                            greyQueenRectangle2.x2 = -1000;
                            greyQueenRectangle3.x1 = -1000;
                            greyQueenRectangle3.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    if(redPawnsBase[s].posY == redRook2Rectangle1.posY - 100 &&
                       redPawnsBase[s].posX == redRook2Rectangle1.posX) {
                        redRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redPawnsBase[s].posY == redRook2Rectangle1.posY - 100 &&
                       redPawnsBase[s].posX == redRook2Rectangle1.posX) {
                        redRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == redRook2Rectangle1.posY - 100 &&
                       greyQueenSquare.posX == redRook2Rectangle1.posX) {
                        redRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyPawnsBase[i].posY == redRook2Rectangle1.posY - 100 &&
                       greyPawnsBase[i].posX == redRook2Rectangle1.posX) {
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == redRook2Rectangle1.posY - 100 &&
                   redBishop1Square.posX == redRook2Rectangle1.posX) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == redRook2Rectangle1.posY - 100 &&
                   redRook1Rectangle1.posX == redRook2Rectangle1.posX) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == redRook2Rectangle1.posY - 100 &&
                   redKnight1Rectangle1.posX == redRook2Rectangle1.posX) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == redRook2Rectangle1.posY - 100 &&
                   redKnight2Rectangle1.posX == redRook2Rectangle1.posX) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == redRook2Rectangle1.posY - 100 &&
                   redBishop1Square.posX == redRook2Rectangle1.posX) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook1Rectangle1.posY == redRook2Rectangle1.posY - 100 &&
                   greyRook1Rectangle1.posX == redRook2Rectangle1.posX) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == redRook2Rectangle1.posY - 100 &&
                   greyKnight1Rectangle1.posX == redRook2Rectangle1.posX) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == redRook2Rectangle1.posY - 100 &&
                   greyKnight2Rectangle1.posX == redRook2Rectangle1.posX) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    redRook2Rectangle1.posY = redRook2Rectangle1.posY - 100;
                    redRook2Base.y1 = redRook2Base.y1 - 100;
                    redRook2Base.y2 = redRook2Base.y2 - 100;
                    redRook2Rectangle1.y1 = redRook2Rectangle1.y1 - 100;
                    redRook2Rectangle1.y2 = redRook2Rectangle1.y2 - 100;
                    redRook2Rectangle2.y1 = redRook2Rectangle2.y1 - 100;
                    redRook2Rectangle2.y2 = redRook2Rectangle2.y2 - 100;
                    redRook2Ellipse.y1 = redRook2Ellipse.y1 - 100;
                    redRook2Ellipse.y2 = redRook2Ellipse.y2 - 100;
                }

                return flag;
            }
        }

        else {

            return TRUE;
        }
    } else if(pos > 0) {
        boolean f = FALSE;
        if(pos > 100) {
            f = moveRedRook2(msg, j, i, pos - 100, o);
        }
        if(!f) {
            if(pos == o) {

                redRook2Rectangle1.posY = redRook2Rectangle1.posY + 100;
                redRook2Base.y1 = redRook2Base.y1 + 100;
                redRook2Base.y2 = redRook2Base.y2 + 100;
                redRook2Rectangle1.y1 = redRook2Rectangle1.y1 + 100;
                redRook2Rectangle1.y2 = redRook2Rectangle1.y2 + 100;
                redRook2Rectangle2.y1 = redRook2Rectangle2.y1 + 100;
                redRook2Rectangle2.y2 = redRook2Rectangle2.y2 + 100;
                redRook2Ellipse.y1 = redRook2Ellipse.y1 + 100;
                redRook2Ellipse.y2 = redRook2Ellipse.y2 + 100;
                
                if(j*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redRook2Rectangle1.posY &&
                           redPawnsBase[s].posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop1Square.posY == redRook2Rectangle1.posY &&
                           redBishop1Square.posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == redRook2Rectangle1.posY &&
                           redBishop2Square.posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == redRook2Rectangle1.posY &&
                           redKnight1Rectangle1.posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redRook2Rectangle1.posY &&
                           redKnight2Rectangle1.posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook1Rectangle1.posY == redRook2Rectangle1.posY &&
                           redRook1Rectangle1.posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redRook2Rectangle1.posY &&
                           redKingSquare.posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyPawnsBase[s].posY == redRook2Rectangle1.posY &&
                           greyPawnsBase[s].posX == redRook2Rectangle1.posX) {
                            greyPawnsBase[s].posX = -1000;
                            greyPawnsBase[s].x1 = -1000;
                            greyPawnsBase[s].x2 = -1000;
                            greyPawnsEllipse[s].x1 = -1000;
                            greyPawnsEllipse[s].x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook1Rectangle1.posY == redRook2Rectangle1.posY &&
                           greyRook1Rectangle1.posX == redRook2Rectangle1.posX) {
                            greyRook1Rectangle1.posX = -1000;
                            greyRook1Rectangle1.x1 = -1000;
                            greyRook1Rectangle1.x2 = -1000;
                            greyRook1Rectangle2.x1 = -1000;
                            greyRook1Rectangle2.x2 = -1000;
                            greyRook1Base.x1 = -1000;
                            greyRook1Base.x2 = -1000;
                            greyRook1Ellipse.x1 = -1000;
                            greyRook1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook2Rectangle1.posY == redRook2Rectangle1.posY &&
                           greyRook2Rectangle1.posX == redRook2Rectangle1.posX) {
                            greyRook2Rectangle1.posX = -1000;
                            greyRook2Rectangle1.x1 = -1000;
                            greyRook2Rectangle1.x2 = -1000;
                            greyRook2Rectangle2.x1 = -1000;
                            greyRook2Rectangle2.x2 = -1000;
                            greyRook2Base.x1 = -1000;
                            greyRook2Base.x2 = -1000;
                            greyRook2Ellipse.x1 = -1000;
                            greyRook2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyQueenSquare.posY == redRook2Rectangle1.posY &&
                           greyQueenSquare.posX == redRook2Rectangle1.posX) {
                            greyQueenSquare.posX = -1000;
                            greyQueenSquare.x1 = -1000;
                            greyQueenSquare.x2 = -1000;
                            greyQueenBase.x1 = -1000;
                            greyQueenBase.x2 = -1000;
                            greyQueenEllipse.x1 = -1000;
                            greyQueenEllipse.x2 = -1000;
                            greyQueenRectangle1.x1 = -1000;
                            greyQueenRectangle1.x2 = -1000;
                            greyQueenRectangle2.x1 = -1000;
                            greyQueenRectangle2.x2 = -1000;
                            greyQueenRectangle3.x1 = -1000;
                            greyQueenRectangle3.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    if(redPawnsBase[s].posY == redRook2Rectangle1.posY + 100 &&
                       redPawnsBase[s].posX == redRook2Rectangle1.posX) {
                        redRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redPawnsBase[s].posY == redRook2Rectangle1.posY + 100 &&
                       redPawnsBase[s].posX == redRook2Rectangle1.posX) {
                        redRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyQueenSquare.posY == redRook2Rectangle1.posY + 100 &&
                       greyQueenSquare.posX == redRook2Rectangle1.posX) {
                        redRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyPawnsBase[i].posY == redRook2Rectangle1.posY + 100 &&
                       greyPawnsBase[i].posX == redRook2Rectangle1.posX) {
                        redRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == redRook2Rectangle1.posY + 100 &&
                   redBishop1Square.posX == redRook2Rectangle1.posX) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == redRook2Rectangle1.posY + 100 &&
                   redRook1Rectangle1.posX == redRook2Rectangle1.posX) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == redRook2Rectangle1.posY + 100 &&
                   redKnight1Rectangle1.posX == redRook2Rectangle1.posX) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == redRook2Rectangle1.posY + 100 &&
                   redKnight2Rectangle1.posX == redRook2Rectangle1.posX) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == redRook2Rectangle1.posY + 100 &&
                   redBishop1Square.posX == redRook2Rectangle1.posX) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook1Rectangle1.posY == redRook2Rectangle1.posY + 100 &&
                   greyRook1Rectangle1.posX == redRook2Rectangle1.posX) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == redRook2Rectangle1.posY + 100 &&
                   greyKnight1Rectangle1.posX == redRook2Rectangle1.posX) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == redRook2Rectangle1.posY + 100 &&
                   greyKnight2Rectangle1.posX == redRook2Rectangle1.posX) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    redRook2Rectangle1.posY = redRook2Rectangle1.posY + 100;
                    redRook2Base.y1 = redRook2Base.y1 + 100;
                    redRook2Base.y2 = redRook2Base.y2 + 100;
                    redRook2Rectangle1.y1 = redRook2Rectangle1.y1 + 100;
                    redRook2Rectangle1.y2 = redRook2Rectangle1.y2 + 100;
                    redRook2Rectangle2.y1 = redRook2Rectangle2.y1 + 100;
                    redRook2Rectangle2.y2 = redRook2Rectangle2.y2 + 100;
                    redRook2Ellipse.y1 = redRook2Ellipse.y1 + 100;
                    redRook2Ellipse.y2 = redRook2Ellipse.y2 + 100;
                }

                return flag;
            }
        }

        else {

            return TRUE;
        }
    }
}

boolean moveRedRook2Side(UINT msg, int j, int i, int pos, int o) {
    if(greyKnight1Rectangle1.posX == redRook2Rectangle1.posX &&
       greyKnight1Rectangle1.posY == redRook2Rectangle1.posY) {
        redRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(greyKnight2Rectangle1.posX == redRook2Rectangle1.posX &&
       greyKnight2Rectangle1.posY == redRook2Rectangle1.posY) {
        redRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(greyBishop1Square.posX == redRook2Rectangle1.posX &&
       greyBishop1Square.posY == redRook2Rectangle1.posY) {
        redRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(greyBishop2Square.posX == redRook2Rectangle1.posX &&
       greyBishop2Square.posY == redRook2Rectangle1.posY) {
        redRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(greyRook1Rectangle1.posX == redRook2Rectangle1.posX &&
       greyRook1Rectangle1.posY == redRook2Rectangle1.posY) {
        redRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(greyRook2Rectangle1.posX == redRook2Rectangle1.posX &&
       greyRook2Rectangle1.posY == redRook2Rectangle1.posY) {
        redRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    if(greyQueenSquare.posX == redRook2Rectangle1.posX &&
       greyQueenSquare.posY == redRook2Rectangle1.posY) {
        redRook2Rectangle1.failedpath = TRUE;
        return TRUE;
    }
    for(int g=0; g<8; g++) {
        if(greyPawnsBase[g].posX == redRook2Rectangle1.posX &&
           greyPawnsBase[g].posY == redRook2Rectangle1.posY) {
            redRook2Rectangle1.failedpath = TRUE;
            return TRUE;
        }
    }
    boolean fail = FALSE;
    if(pos == 0) {
        fail = FALSE;
    } else {
        fail = TRUE;
        //redRook2Rectangle1.failedpath = fail;
    }
    if(pos < 0) {
        boolean f = FALSE;
        if(pos < -100) {
            f = moveRedRook2Side(msg, j, i, pos + 100, o);
        }
        if(!f) {
            if(pos == o) {

                redRook2Rectangle1.posX = redRook2Rectangle1.posX - 100;
                redRook2Base.x1 = redRook2Base.x1 - 100;
                redRook2Base.x2 = redRook2Base.x2 - 100;
                redRook2Rectangle1.x1 = redRook2Rectangle1.x1 - 100;
                redRook2Rectangle1.x2 = redRook2Rectangle1.x2 - 100;
                redRook2Rectangle2.x1 = redRook2Rectangle2.x1 - 100;
                redRook2Rectangle2.x2 = redRook2Rectangle2.x2 - 100;
                redRook2Ellipse.x1 = redRook2Ellipse.x1 - 100;
                redRook2Ellipse.x2 = redRook2Ellipse.x2 - 100;
                
                if(i*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redRook2Rectangle1.posY &&
                           redPawnsBase[s].posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop1Square.posY == redRook2Rectangle1.posY &&
                           redBishop1Square.posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == redRook2Rectangle1.posY &&
                           redBishop2Square.posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == redRook2Rectangle1.posY &&
                           redKnight1Rectangle1.posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redRook2Rectangle1.posY &&
                           redKnight2Rectangle1.posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook1Rectangle1.posY == redRook2Rectangle1.posY &&
                           redRook1Rectangle1.posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redRook2Rectangle1.posY &&
                           redKingSquare.posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyPawnsBase[s].posY == redRook2Rectangle1.posY &&
                           greyPawnsBase[s].posX == redRook2Rectangle1.posX) {
                            greyPawnsBase[s].posX = -1000;
                            greyPawnsBase[s].x1 = -1000;
                            greyPawnsBase[s].x2 = -1000;
                            greyPawnsEllipse[s].x1 = -1000;
                            greyPawnsEllipse[s].x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook1Rectangle1.posY == redRook2Rectangle1.posY &&
                           greyRook1Rectangle1.posX == redRook2Rectangle1.posX) {
                            greyRook1Rectangle1.posX = -1000;
                            greyRook1Rectangle1.x1 = -1000;
                            greyRook1Rectangle1.x2 = -1000;
                            greyRook1Rectangle2.x1 = -1000;
                            greyRook1Rectangle2.x2 = -1000;
                            greyRook1Base.x1 = -1000;
                            greyRook1Base.x2 = -1000;
                            greyRook1Ellipse.x1 = -1000;
                            greyRook1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook2Rectangle1.posY == redRook2Rectangle1.posY &&
                           greyRook2Rectangle1.posX == redRook2Rectangle1.posX) {
                            greyRook2Rectangle1.posX = -1000;
                            greyRook2Rectangle1.x1 = -1000;
                            greyRook2Rectangle1.x2 = -1000;
                            greyRook2Rectangle2.x1 = -1000;
                            greyRook2Rectangle2.x2 = -1000;
                            greyRook2Base.x1 = -1000;
                            greyRook2Base.x2 = -1000;
                            greyRook2Ellipse.x1 = -1000;
                            greyRook2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyQueenSquare.posY == redRook2Rectangle1.posY &&
                           greyQueenSquare.posX == redRook2Rectangle1.posX) {
                            greyQueenSquare.posX = -1000;
                            greyQueenSquare.x1 = -1000;
                            greyQueenSquare.x2 = -1000;
                            greyQueenBase.x1 = -1000;
                            greyQueenBase.x2 = -1000;
                            greyQueenEllipse.x1 = -1000;
                            greyQueenEllipse.x2 = -1000;
                            greyQueenRectangle1.x1 = -1000;
                            greyQueenRectangle1.x2 = -1000;
                            greyQueenRectangle2.x1 = -1000;
                            greyQueenRectangle2.x2 = -1000;
                            greyQueenRectangle3.x1 = -1000;
                            greyQueenRectangle3.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int s=0; s<8; s++) {
                    if(redPawnsBase[s].posY == redRook2Rectangle1.posY &&
                       redPawnsBase[s].posX == redRook2Rectangle1.posX - 100) {
                        redRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyPawnsBase[s].posY == redRook2Rectangle1.posY &&
                       greyPawnsBase[s].posX == redRook2Rectangle1.posX - 100) {
                        redRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redQueenSquare.posY == redRook2Rectangle1.posY &&
                       redQueenSquare.posX == redRook2Rectangle1.posX - 100) {
                        redRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyPawnsBase[s].posY == redRook2Rectangle1.posY &&
                       greyPawnsBase[s].posX == redRook2Rectangle1.posX - 100) {
                        redRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == redRook2Rectangle1.posY &&
                   redBishop1Square.posX == redRook2Rectangle1.posX - 100) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == redRook2Rectangle1.posY &&
                   redRook1Rectangle1.posX == redRook2Rectangle1.posX - 100) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == redRook2Rectangle1.posY &&
                   redKnight1Rectangle1.posX == redRook2Rectangle1.posX - 100) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == redRook2Rectangle1.posY &&
                   redKnight2Rectangle1.posX == redRook2Rectangle1.posX - 100) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == redRook2Rectangle1.posY &&
                   redBishop1Square.posX == redRook2Rectangle1.posX - 100) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook1Rectangle1.posY == redRook2Rectangle1.posY &&
                   greyRook1Rectangle1.posX == redRook2Rectangle1.posX - 100) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == redRook2Rectangle1.posY &&
                   greyKnight1Rectangle1.posX == redRook2Rectangle1.posX - 100) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == redRook2Rectangle1.posY &&
                   greyKnight2Rectangle1.posX == redRook2Rectangle1.posX - 100) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    redRook2Rectangle1.posX = redRook2Rectangle1.posX - 100;
                    redRook2Base.x1 = redRook2Base.x1 - 100;
                    redRook2Base.x2 = redRook2Base.x2 - 100;
                    redRook2Rectangle1.x1 = redRook2Rectangle1.x1 - 100;
                    redRook2Rectangle1.x2 = redRook2Rectangle1.x2 - 100;
                    redRook2Rectangle2.x1 = redRook2Rectangle2.x1 - 100;
                    redRook2Rectangle2.x2 = redRook2Rectangle2.x2 - 100;
                    redRook2Ellipse.x1 = redRook2Ellipse.x1 - 100;
                    redRook2Ellipse.x2 = redRook2Ellipse.x2 - 100;
                }

                return flag;
            }
        }

        else {

            return TRUE;
        }
    } else if(pos > 0) {
        boolean f = FALSE;
        if(pos > 100) {
            f = moveRedRook2Side(msg, j, i, pos - 100, o);
        }
        if(!f) {
            if(pos == o) {

                redRook2Rectangle1.posX = redRook2Rectangle1.posX + 100;
                redRook2Base.x1 = redRook2Base.x1 + 100;
                redRook2Base.x2 = redRook2Base.x2 + 100;
                redRook2Rectangle1.x1 = redRook2Rectangle1.x1 + 100;
                redRook2Rectangle1.x2 = redRook2Rectangle1.x2 + 100;
                redRook2Rectangle2.x1 = redRook2Rectangle2.x1 + 100;
                redRook2Rectangle2.x2 = redRook2Rectangle2.x2 + 100;
                redRook2Ellipse.x1 = redRook2Ellipse.x1 + 100;
                redRook2Ellipse.x2 = redRook2Ellipse.x2 + 100;

                if(i*100 == o || 1 == 1) {
                    
                    for(int s=0; s<8; s++) {
                        if(redPawnsBase[s].posY == redRook2Rectangle1.posY &&
                           redPawnsBase[s].posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop1Square.posY == redRook2Rectangle1.posY &&
                           redBishop1Square.posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redBishop2Square.posY == redRook2Rectangle1.posY &&
                           redBishop2Square.posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight1Rectangle1.posY == redRook2Rectangle1.posY &&
                           redKnight1Rectangle1.posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKnight2Rectangle1.posY == redRook2Rectangle1.posY &&
                           redKnight2Rectangle1.posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redRook1Rectangle1.posY == redRook2Rectangle1.posY &&
                           redRook1Rectangle1.posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(redKingSquare.posY == redRook2Rectangle1.posY &&
                           redKingSquare.posX == redRook2Rectangle1.posX) {
                            redRook2Rectangle1.failedpath = TRUE;
                            return TRUE;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyPawnsBase[s].posY == redRook2Rectangle1.posY &&
                           greyPawnsBase[s].posX == redRook2Rectangle1.posX) {
                            greyPawnsBase[s].posX = -1000;
                            greyPawnsBase[s].x1 = -1000;
                            greyPawnsBase[s].x2 = -1000;
                            greyPawnsEllipse[s].x1 = -1000;
                            greyPawnsEllipse[s].x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook1Rectangle1.posY == redRook2Rectangle1.posY &&
                           greyRook1Rectangle1.posX == redRook2Rectangle1.posX) {
                            greyRook1Rectangle1.posX = -1000;
                            greyRook1Rectangle1.x1 = -1000;
                            greyRook1Rectangle1.x2 = -1000;
                            greyRook1Rectangle2.x1 = -1000;
                            greyRook1Rectangle2.x2 = -1000;
                            greyRook1Base.x1 = -1000;
                            greyRook1Base.x2 = -1000;
                            greyRook1Ellipse.x1 = -1000;
                            greyRook1Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyRook2Rectangle1.posY == redRook2Rectangle1.posY &&
                           greyRook2Rectangle1.posX == redRook2Rectangle1.posX) {
                            greyRook2Rectangle1.posX = -1000;
                            greyRook2Rectangle1.x1 = -1000;
                            greyRook2Rectangle1.x2 = -1000;
                            greyRook2Rectangle2.x1 = -1000;
                            greyRook2Rectangle2.x2 = -1000;
                            greyRook2Base.x1 = -1000;
                            greyRook2Base.x2 = -1000;
                            greyRook2Ellipse.x1 = -1000;
                            greyRook2Ellipse.x2 = -1000;
                        }
                        if(WM_RBUTTONDOWN == msg || 1 == 1)
                        if(greyQueenSquare.posY == redRook2Rectangle1.posY &&
                           greyQueenSquare.posX == redRook2Rectangle1.posX) {
                            greyQueenSquare.posX = -1000;
                            greyQueenSquare.x1 = -1000;
                            greyQueenSquare.x2 = -1000;
                            greyQueenBase.x1 = -1000;
                            greyQueenBase.x2 = -1000;
                            greyQueenEllipse.x1 = -1000;
                            greyQueenEllipse.x2 = -1000;
                            greyQueenRectangle1.x1 = -1000;
                            greyQueenRectangle1.x2 = -1000;
                            greyQueenRectangle2.x1 = -1000;
                            greyQueenRectangle2.x2 = -1000;
                            greyQueenRectangle3.x1 = -1000;
                            greyQueenRectangle3.x2 = -1000;
                        }
                    }
                }
                
                return FALSE;

            } else {

                boolean flag = FALSE;

                for(int i=0; i<8; i++) {
                    if(redPawnsBase[i].posY == redRook2Rectangle1.posY &&
                       redPawnsBase[i].posX == redRook2Rectangle1.posX + 100) {
                        redRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyPawnsBase[i].posY == redRook2Rectangle1.posY &&
                       greyPawnsBase[i].posX == redRook2Rectangle1.posX + 100) {
                        redRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(redQueenSquare.posY == redRook2Rectangle1.posY &&
                       redQueenSquare.posX == redRook2Rectangle1.posX + 100) {
                        redRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                    if(greyPawnsBase[i].posY == redRook2Rectangle1.posY &&
                       greyPawnsBase[i].posX == redRook2Rectangle1.posX + 100) {
                        redRook2Rectangle1.failedpath = TRUE;
                        flag = TRUE;
                    }
                }
                if(redBishop1Square.posY == redRook2Rectangle1.posY &&
                   redBishop1Square.posX == redRook2Rectangle1.posX + 100) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redRook1Rectangle1.posY == redRook2Rectangle1.posY &&
                   redRook1Rectangle1.posX == redRook2Rectangle1.posX + 100) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight1Rectangle1.posY == redRook2Rectangle1.posY &&
                   redKnight1Rectangle1.posX == redRook2Rectangle1.posX + 100) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redKnight2Rectangle1.posY == redRook2Rectangle1.posY &&
                   redKnight2Rectangle1.posX == redRook2Rectangle1.posX + 100) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(redBishop1Square.posY == redRook2Rectangle1.posY &&
                   redBishop1Square.posX == redRook2Rectangle1.posX + 100) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyRook1Rectangle1.posY == redRook2Rectangle1.posY &&
                   greyRook1Rectangle1.posX == redRook2Rectangle1.posX + 100) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight1Rectangle1.posY == redRook2Rectangle1.posY &&
                   greyKnight1Rectangle1.posX == redRook2Rectangle1.posX + 100) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }
                if(greyKnight2Rectangle1.posY == redRook2Rectangle1.posY &&
                   greyKnight2Rectangle1.posX == redRook2Rectangle1.posX + 100) {
                    redRook2Rectangle1.failedpath = TRUE;
                    flag = TRUE;
                }

                if(!flag) {
                    redRook2Rectangle1.posX = redRook2Rectangle1.posX + 100;
                    redRook2Base.x1 = redRook2Base.x1 + 100;
                    redRook2Base.x2 = redRook2Base.x2 + 100;
                    redRook2Rectangle1.x1 = redRook2Rectangle1.x1 + 100;
                    redRook2Rectangle1.x2 = redRook2Rectangle1.x2 + 100;
                    redRook2Rectangle2.x1 = redRook2Rectangle2.x1 + 100;
                    redRook2Rectangle2.x2 = redRook2Rectangle2.x2 + 100;
                    redRook2Ellipse.x1 = redRook2Ellipse.x1 + 100;
                    redRook2Ellipse.x2 = redRook2Ellipse.x2 + 100;
                }

                return flag;
            }
        }

        else {

            return TRUE;
        }
    }
}